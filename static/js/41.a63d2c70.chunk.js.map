{"version":3,"sources":["i18n/translationKeys.js","components/modals/confirmModal.js","utilities/validate.js","containers/pages/Role/Role.js"],"names":["__webpack_exports__","translations","languageName","selectLanguage","button","btnOk","btnCancel","message","errorGetAllAPI","noDataFound","infoTitleConfirmModal","switchStatusConfirmModal","switchStatusInfo","switchStatusSuccessInfo","switchStatusErrorInfo","deleteConfirmModal","deleteInfo","deleteSuccessInfo","deleteErrorInfo","usersList","rolesList","active","inActive","deleted","pending","processingSpinner","ConfirmModal","_React$Component","Object","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this$props","props","isOpenModal","className","toggleModal","headerTitle","bodyContent","sizeModal","textBtnYes","textBtnNo","backdropModal","selectedYes","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_6__","isOpen","size","backdrop","toggle","color","onClick","React","Component","isNullOrEmptyObject","obj","JSON","stringify","removeItemFromItems","item","items","length","index","indexOf","splice","__webpack_require__","d","_handleItem","_currentAtion","_renderNumber","Role","_this","call","openModalChangeStatus","handleToggleModal","commonConstant","CHANGE_STATUS","handleChangeStatus","Id","changeStatusRole","openModalDelete","DELETE","handleDelete","RoleName","deleteRole","nameFn","isSelected","undefined","setState","isShowStatusConfirmModal","state","isShowDeleteConfirmModal","handleEdit","console","log","getAllRoles","nextProps","t","roles","deleteItem","changeStatus","isLoading","responseData","data","currentList","isError","toastr","error","success","classAnimated","isLoadingDelete","_this2","columns","keys","map","id","Header","headerClassName","accessor","show","minWidth","unshift","Cell","row","push","titleStatus","original","Status","colorStatus","reactstrap__WEBPACK_IMPORTED_MODULE_10__","width","Fragment","propsOfTable","defaultPageSize","react_loading_overlay__WEBPACK_IMPORTED_MODULE_12___default","spinner","text","xs","lg","react_table__WEBPACK_IMPORTED_MODULE_7__","_components_modals_confirmModal__WEBPACK_IMPORTED_MODULE_14__","react_spinners__WEBPACK_IMPORTED_MODULE_11__","sizeUnit","loading","renderMainContent","mapDispatchToProps","translate","connect","getAllRolesReducer","changeStatusRoleReducer","deleteRoleReducer"],"mappings":"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","file":"static/js/41.a63d2c70.chunk.js","sourcesContent":["export default {\r\n    translations: {\r\n        languageName: 'translations:languageName',\r\n        selectLanguage: 'translations:selectLanguage',\r\n    },\r\n    button: {\r\n        btnOk: 'button:btnOk',\r\n        btnCancel: 'button:btnCancel',\r\n    },\r\n    message: {\r\n        // API\r\n        errorGetAllAPI: 'message:errorGetAllAPI',\r\n        noDataFound: 'message:noDataFound',\r\n\r\n        // MODAL CONFIRM\r\n        infoTitleConfirmModal: 'message:infoTitleConfirmModal',\r\n\r\n        switchStatusConfirmModal: 'message:switchStatusConfirmModal',\r\n        switchStatusInfo: 'message:switchStatusInfo',\r\n        switchStatusSuccessInfo: 'message:switchStatusSuccessInfo',\r\n        switchStatusErrorInfo: 'message:switchStatusErrorInfo',\r\n\r\n        deleteConfirmModal: 'message:deleteConfirmModal',\r\n        deleteInfo: 'message:deleteInfo',\r\n        deleteSuccessInfo: 'message:deleteSuccessInfo',\r\n        deleteErrorInfo: 'message:deleteErrorInfo',\r\n\r\n        // USERS\r\n        usersList: 'message:usersList',\r\n\r\n        // ROLES\r\n        rolesList: 'message:rolesList',\r\n\r\n        // STATUS\r\n        active: 'message:active',\r\n        inActive: 'message:inActive',\r\n        deleted: 'message:deleted',\r\n        pending: 'message:pending',\r\n\r\n        // SPINNER\r\n        processingSpinner: 'message:processingSpinner',\r\n    }\r\n};","import React from 'react';\r\nimport {\r\n  Button, Modal, ModalBody, ModalFooter, ModalHeader,\r\n} from \"reactstrap\";\r\n\r\nexport class ConfirmModal extends React.Component {\r\n  render() {\r\n    const {\r\n      isOpenModal, className, toggleModal,\r\n      headerTitle, bodyContent, sizeModal,\r\n      textBtnYes, textBtnNo, backdropModal,\r\n      selectedYes\r\n    } = this.props;\r\n    return (\r\n      <Modal isOpen={isOpenModal} size={sizeModal} backdrop={backdropModal}\r\n        className={'modal-' + className} toggle={toggleModal}>\r\n        <ModalHeader toggle={toggleModal}>{headerTitle}</ModalHeader>\r\n        <ModalBody>{bodyContent}</ModalBody>\r\n        <ModalFooter>\r\n          <Button className=\"label-button-confirm\" color={className} onClick={selectedYes}>{textBtnYes}</Button>{' '}\r\n          <Button className=\"label-button-confirm\" color=\"secondary\" onClick={toggleModal}>{textBtnNo}</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\nexport default ConfirmModal;\r\n","//All function return value is boolean type\r\nexport function isNullOrEmptyObject(obj) {\r\n    if (obj) return JSON.stringify(obj) === JSON.stringify({});\r\n    else return true;\r\n}\r\n\r\nexport function removeItemFromItems(item, items) {\r\n    if (items && items.length > 0 && item) {\r\n        const index = items.indexOf(item);\r\n        if (index > -1) {\r\n            items.splice(index, 1);\r\n        }\r\n    }\r\n    return items;\r\n}","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport ReactTable from \"react-table\";\r\nimport { translate } from 'react-i18next';\r\nimport key from '../../../i18n/translationKeys';\r\nimport { Card, CardBody, CardHeader, Col, Row, Badge } from \"reactstrap\";\r\nimport { RingLoader } from 'react-spinners';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport { ConfirmModal } from '../../../components/modals/confirmModal';\r\nimport { getAllRoles, changeStatusRole, deleteRole } from '../../../actions/role';\r\nimport { commonConstant } from '../../../contants/common';\r\nimport { isNullOrEmptyObject, removeItemFromItems } from '../../../utilities/validate';\r\n\r\nvar _handleItem = null;\r\nvar _currentAtion = null;\r\nvar _renderNumber = 0;\r\nclass Role extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowStatusConfirmModal: false,\r\n            isShowDeleteConfirmModal: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAllRoles();\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        let { t, roles, deleteItem, changeStatus } = nextProps;\r\n        if (deleteItem && deleteItem.isLoading) {\r\n            _currentAtion = commonConstant.DELETE;\r\n            return;\r\n        }\r\n        if (changeStatus && changeStatus.isLoading) {\r\n            _currentAtion = commonConstant.CHANGE_STATUS;\r\n            return;\r\n        }\r\n        if (roles.responseData && roles.responseData.data && roles.responseData.data.length > 0) {\r\n            let currentList = roles.responseData.data;\r\n            if (_currentAtion === commonConstant.DELETE && deleteItem && !deleteItem.isLoading && !isNullOrEmptyObject(deleteItem.responseData)) {\r\n                roles.responseData.data = removeItemFromItems(_handleItem, currentList);\r\n                deleteItem.isError ? toastr.error(t(key.message.deleteInfo), t(key.message.deleteErrorInfo)) :\r\n                    toastr.success(t(key.message.deleteInfo), t(key.message.deleteSuccessInfo));\r\n            }\r\n\r\n            else if (_currentAtion === commonConstant.CHANGE_STATUS && changeStatus && !isNullOrEmptyObject(changeStatus.responseData) && !changeStatus.isLoading) {\r\n                changeStatus.isError ? toastr.error(t(key.message.switchStatusInfo), t(key.message.switchStatusErrorInfo)) :\r\n                    toastr.success(t(key.message.switchStatusInfo), t(key.message.switchStatusSuccessInfo));\r\n            }\r\n            _currentAtion = null;\r\n        }\r\n    }\r\n    openModalChangeStatus = (item) => {\r\n        _handleItem = item;\r\n        this.handleToggleModal(commonConstant.CHANGE_STATUS, null);\r\n    }\r\n    handleChangeStatus = () => {\r\n        if (_handleItem && _handleItem.Id) {\r\n            this.props.changeStatusRole(_handleItem.Id);\r\n        }\r\n    }\r\n    openModalDelete = (item) => {\r\n        _handleItem = item;\r\n        this.handleToggleModal(commonConstant.DELETE, null);\r\n    }\r\n    handleDelete = () => {\r\n        if (_handleItem && _handleItem.RoleName) {\r\n            this.props.deleteRole(_handleItem.RoleName);\r\n        }\r\n    }\r\n    handleToggleModal = (nameFn, isSelected = false) => {\r\n        if (isSelected && nameFn === commonConstant.CHANGE_STATUS) {\r\n            this.handleChangeStatus();\r\n        }\r\n        else if (isSelected && nameFn === commonConstant.DELETE) {\r\n            this.handleDelete();\r\n        }\r\n        this.setState({\r\n            isShowStatusConfirmModal: nameFn === commonConstant.CHANGE_STATUS ? !this.state.isShowStatusConfirmModal : false,\r\n            isShowDeleteConfirmModal: nameFn === commonConstant.DELETE ? !this.state.isShowDeleteConfirmModal : false,\r\n        });\r\n    }\r\n    handleEdit = (item) => {\r\n        console.log('handleEdit', item);\r\n    }\r\n    renderMainContent(data, t, classAnimated, isLoadingDelete) {\r\n        let columns = Object.keys(data[0]).map((key, id) => {\r\n            return {\r\n                Header: key,\r\n                headerClassName: 'header-table',\r\n                accessor: key,\r\n                show: (key === 'Status') ? false : true,\r\n                minWidth: id === 0 ? 150 : 100,\r\n                className: id === 0 ? 'text-center' : '',\r\n            };\r\n        });\r\n        columns.unshift({\r\n            Header: '#',\r\n            headerClassName: 'header-table',\r\n            accessor: 'identifierNumber',\r\n            Cell: (row) => { return <span>{row.index + 1}</span> },\r\n            minWidth: 20,\r\n            className: 'text-center',\r\n        });\r\n        columns.push({\r\n            Header: 'Status',\r\n            headerClassName: 'header-table',\r\n            accessor: 'status',\r\n            Cell: row => {\r\n                const titleStatus = (row.original.Status === 'Active' || row.original.Status === 1) ? key.message.active :\r\n                    (row.original.Status === 'InActive' || row.original.Status === 0) ? key.message.inActive : key.message.deleted;\r\n                const colorStatus = (row.original.Status === 'Active' || row.original.Status === 1) ? 'success' :\r\n                    (row.original.Status === 'InActive' || row.original.Status === 0) ? 'danger' : 'secondary';\r\n                return (\r\n                    <Badge className=\"label-status\" onClick={() => this.openModalChangeStatus(row.original)}\r\n                        color={colorStatus}>\r\n                        {t(titleStatus)}\r\n                    </Badge>\r\n                )\r\n            },\r\n            width: 80,\r\n            className: 'text-center handle-pointer',\r\n        });\r\n        columns.push({\r\n            Header: 'Update',\r\n            headerClassName: 'header-table',\r\n            accessor: 'update',\r\n            Cell: row => (\r\n                <>\r\n                    <i onClick={() => this.handleEdit(row.original)} className=\"handle-pointer fa fa-edit fa-lg\"></i> &nbsp;\r\n        <i onClick={() => this.openModalDelete(row.original)} className=\"handle-pointer fa fa-trash-o fa-lg\"></i>\r\n                </>\r\n            ),\r\n            width: 80,\r\n            className: 'text-center',\r\n        });\r\n        const propsOfTable = {\r\n            data: data,\r\n            columns: columns,\r\n            defaultPageSize: 10,\r\n        }\r\n        return (\r\n            <div className={classAnimated}>\r\n                <LoadingOverlay active={isLoadingDelete} spinner text={t(key.message.processingSpinner)} className=\"overlayFullScreen\" />\r\n                <Row>\r\n                    <Col xs=\"12\" lg=\"12\">\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <i className=\"fa fa-roles text-primary\" /> {t(key.message.rolesList)}\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <ReactTable {...propsOfTable} />\r\n                                <ConfirmModal isOpenModal={this.state.isShowStatusConfirmModal}\r\n                                    toggleModal={() => this.handleToggleModal(commonConstant.CHANGE_STATUS, false)}\r\n                                    selectedYes={() => this.handleToggleModal(commonConstant.CHANGE_STATUS, true)}\r\n                                    className=\"warning\" sizeModal=\"md\" backdropModal=\"static\"\r\n                                    headerTitle={t(key.message.infoTitleConfirmModal)}\r\n                                    bodyContent={t(key.message.switchStatusConfirmModal)}\r\n                                    textBtnYes={t(key.button.btnOk)}\r\n                                    textBtnNo={t(key.button.btnCancel)}\r\n                                />\r\n                                <ConfirmModal isOpenModal={this.state.isShowDeleteConfirmModal}\r\n                                    toggleModal={() => this.handleToggleModal(commonConstant.DELETE, false)}\r\n                                    selectedYes={() => this.handleToggleModal(commonConstant.DELETE, true)}\r\n                                    className=\"danger\" sizeModal=\"md\" backdropModal=\"static\"\r\n                                    headerTitle={t(key.message.infoTitleConfirmModal)}\r\n                                    bodyContent={t(key.message.deleteConfirmModal)}\r\n                                    textBtnYes={t(key.button.btnOk)}\r\n                                    textBtnNo={t(key.button.btnCancel)}\r\n                                />\r\n                                {/* Option className modal: primary, info, danger, warning,success, \r\n                  Size modal: sm, md, lg */}\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n    render() {\r\n        console.log('_renderNumber', _renderNumber++);\r\n        const { t, changeStatus, deleteItem, roles } = this.props;\r\n\r\n        const classAnimated = 'animated fadeIn';\r\n        if (!roles) return;\r\n        if (roles.isLoading) {\r\n            return <RingLoader sizeUnit={\"px\"} size={100} color={'#86E7D4'} loading={roles.isLoading} />\r\n        } else if (roles.isError) {\r\n            return <div className={classAnimated}>{t(key.message.errorGetAllAPI)}</div>;\r\n        } else {\r\n            if (roles.responseData && roles.responseData.data && roles.responseData.data.length > 0) {\r\n                return this.renderMainContent(roles.responseData.data, t, classAnimated, deleteItem.isLoading);\r\n            } else {\r\n                return <div className={classAnimated}><Row><Col xs=\"12\" lg=\"12\">{t(key.message.noDataFound)}</Col></Row></div>;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    roles: state.getAllRolesReducer,\r\n    changeStatus: state.changeStatusRoleReducer,\r\n    deleteItem: state.deleteRoleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getAllRoles,\r\n    changeStatusRole,\r\n    deleteRole,\r\n};\r\n\r\nexport default translate()(connect(mapStateToProps, mapDispatchToProps)(Role));"],"sourceRoot":""}