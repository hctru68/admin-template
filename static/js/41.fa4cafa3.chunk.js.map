{"version":3,"sources":["components/modals/confirmModal.js","components/alerts/errorAlert.js","containers/pages/Role/RoleUpdate.js"],"names":["ConfirmModal","_React$Component","Object","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this$props","props","isOpenModal","className","toggleModal","headerTitle","bodyContent","sizeModal","textBtnYes","textBtnNo","backdropModal","selectedYes","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_6__","isOpen","size","backdrop","toggle","color","onClick","React","Component","ErrorAlert","responseData","msgErrorGetAPI","msgError401GetAPI","msgRedirectToLogin","msgError","status","href","_renderNumber","RoleUpdate","_this","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","handleSubmitForm","event","preventDefault","handleValidateForm","state","formData","handleResetForm","setState","roleName","roleNameInput","focus","updateRoleName","e","target","newValue","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","applyAuthorization","nextProps","trim","match","result","params","id","parseInt","classAnimated","titleRoleUpdate","_this2","t","react__WEBPACK_IMPORTED_MODULE_6___default","react_loading_overlay__WEBPACK_IMPORTED_MODULE_14___default","active","spinner","text","role","processingSpinner","reactstrap__WEBPACK_IMPORTED_MODULE_11__","onSubmit","htmlFor","roleNameField","type","invalid","innerRef","self","onChange","roleNameFieldErrorMsg","common","btnSubmit","btnReset","console","log","handleParam","roleEditTitle","roleAddTitle","renderMainContent","translate","connect"],"mappings":"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","file":"static/js/41.fa4cafa3.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  Button, Modal, ModalBody, ModalFooter, ModalHeader,\r\n} from \"reactstrap\";\r\n\r\nexport class ConfirmModal extends React.Component {\r\n  render() {\r\n    const {\r\n      isOpenModal, className, toggleModal,\r\n      headerTitle, bodyContent, sizeModal,\r\n      textBtnYes, textBtnNo, backdropModal,\r\n      selectedYes\r\n    } = this.props;\r\n    return (\r\n      <Modal isOpen={isOpenModal} size={sizeModal} backdrop={backdropModal}\r\n        className={'modal-' + className} toggle={toggleModal}>\r\n        <ModalHeader toggle={toggleModal}>{headerTitle}</ModalHeader>\r\n        <ModalBody>{bodyContent}</ModalBody>\r\n        <ModalFooter>\r\n          <Button className=\"label-button-confirm\" color={className} onClick={selectedYes}>{textBtnYes}</Button>{' '}\r\n          <Button className=\"label-button-confirm\" color=\"secondary\" onClick={toggleModal}>{textBtnNo}</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\nexport default ConfirmModal;\r\n","import React from 'react';\r\n\r\nexport class ErrorAlert extends React.Component {\r\n    render() {\r\n        const { responseData, msgErrorGetAPI, msgError401GetAPI, msgRedirectToLogin } = this.props;\r\n        const clsError = 'alert alert-danger';\r\n        let msgError = <div className={clsError}>{msgErrorGetAPI}</div>;\r\n        if (responseData && responseData.status === 401) {\r\n            msgError = <div>\r\n                <div className={clsError}>\r\n                    {msgErrorGetAPI}\r\n                    <br />\r\n                    {msgError401GetAPI}\r\n                    <br /><a className='alert-link' href='/login'>{msgRedirectToLogin}</a>\r\n                </div>\r\n            </div>;\r\n        }\r\n        return msgError;\r\n    }\r\n}\r\nexport default ErrorAlert;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactTable from \"react-table\";\r\nimport { translate } from 'react-i18next';\r\nimport key from '../../../i18n/key';\r\nimport { Button, Label, Card, CardBody, CardFooter, CardHeader, Col, Form, FormGroup, FormFeedback, Input, Row, } from \"reactstrap\";\r\nimport { AppSwitch } from '@coreui/react';\r\nimport { RingLoader } from 'react-spinners';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport { ConfirmModal } from '../../../components/modals/confirmModal';\r\nimport { ErrorAlert } from '../../../components/alerts/errorAlert';\r\nimport { getAllRoles, changeStatusRole, deleteRole } from '../../../actions/role';\r\nimport { commonConstant } from '../../../contants/common';\r\nimport { isNullOrEmptyObject, removeItemFromItems } from '../../../utilities/validate';\r\nimport { getSessionStorage, setSessionStorage } from '../../../utilities/storage';\r\nimport { applyAuthorization } from '../../../services';\r\n\r\nvar _renderNumber = 0;\r\nclass RoleUpdate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formData: {\r\n                roleName: null,\r\n            },\r\n        };\r\n        //Add token to header\r\n        applyAuthorization();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.roleNameInput.focus();\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n    handleSubmitForm = (event) => {\r\n        if (!event) return;\r\n        event.preventDefault();\r\n        if (!this.handleValidateForm(this.state.formData)) return;\r\n\r\n        //Process login   \r\n\r\n    }\r\n    handleResetForm = () => {\r\n        this.setState({\r\n            formData: {\r\n                roleName: null,\r\n            }\r\n        });\r\n        this.roleNameInput.focus();\r\n    }\r\n    handleValidateForm(formData) {\r\n        if (!formData) return false;\r\n        const { roleName } = formData;\r\n        if (!roleName || roleName.trim() === '') {\r\n            this.setState({\r\n                formData: {\r\n                    ...this.state.formData,\r\n                    roleName: roleName == null ? '' : roleName,\r\n                }\r\n            });\r\n            this.roleNameInput.focus();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    updateRoleName = (e) => {\r\n        if (!e || !e.target) return;\r\n        const newValue = e.target.value;\r\n        this.setState({\r\n            formData: {\r\n                ...this.state.formData,\r\n                roleName: newValue,\r\n            }\r\n        });\r\n    }\r\n    handleParam(match) {\r\n        let result = 'add';\r\n        if (match.params.id) {\r\n            if (match.params.id > 0) {\r\n                result = parseInt(match.params.id);\r\n            } else {\r\n                result = match.params.id;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    renderMainContent(classAnimated, titleRoleUpdate, id, formData) {\r\n        const { t } = this.props;\r\n        return (\r\n            <div className={classAnimated}>\r\n                <LoadingOverlay active={false} spinner text={t(key.role.processingSpinner)} className=\"overlayFullScreen\" />\r\n                <Form onSubmit={this.handleSubmitForm}>\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <strong>{titleRoleUpdate}</strong>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"roleName\">{t(key.role.roleNameField)}</Label>\r\n                                <Input type=\"text\" invalid={formData.roleName === '' ? true : null} id=\"roleName\"\r\n                                    innerRef={(self) => { this.roleNameInput = self; }} \r\n                                    value={formData.roleName == null ? '' : formData.roleName} onChange={this.updateRoleName} />\r\n                                <FormFeedback>{t(key.role.roleNameFieldErrorMsg)}</FormFeedback>\r\n                            </FormGroup>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            <Button type=\"submit\" size=\"sm\" color=\"primary\">\r\n                                <i className=\"fa fa-dot-circle-o\"></i> {t(key.common.btnSubmit)}\r\n                            </Button>{' '}\r\n                            <Button type=\"reset\" size=\"sm\" color=\"danger\" onClick={this.handleResetForm}>\r\n                                <i className=\"fa fa-ban\"></i> {t(key.common.btnReset)}\r\n                            </Button>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        console.log('_renderNumber', _renderNumber++);\r\n        const { t, match } = this.props;\r\n        const classAnimated = 'animated fadeIn';\r\n        const id = this.handleParam(match);\r\n        let titleRoleUpdate = t(key.role.roleEditTitle);\r\n        if (id === 'add') {\r\n            titleRoleUpdate = t(key.role.roleAddTitle);\r\n        } else {\r\n            //call api getbyid\r\n        }\r\n        return this.renderMainContent(classAnimated, titleRoleUpdate, id, this.state.formData);\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    //roles: state.getAllRolesReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    //getAllRoles,\r\n};\r\n\r\nexport default translate()(connect(mapStateToProps, mapDispatchToProps)(RoleUpdate));"],"sourceRoot":""}