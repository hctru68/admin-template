{"version":3,"sources":["components/modals/confirmModal.js","containers/pages/User/User.js"],"names":["ConfirmModal","_React$Component","Object","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this$props","props","isOpenModal","className","toggleModal","headerTitle","bodyContent","sizeModal","textBtnYes","textBtnNo","backdropModal","selectedYes","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_6__","isOpen","size","backdrop","toggle","color","onClick","React","Component","_handleItem","_currentAtion","_renderNumber","User","_this","call","openModalChangeStatus","item","handleToggleModal","commonConstant","CHANGE_STATUS","handleChangeStatus","Id","changeStatusUser","openModalDelete","DELETE","handleDelete","Email","deleteUser","nameFn","isSelected","length","undefined","setState","isShowStatusConfirmModal","state","isShowDeleteConfirmModal","handleEdit","console","log","handleSwitchFilter","setSessionStorage","FILTER_USER","isEnableFilter","getSessionStorage","getAllUsers","nextProps","t","users","deleteItem","changeStatus","isLoading","responseData","data","Result","currentList","isNullOrEmptyObject","isError","toastr","error","message","switchStatusInfo","switchStatusErrorInfo","success","switchStatusSuccessInfo","removeItemFromItems","deleteInfo","deleteErrorInfo","deleteSuccessInfo","classAnimated","isLoadingDelete","_this2","columns","keys","map","id","Header","headerClassName","accessor","show","minWidth","unshift","Cell","row","index","push","titleStatus","original","Status","active","inActive","deleted","colorStatus","reactstrap__WEBPACK_IMPORTED_MODULE_10__","width","Fragment","propsOfTable","defaultPageSize","filterable","react_loading_overlay__WEBPACK_IMPORTED_MODULE_13___default","spinner","text","processingSpinner","xs","lg","usersList","title","_coreui_react__WEBPACK_IMPORTED_MODULE_11__","variant","onChange","checked","react_table__WEBPACK_IMPORTED_MODULE_7__","_components_modals_confirmModal__WEBPACK_IMPORTED_MODULE_15__","infoTitleConfirmModal","switchStatusConfirmModal","button","btnOk","btnCancel","deleteConfirmModal","react_spinners__WEBPACK_IMPORTED_MODULE_12__","sizeUnit","loading","errorGetAllAPI","renderMainContent","noDataFound","mapDispatchToProps","translate","connect","getAllUsersReducer","changeStatusUserReducer","deleteUserReducer"],"mappings":"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","file":"static/js/41.2de91860.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  Button, Modal, ModalBody, ModalFooter, ModalHeader,\r\n} from \"reactstrap\";\r\n\r\nexport class ConfirmModal extends React.Component {\r\n  render() {\r\n    const {\r\n      isOpenModal, className, toggleModal,\r\n      headerTitle, bodyContent, sizeModal,\r\n      textBtnYes, textBtnNo, backdropModal,\r\n      selectedYes\r\n    } = this.props;\r\n    return (\r\n      <Modal isOpen={isOpenModal} size={sizeModal} backdrop={backdropModal}\r\n        className={'modal-' + className} toggle={toggleModal}>\r\n        <ModalHeader toggle={toggleModal}>{headerTitle}</ModalHeader>\r\n        <ModalBody>{bodyContent}</ModalBody>\r\n        <ModalFooter>\r\n          <Button className=\"label-button-confirm\" color={className} onClick={selectedYes}>{textBtnYes}</Button>{' '}\r\n          <Button className=\"label-button-confirm\" color=\"secondary\" onClick={toggleModal}>{textBtnNo}</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\nexport default ConfirmModal;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport ReactTable from \"react-table\";\r\nimport { translate } from 'react-i18next';\r\nimport key from '../../../i18n/translationKeys';\r\nimport { Card, CardBody, CardHeader, Col, Row, Badge } from \"reactstrap\";\r\nimport { AppSwitch } from '@coreui/react';\r\nimport { RingLoader } from 'react-spinners';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport { ConfirmModal } from '../../../components/modals/confirmModal';\r\nimport { getAllUsers, changeStatusUser, deleteUser } from '../../../actions/user';\r\nimport { commonConstant } from '../../../contants/common';\r\nimport { isNullOrEmptyObject, removeItemFromItems } from '../../../utilities/validate';\r\nimport { getSessionStorage, setSessionStorage } from '../../../utilities/storage';\r\n\r\nvar _handleItem = null;\r\nvar _currentAtion = null;\r\nvar _renderNumber = 0;\r\nclass User extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowStatusConfirmModal: false,\r\n            isShowDeleteConfirmModal: false,\r\n            isEnableFilter: getSessionStorage(commonConstant.FILTER_USER) === 'true' ? true : false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAllUsers();\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        let { t, users, deleteItem, changeStatus } = nextProps;\r\n        if (deleteItem && deleteItem.isLoading) {\r\n            _currentAtion = commonConstant.DELETE;\r\n            return;\r\n        }\r\n        if (changeStatus && changeStatus.isLoading) {\r\n            _currentAtion = commonConstant.CHANGE_STATUS;\r\n            return;\r\n        }\r\n        if (users.responseData && users.responseData.data &&\r\n            users.responseData.data.Result && users.responseData.data.Result.length > 0) {\r\n            let currentList = users.responseData.data.Result;\r\n            if (_currentAtion === commonConstant.DELETE && deleteItem && !deleteItem.isLoading && !isNullOrEmptyObject(deleteItem.responseData)) {\r\n                users.responseData.data.Result = removeItemFromItems(_handleItem, currentList);\r\n                deleteItem.isError ? toastr.error(t(key.message.deleteInfo), t(key.message.deleteErrorInfo)) :\r\n                    toastr.success(t(key.message.deleteInfo), t(key.message.deleteSuccessInfo));\r\n            }\r\n\r\n            else if (_currentAtion === commonConstant.CHANGE_STATUS && changeStatus && !isNullOrEmptyObject(changeStatus.responseData) && !changeStatus.isLoading) {\r\n                changeStatus.isError ? toastr.error(t(key.message.switchStatusInfo), t(key.message.switchStatusErrorInfo)) :\r\n                    toastr.success(t(key.message.switchStatusInfo), t(key.message.switchStatusSuccessInfo));\r\n            }\r\n            _currentAtion = null;\r\n        }\r\n    }\r\n    openModalChangeStatus = (item) => {\r\n        _handleItem = item;\r\n        this.handleToggleModal(commonConstant.CHANGE_STATUS, null);\r\n    }\r\n    handleChangeStatus = () => {\r\n        if (_handleItem && _handleItem.Id) {\r\n            this.props.changeStatusUser(_handleItem.Id);\r\n        }\r\n    }\r\n    openModalDelete = (item) => {\r\n        _handleItem = item;\r\n        this.handleToggleModal(commonConstant.DELETE, null);\r\n    }\r\n    handleDelete = () => {\r\n        if (_handleItem && _handleItem.Email) {\r\n            this.props.deleteUser(_handleItem.Email);\r\n        }\r\n    }\r\n    handleToggleModal = (nameFn, isSelected = false) => {\r\n        if (isSelected && nameFn === commonConstant.CHANGE_STATUS) {\r\n            this.handleChangeStatus();\r\n        }\r\n        else if (isSelected && nameFn === commonConstant.DELETE) {\r\n            this.handleDelete();\r\n        }\r\n        this.setState({\r\n            isShowStatusConfirmModal: nameFn === commonConstant.CHANGE_STATUS ? !this.state.isShowStatusConfirmModal : false,\r\n            isShowDeleteConfirmModal: nameFn === commonConstant.DELETE ? !this.state.isShowDeleteConfirmModal : false,\r\n        });\r\n    }\r\n    handleEdit = (item) => {\r\n        console.log('handleEdit', item);\r\n    }\r\n    handleSwitchFilter = () => {\r\n        setSessionStorage(commonConstant.FILTER_USER, !this.state.isEnableFilter)\r\n        this.setState({\r\n            isEnableFilter: !this.state.isEnableFilter,\r\n        });\r\n    }\r\n    renderMainContent(data, t, classAnimated, isLoadingDelete) {\r\n        let columns = Object.keys(data[0]).map((key, id) => {\r\n            return {\r\n                Header: key,\r\n                headerClassName: 'header-table',\r\n                accessor: key,\r\n                show: (key === 'Status' || key === 'Password' || key === 'FacebookId' || key === 'PictureUrl' || key === 'Location') ? false : true,\r\n                minWidth: id === 0 ? 150 : 100,\r\n                className: id === 0 ? 'text-center' : '',\r\n            };\r\n        });\r\n        columns.unshift({\r\n            Header: '#',\r\n            headerClassName: 'header-table',\r\n            accessor: 'identifierNumber',\r\n            Cell: (row) => { return <span>{row.index + 1}</span> },\r\n            minWidth: 20,\r\n            className: 'text-center',\r\n        });\r\n        columns.push({\r\n            Header: 'Status',\r\n            headerClassName: 'header-table',\r\n            accessor: 'status',\r\n            Cell: row => {\r\n                const titleStatus = (row.original.Status === 'Active' || row.original.Status === 1) ? key.message.active :\r\n                    (row.original.Status === 'InActive' || row.original.Status === 0) ? key.message.inActive : key.message.deleted;\r\n                const colorStatus = (row.original.Status === 'Active' || row.original.Status === 1) ? 'success' :\r\n                    (row.original.Status === 'InActive' || row.original.Status === 0) ? 'danger' : 'secondary';\r\n                return (\r\n                    <Badge className=\"label-status\" onClick={() => this.openModalChangeStatus(row.original)}\r\n                        color={colorStatus}>\r\n                        {t(titleStatus)}\r\n                    </Badge>\r\n                )\r\n            },\r\n            width: 80,\r\n            className: 'text-center handle-pointer',\r\n        });\r\n        columns.push({\r\n            Header: 'Update',\r\n            headerClassName: 'header-table',\r\n            accessor: 'update',\r\n            Cell: row => (\r\n                <>\r\n                    <i onClick={() => this.handleEdit(row.original)} className=\"handle-pointer fa fa-edit fa-lg\"></i> &nbsp;\r\n        <i onClick={() => this.openModalDelete(row.original)} className=\"handle-pointer fa fa-trash-o fa-lg\"></i>\r\n                </>\r\n            ),\r\n            width: 80,\r\n            className: 'text-center',\r\n        });\r\n        const propsOfTable = {\r\n            data: data,\r\n            columns: columns,\r\n            defaultPageSize: 10,\r\n            filterable: this.state.isEnableFilter,\r\n        }\r\n        return (\r\n            <div className={classAnimated}>\r\n                <LoadingOverlay active={isLoadingDelete} spinner text={t(key.message.processingSpinner)} className=\"overlayFullScreen\" />\r\n                <Row>\r\n                    <Col xs=\"12\" lg=\"12\">\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <Row>\r\n                                    <Col xs=\"6\">\r\n                                        <i className=\"fa fa-users text-primary\" /> {t(key.message.usersList)}\r\n                                    </Col>\r\n                                    <Col xs=\"6\" className={'text-right'} title=\"Enables or disables data filtering of columns in the table.\">\r\n                                        Filter\r\n                                        <AppSwitch className={'filter-users float-right mx-1'} variant={'pill'} color={'primary'}\r\n                                            onChange={this.handleSwitchFilter} checked={this.state.isEnableFilter} />\r\n                                    </Col>\r\n                                </Row>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <ReactTable {...propsOfTable} />\r\n                                <ConfirmModal isOpenModal={this.state.isShowStatusConfirmModal}\r\n                                    toggleModal={() => this.handleToggleModal(commonConstant.CHANGE_STATUS, false)}\r\n                                    selectedYes={() => this.handleToggleModal(commonConstant.CHANGE_STATUS, true)}\r\n                                    className=\"warning\" sizeModal=\"md\" backdropModal=\"static\"\r\n                                    headerTitle={t(key.message.infoTitleConfirmModal)}\r\n                                    bodyContent={t(key.message.switchStatusConfirmModal)}\r\n                                    textBtnYes={t(key.button.btnOk)}\r\n                                    textBtnNo={t(key.button.btnCancel)}\r\n                                />\r\n                                <ConfirmModal isOpenModal={this.state.isShowDeleteConfirmModal}\r\n                                    toggleModal={() => this.handleToggleModal(commonConstant.DELETE, false)}\r\n                                    selectedYes={() => this.handleToggleModal(commonConstant.DELETE, true)}\r\n                                    className=\"danger\" sizeModal=\"md\" backdropModal=\"static\"\r\n                                    headerTitle={t(key.message.infoTitleConfirmModal)}\r\n                                    bodyContent={t(key.message.deleteConfirmModal)}\r\n                                    textBtnYes={t(key.button.btnOk)}\r\n                                    textBtnNo={t(key.button.btnCancel)}\r\n                                />\r\n                                {/* Option className modal: primary, info, danger, warning,success, \r\n                  Size modal: sm, md, lg */}\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n    render() {\r\n        console.log('_renderNumber', _renderNumber++);\r\n        const { t, changeStatus, deleteItem, users } = this.props;\r\n\r\n        const classAnimated = 'animated fadeIn';\r\n        if (!users) return;\r\n        if (users.isLoading) {\r\n            return <RingLoader sizeUnit={\"px\"} size={100} color={'#86E7D4'} loading={users.isLoading} />\r\n        } else if (users.isError) {\r\n            return <div className={classAnimated}>{t(key.message.errorGetAllAPI)}</div>;\r\n        } else {\r\n            if (users.responseData && users.responseData.data &&\r\n                users.responseData.data.Result && users.responseData.data.Result.length > 0) {\r\n                return this.renderMainContent(users.responseData.data.Result, t, classAnimated, deleteItem.isLoading);\r\n            } else {\r\n                return <div className={classAnimated}><Row><Col xs=\"12\" lg=\"12\">{t(key.message.noDataFound)}</Col></Row></div>;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    users: state.getAllUsersReducer,\r\n    changeStatus: state.changeStatusUserReducer,\r\n    deleteItem: state.deleteUserReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getAllUsers,\r\n    changeStatusUser,\r\n    deleteUser,\r\n};\r\n\r\nexport default translate()(connect(mapStateToProps, mapDispatchToProps)(User));"],"sourceRoot":""}