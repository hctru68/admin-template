{"version":3,"sources":["../node_modules/chart.js/src/helpers/index.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.element.js","../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/chart.js/src/core/core.scaleService.js","../node_modules/chart.js/src/elements/index.js","../node_modules/lodash/_getNative.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/chart.js/src/helpers/helpers.core.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/keys.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/_toKey.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/isLength.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_isKey.js","../node_modules/chart.js/src/chart.js","../node_modules/chartjs-color/index.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/platforms/platform.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.tooltip.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/chart.js/src/core/core.js","../node_modules/chart.js/src/helpers/helpers.easing.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.js","../node_modules/chart.js/src/core/core.helpers.js","../node_modules/chartjs-color/node_modules/color-convert/index.js","../node_modules/chartjs-color/node_modules/color-convert/conversions.js","../node_modules/chartjs-color-string/color-string.js","../node_modules/color-name/index.js","../node_modules/chart.js/src/elements/element.arc.js","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.js","../node_modules/chart.js/src/elements/element.rectangle.js","../node_modules/chart.js/src/platforms/platform.basic.js","../node_modules/chart.js/src/platforms/platform.dom.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/charts/Chart.Bar.js","../node_modules/chart.js/src/charts/Chart.Bubble.js","../node_modules/chart.js/src/charts/Chart.Doughnut.js","../node_modules/chart.js/src/charts/Chart.Line.js","../node_modules/chart.js/src/charts/Chart.PolarArea.js","../node_modules/chart.js/src/charts/Chart.Radar.js","../node_modules/chart.js/src/charts/Chart.Scatter.js","../node_modules/chart.js/src/plugins/index.js","../node_modules/chart.js/src/plugins/plugin.filler.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/find.js","../node_modules/lodash/_createFind.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/lodash/findIndex.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/toFinite.js","../node_modules/lodash/toNumber.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js"],"names":["module","exports","__webpack_require__","easing","canvas","options","helpers","_set","scope","values","merge","this","color","Element","configuration","extend","initialize","apply","arguments","prototype","hidden","pivot","me","_view","clone","_model","_start","transition","ease","model","start","view","i","ilen","key","actual","origin","target","type","c0","c1","keys","Object","length","hasOwnProperty","valid","mix","rgbString","isFinite","interpolate","tooltipPosition","x","y","hasValue","isNumber","inherits","freeGlobal","freeSelf","self","root","Function","isArray","Array","defaults","layouts","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","undefined","getScaleDefaults","scale","updateScaleDefaults","additions","addScalesToLayout","chart","each","scales","fullWidth","position","weight","addBox","Arc","Line","Point","Rectangle","baseIsNative","getValue","object","value","filterByPosition","array","where","v","sortByWeight","reverse","forEach","_tmpIndex_","sort","a","b","v0","v1","item","boxes","push","removeBox","layoutItem","index","indexOf","splice","configure","prop","props","update","width","height","layoutOptions","layout","padding","toPadding","leftPadding","left","rightPadding","right","topPadding","top","bottomPadding","bottom","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","concat","box","minSize","isHorizontal","horizontal","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","Math","max","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","chartArea","minBox","Ticks","labelsFromTicks","ticks","labels","label","getLineValue","offsetGridLines","lineValue","getPixelForTick","computeTextSize","context","tick","font","longestText","measureText","parseFontOptions","valueOrDefault","globalDefaults","global","size","fontSize","defaultFontSize","style","fontStyle","defaultFontStyle","family","fontFamily","defaultFontFamily","fontString","parseLineHeight","toLineHeight","lineHeight","display","offset","gridLines","lineWidth","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","borderDash","borderDashOffset","scaleLabel","labelString","beginAtZero","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","callback","formatters","minor","major","paddingLeft","paddingTop","paddingRight","paddingBottom","getTicks","_ticks","mergeTicksOptions","beforeUpdate","maxWidth","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","noop","tickOpts","map","userCallback","ctx","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","cos","sin","opts","scaleLabelOpts","gridLineOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","min","firstLabelWidth","lastLabelWidth","handleMargins","getRightValue","rawValue","isNullOrUndef","NaN","getLabelForIndex","getPixelForValue","getValueForPixel","pixel","finalVal","round","innerHeight","getPixelForDecimal","decimal","valueOffset","getBasePixel","getBaseValue","_autoSkip","skipRatio","maxTicks","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","result","maxTicksLimit","floor","draw","optionMajorTicks","isRotated","tickFontColor","fontColor","defaultFontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","y2","labelX","labelY","zeroLineIndex","valueAtIndexOrDefault","textAlign","textBaseline","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","rotation","itemToDraw","save","strokeStyle","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","restore","translate","rotate","fillStyle","lineCount","fillText","scaleLabelX","scaleLabelY","halfLineHeight","PI","linear","tickValue","delta","abs","logDelta","log10","tickString","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","pow","Symbol","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","uid","id","toString","call","isObject","defaultValue","fn","args","thisArg","loopable","len","arrayEquals","a0","a1","source","klen","k","_merger","tval","sval","_mergerIf","mergeIf","sources","merger","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","clear","entry","set","get","has","eq","nativeCreate","getNative","isKeyable","data","__data__","arrayLikeKeys","baseKeys","isArrayLike","baseGetTag","isObjectLike","symbolTag","isSymbol","INFINITY","process","d","__webpack_exports__","Doughnut","Pie","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5___default","_extends","assign","_objectWithoutProperties","obj","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","REACT_APP_ENV","REACT_APP_URL_BASE_API","REACT_APP_URL_BASE_MOCK_API","REACT_APP_URL_PROXY_API","REACT_APP_VERSION_API","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","event","chartInstance","_this$props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroy","updateChart","shouldComponentUpdate","nextProps","_props","plugins","legend","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","datasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","dataset","console","error","_this2","configMerge","currentDatasets","config","nextDatasets","currentDatasetsIndexed","next","current","point","pid","otherProps","rest","_props2","node","defaultProps","render","_props3","createElement","onClick","Component","propTypes","oneOfType","func","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","_React$Component2","_this4","_ref","_React$Component3","_this6","_ref2","_React$Component4","_this8","_ref3","_React$Component5","_this10","_ref4","_React$Component6","HorizontalBar","_this12","_ref5","_React$Component7","_this14","_ref6","_React$Component8","_this16","_ref7","_React$Component9","Bubble","_this18","_ref8","_React$Component10","Scatter","_this20","_ref9","baseIsEqualDeep","baseIsEqual","other","bitmask","customizer","stack","Map","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","MAX_SAFE_INTEGER","isFunction","isLength","baseMatches","baseMatchesProperty","identity","property","reIsDeepProp","reIsPlainProp","test","Chart","Animation","animationService","elements","Interaction","platform","Scale","scaleService","Tooltip","register","window","Legend","_element","Title","title","pluginService","PluginBase","canvasHelpers","layoutService","convert","string","Color","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","r","red","l","lightness","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","degrees","mixinColor","p","w1","w2","toJSON","slice","spaces","maxes","getValues","space","charAt","capped","chans","sname","svalues","currentStep","numSteps","onAnimationProgress","onAnimationComplete","defineProperty","animation","duration","onProgress","onComplete","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","count","getRelativePosition","e","native","parseVisibleItems","handler","meta","j","jlen","isDatasetVisible","getDatasetMeta","skip","getIntersectItems","inRange","getNearestItems","intersect","distanceMetric","minDistance","Number","POSITIVE_INFINITY","nearestItems","center","getCenterPoint","distance","getDistanceMetricForAxis","axis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","indexMode","items","datasetIndex","_index","modes","single","_datasetIndex","x-axis","nearest","ret","getArea","intersectsItem","inXRange","inYRange","basic","dom","implementation","_enabled","acquireContext","releaseContext","addEventListener","removeEventListener","_plugins","_cacheId","plugin","unregister","idx","getAll","notify","hook","descriptor","params","method","descriptors","cache","$plugins","_invalidate","tooltips","enabled","custom","mode","backgroundColor","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","borderColor","borderWidth","callbacks","beforeTitle","tooltipItems","labelCount","xLabel","afterTitle","beforeBody","beforeLabel","tooltipItem","yLabel","labelColor","labelTextColor","_options","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","el","pos","eventPosition","nearestElement","distanceBetweenPoints","tp","mergeOpacity","colorString","opacity","pushOrConcat","base","toPush","splitNewlines","str","String","split","createTooltipItem","xScale","_xScale","yScale","_yScale","_scale","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getBeforeAfterBodyLines","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","_data","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","filter","itemSort","_chart","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","line","getTooltipSize","vm","paddingAndSize","radiusAndPadding","getBackgroundPoint","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","pt","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","fillRect","strokeRect","drawFooter","drawBackground","radius","quadraticCurveTo","closePath","fill","hasTooltipContent","handleEvent","getElementsAtEventForMode","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","asyncTag","funcTag","genTag","proxyTag","tag","funcToString","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","stacked","seen","arrValue","othValue","compared","othIndex","baseIsArguments","objectProto","propertyIsEnumerable","isArguments","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","reIsUint","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","srcValue","castPath","toKey","path","isKey","stringToPath","responsive","responsiveAnimationDuration","maintainAspectRatio","events","hover","onHover","animationDuration","defaultColor","showLines","construct","effects","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","clearRect","roundedRect","arcTo","rect","drawPoint","edgeLength","xOffset","yOffset","isNaN","arc","SQRT2","leftX","topY","sideSize","drawImage","clipArea","area","clip","unclipArea","previous","flip","steppedLine","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","drawRoundedRectangle","matches","match","resolve","inputs","parseMaxStyle","styleValue","parentProperty","valueInPixels","parseInt","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","document","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","scaleMerge","slen","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","parseFloat","almostEquals","epsilon","almostWhole","rounded","NEGATIVE_INFINITY","sign","exponent","log","LOG10E","powerOf10","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","pixelWidth","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","splineCurveMonotone","points","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","nextItem","loop","previousItem","niceNum","range","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","mouseX","mouseY","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","_calculatePadding","container","parentDimension","parent","host","getMaximumWidth","clientWidth","cw","getMaximumHeight","clientHeight","h","ch","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","textWidth","numberOfLines","CanvasGradient","getHoverColor","colorValue","CanvasPattern","conversions","Converter","arg","pair","exec","from","to","convs","routeSpace","fspace","rgb2hsl","g","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","f","q","hwb2rgb","wh","bl","cmyk2rgb","m","xyz2rgb","xyz2lab","lab2xyz","lab","lab2lch","lab2rgb","lch2lab","lch","hr","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","colorNames","rgba","percentaString","hsla","num","hexDouble","toUpperCase","getRgb","getHsl","getAlpha","reverseNames","name","inLabelRange","hoverRadius","chartX","chartY","pointRelativePosition","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","borderCapStyle","borderJoinStyle","capBezierPoints","currentVM","spanGaps","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","xRange","hitRadius","pointStyle","hoverBorderWidth","isVertical","bar","getBarBounds","halfWidth","halfHeight","rectangle","borderSkipped","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","getContext","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","passive","_addEventListener","listener","_removeEventListener","createEvent","nativeEvent","addResizeListener","expando","resizer","cls","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","keyframes","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","injectCSS","getElementById","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","removeAttribute","proxies","fromNativeEvent","addEvent","removeEvent","positionIsHorizontal","types","instances","initConfig","_bufferedRender","controller","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scaleOptions","xAxes","xAxisOptions","yAxes","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","updateIndex","linkScales","ControllerClass","resetElements","reset","newOptions","updateConfig","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","easingValue","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","xAxisID","yAxisID","getVisibleDatasetCount","generateLegend","legendCallback","unbindEvents","toBase64Image","toDataURL","_chartInstance","listeners","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","Controller","arrayEvents","unlistenArrayEvents","stub","_chartjs","DatasetController","datasetElementType","dataElementType","addElements","getMeta","getDataset","getScaleForId","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","updateElement","res","resyncElements","removeHoverStyle","$previousStyle","setHoverStyle","hoverBackgroundColor","hoverBorderColor","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","LinearScaleBase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","stepSize","fixedStepSize","generationOptions","dataRange","factor","spacing","niceRange","ceil","niceMin","niceMax","numSpaces","generateTicks","end","ticksAsNumbers","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","IDMatches","hasStacks","valuesPerStack","join","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","tickFontSize","rightValue","innerDimension","LogarithmicScale","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","animate","angleLines","circular","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","getValueCount","getPointLabelFontOptions","pointLabelOptions","determineLimits","getTextAlignForAngle","text","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","LinearRadialScale","xCenter","yCenter","drawingArea","pointPosition","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","_fit","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","getDistanceFromCenterForValue","scalingFactor","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","drawRadiusLine","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","table","skey","tkey","mid","i0","i1","lo","lookup","prev","span","momentify","parser","format","parse","input","time","startOf","valueOf","determineMajorUnit","unit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","last","milliseconds","determineStepSize","TimeScale","warn","timestamp","timestamps","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","diff","as","determineUnitForFormatting","_majorUnit","distribution","curr","buildLookupTable","_offsets","upper","lower","computeOffsets","_labelFormat","momentDate","hasTime","determineLabelFormat","majorUnit","ticksFromTimestamps","tooltipFormat","tickFormatFunction","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","getLabelWidth","ticksOpts","tickLabelWidth","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","categoryPercentage","barPercentage","rects","_ruler","getRuler","rectangleOptions","datasetLabel","updateElementGeometry","vscale","getValueScale","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","stackCount","pixels","barThickness","computeMinSampleSize","imeta","ivalue","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","horizontalBar","dataPoint","bubble","_resolveElementOptions","dsIndex","dataIndex","animateRotate","animateScale","generateLabels","ds","arcOpts","legendItem","cutoutPercentage","circumference","dataLabel","doughnut","pie","getRingIndex","ringIndex","availableWidth","availableHeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","elementOpts","arcs","hoverWidth","lineEnabled","showLine","lineElementOptions","lineTension","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","getPointRotation","pointRotation","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","controlPoints","capControlPoint","halfBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","datasetStartAngle","resetRadius","radar","pointElementOptions","scatter","PolarArea","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","createNewLegendAndAttach","legendOpts","beforeInit","afterEvent","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","RegExp","replace","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","setCacheAdd","setCacheHas","predicate","Uint8Array","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","byteLength","byteOffset","buffer","message","getAllKeys","objProps","objLength","skipCtor","objValue","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","typedArrayTags","freeProcess","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","find","createFind","baseIteratee","findIndexFunc","iterable","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","isStrictComparable","hasIn","baseGet","memoizeCapped","rePropName","reEscapeChar","charCodeAt","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","baseToString","arrayMap","symbolToString","baseHasIn","hasPath","hasFunc","baseProperty","basePropertyDeep","baseFindIndex","toInteger","nativeMax","fromRight","toFinite","remainder","toNumber","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","isBinary","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","setter","initializer","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","eachFunc"],"mappings":"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","file":"static/js/1.73867ee0.chunk.js","sourcesContent":["'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n  /**\n   * @private\n   */\n  _set: function _set(scope, values) {\n    return helpers.merge(this[scope] || (this[scope] = {}), values);\n  }\n};","'use strict';\n\nvar color = require('chartjs-color');\n\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n  var keys = Object.keys(model);\n  var i, ilen, key, actual, origin, target, type, c0, c1;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    target = model[key]; // if a value is added to the model after pivot() has been called, the view\n    // doesn't contain it, so let's initialize the view to the target value.\n\n    if (!view.hasOwnProperty(key)) {\n      view[key] = target;\n    }\n\n    actual = view[key];\n\n    if (actual === target || key[0] === '_') {\n      continue;\n    }\n\n    if (!start.hasOwnProperty(key)) {\n      start[key] = actual;\n    }\n\n    origin = start[key];\n    type = typeof target;\n\n    if (type === typeof origin) {\n      if (type === 'string') {\n        c0 = color(origin);\n\n        if (c0.valid) {\n          c1 = color(target);\n\n          if (c1.valid) {\n            view[key] = c1.mix(c0, ease).rgbString();\n            continue;\n          }\n        }\n      } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n        view[key] = origin + (target - origin) * ease;\n        continue;\n      }\n    }\n\n    view[key] = target;\n  }\n}\n\nvar Element = function Element(configuration) {\n  helpers.extend(this, configuration);\n  this.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n  initialize: function initialize() {\n    this.hidden = false;\n  },\n  pivot: function pivot() {\n    var me = this;\n\n    if (!me._view) {\n      me._view = helpers.clone(me._model);\n    }\n\n    me._start = {};\n    return me;\n  },\n  transition: function transition(ease) {\n    var me = this;\n    var model = me._model;\n    var start = me._start;\n    var view = me._view; // No animation -> No Transition\n\n    if (!model || ease === 1) {\n      me._view = model;\n      me._start = null;\n      return me;\n    }\n\n    if (!view) {\n      view = me._view = {};\n    }\n\n    if (!start) {\n      start = me._start = {};\n    }\n\n    interpolate(start, view, model, ease);\n    return me;\n  },\n  tooltipPosition: function tooltipPosition() {\n    return {\n      x: this._model.x,\n      y: this._model.y\n    };\n  },\n  hasValue: function hasValue() {\n    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n  }\n});\nElement.extend = helpers.inherits;\nmodule.exports = Element;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('./core.layouts');\n\nmodule.exports = {\n  // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n  // use the new chart options to grab the correct scale\n  constructors: {},\n  // Use a registration function so that we can move to an ES6 map when we no longer need to support\n  // old browsers\n  // Scale config defaults\n  defaults: {},\n  registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n    this.constructors[type] = scaleConstructor;\n    this.defaults[type] = helpers.clone(scaleDefaults);\n  },\n  getScaleConstructor: function getScaleConstructor(type) {\n    return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n  },\n  getScaleDefaults: function getScaleDefaults(type) {\n    // Return the scale defaults merged with the global settings so that we always use the latest ones\n    return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n  },\n  updateScaleDefaults: function updateScaleDefaults(type, additions) {\n    var me = this;\n\n    if (me.defaults.hasOwnProperty(type)) {\n      me.defaults[type] = helpers.extend(me.defaults[type], additions);\n    }\n  },\n  addScalesToLayout: function addScalesToLayout(chart) {\n    // Adds each scale to the chart.boxes array to be sized accordingly\n    helpers.each(chart.scales, function (scale) {\n      // Set ILayoutItem parameters for backwards compatibility\n      scale.fullWidth = scale.options.fullWidth;\n      scale.position = scale.options.position;\n      scale.weight = scale.options.weight;\n      layouts.addBox(chart, scale);\n    });\n  }\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n  return helpers.where(array, function (v) {\n    return v.position === position;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  array.forEach(function (v, i) {\n    v._tmpIndex_ = i;\n    return v;\n  });\n  array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n  });\n  array.forEach(function (v) {\n    delete v._tmpIndex_;\n  });\n}\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\n\n\nmodule.exports = {\n  defaults: {},\n\n  /**\n   * Register a box to a chart.\n   * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n   * @param {Chart} chart - the chart to use\n   * @param {ILayoutItem} item - the item to add to be layed out\n   */\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    } // initialize item with default values\n\n\n    item.fullWidth = item.fullWidth || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    chart.boxes.push(item);\n  },\n\n  /**\n   * Remove a layoutItem from a chart\n   * @param {Chart} chart - the chart to remove the box from\n   * @param {Object} layoutItem - the item to remove from the layout\n   */\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n   * Sets (or updates) options on the given `item`.\n   * @param {Chart} chart - the chart in which the item lives (or will be added to)\n   * @param {Object} item - the item to configure with the given options\n   * @param {Object} options - the new item options.\n   */\n  configure: function configure(chart, item, options) {\n    var props = ['fullWidth', 'position', 'weight'];\n    var ilen = props.length;\n    var i = 0;\n    var prop;\n\n    for (; i < ilen; ++i) {\n      prop = props[i];\n\n      if (options.hasOwnProperty(prop)) {\n        item[prop] = options[prop];\n      }\n    }\n  },\n\n  /**\n   * Fits boxes of the given chart into the given size by having each box measure itself\n   * then running a fitting algorithm\n   * @param {Chart} chart - the chart\n   * @param {Number} width - the width to fit into\n   * @param {Number} height - the height to fit into\n   */\n  update: function update(chart, width, height) {\n    if (!chart) {\n      return;\n    }\n\n    var layoutOptions = chart.options.layout || {};\n    var padding = helpers.options.toPadding(layoutOptions.padding);\n    var leftPadding = padding.left;\n    var rightPadding = padding.right;\n    var topPadding = padding.top;\n    var bottomPadding = padding.bottom;\n    var leftBoxes = filterByPosition(chart.boxes, 'left');\n    var rightBoxes = filterByPosition(chart.boxes, 'right');\n    var topBoxes = filterByPosition(chart.boxes, 'top');\n    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n    sortByWeight(leftBoxes, true);\n    sortByWeight(rightBoxes, false);\n    sortByWeight(topBoxes, true);\n    sortByWeight(bottomBoxes, false); // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n    // What we do to find the best sizing, we do the following\n    // 1. Determine the minimum size of the chart area.\n    // 2. Split the remaining width equally between each vertical axis\n    // 3. Split the remaining height equally between each horizontal axis\n    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n    // 5. Adjust the sizes of each axis based on it's minimum reported size.\n    // 6. Refit each axis\n    // 7. Position each axis in the final location\n    // 8. Tell the chart the final location of the chart area\n    // 9. Tell any axes that overlay the chart area the positions of the chart area\n    // Step 1\n\n    var chartWidth = width - leftPadding - rightPadding;\n    var chartHeight = height - topPadding - bottomPadding;\n    var chartAreaWidth = chartWidth / 2; // min 50%\n\n    var chartAreaHeight = chartHeight / 2; // min 50%\n    // Step 2\n\n    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length); // Step 3\n\n    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length); // Step 4\n\n    var maxChartAreaWidth = chartWidth;\n    var maxChartAreaHeight = chartHeight;\n    var minBoxSizes = [];\n\n    function getMinimumBoxSize(box) {\n      var minSize;\n      var isHorizontal = box.isHorizontal();\n\n      if (isHorizontal) {\n        minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n        maxChartAreaHeight -= minSize.height;\n      } else {\n        minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n        maxChartAreaWidth -= minSize.width;\n      }\n\n      minBoxSizes.push({\n        horizontal: isHorizontal,\n        minSize: minSize,\n        box: box\n      });\n    }\n\n    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n    var maxHorizontalLeftPadding = 0;\n    var maxHorizontalRightPadding = 0;\n    var maxVerticalTopPadding = 0;\n    var maxVerticalBottomPadding = 0;\n    helpers.each(topBoxes.concat(bottomBoxes), function (horizontalBox) {\n      if (horizontalBox.getPadding) {\n        var boxPadding = horizontalBox.getPadding();\n        maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n        maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n      }\n    });\n    helpers.each(leftBoxes.concat(rightBoxes), function (verticalBox) {\n      if (verticalBox.getPadding) {\n        var boxPadding = verticalBox.getPadding();\n        maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n        maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n      }\n    }); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n    // be if the axes are drawn at their minimum sizes.\n    // Steps 5 & 6\n\n    var totalLeftBoxesWidth = leftPadding;\n    var totalRightBoxesWidth = rightPadding;\n    var totalTopBoxesHeight = topPadding;\n    var totalBottomBoxesHeight = bottomPadding; // Function to fit a box\n\n    function fitBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minBox) {\n        return minBox.box === box;\n      });\n\n      if (minBoxSize) {\n        if (box.isHorizontal()) {\n          var scaleMargin = {\n            left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n            right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n            top: 0,\n            bottom: 0\n          }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n          // on the margin. Sometimes they need to increase in size slightly\n\n          box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n        } else {\n          box.update(minBoxSize.minSize.width, maxChartAreaHeight);\n        }\n      }\n    } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    }); // Set the Left and Right margins for the horizontal boxes\n\n    helpers.each(topBoxes.concat(bottomBoxes), fitBox); // Figure out how much margin is on the top and bottom of the vertical boxes\n\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    });\n\n    function finalFitVerticalBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minSize) {\n        return minSize.box === box;\n      });\n      var scaleMargin = {\n        left: 0,\n        right: 0,\n        top: totalTopBoxesHeight,\n        bottom: totalBottomBoxesHeight\n      };\n\n      if (minBoxSize) {\n        box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n      }\n    } // Let the left layout know the final margin\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n    totalLeftBoxesWidth = leftPadding;\n    totalRightBoxesWidth = rightPadding;\n    totalTopBoxesHeight = topPadding;\n    totalBottomBoxesHeight = bottomPadding;\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    });\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    }); // We may be adding some padding to account for rotated x axis labels\n\n    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n    totalLeftBoxesWidth += leftPaddingAddition;\n    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n    totalTopBoxesHeight += topPaddingAddition;\n    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n    // without calling `fit` again\n\n    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n      helpers.each(leftBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(rightBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(topBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      helpers.each(bottomBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      maxChartAreaHeight = newMaxChartAreaHeight;\n      maxChartAreaWidth = newMaxChartAreaWidth;\n    } // Step 7 - Position the boxes\n\n\n    var left = leftPadding + leftPaddingAddition;\n    var top = topPadding + topPaddingAddition;\n\n    function placeBox(box) {\n      if (box.isHorizontal()) {\n        box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n        box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n        box.top = top;\n        box.bottom = top + box.height; // Move to next point\n\n        top = box.bottom;\n      } else {\n        box.left = left;\n        box.right = left + box.width;\n        box.top = totalTopBoxesHeight;\n        box.bottom = totalTopBoxesHeight + maxChartAreaHeight; // Move to next point\n\n        left = box.right;\n      }\n    }\n\n    helpers.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n    left += maxChartAreaWidth;\n    top += maxChartAreaHeight;\n    helpers.each(rightBoxes, placeBox);\n    helpers.each(bottomBoxes, placeBox); // Step 8\n\n    chart.chartArea = {\n      left: totalLeftBoxesWidth,\n      top: totalTopBoxesHeight,\n      right: totalLeftBoxesWidth + maxChartAreaWidth,\n      bottom: totalTopBoxesHeight + maxChartAreaHeight\n    }; // Step 9\n\n    helpers.each(chartAreaBoxes, function (box) {\n      box.left = chart.chartArea.left;\n      box.top = chart.chartArea.top;\n      box.right = chart.chartArea.right;\n      box.bottom = chart.chartArea.bottom;\n      box.update(maxChartAreaWidth, maxChartAreaHeight);\n    });\n  }\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n  display: true,\n  position: 'left',\n  offset: false,\n  // grid line settings\n  gridLines: {\n    display: true,\n    color: 'rgba(0, 0, 0, 0.1)',\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickMarkLength: 10,\n    zeroLineWidth: 1,\n    zeroLineColor: 'rgba(0,0,0,0.25)',\n    zeroLineBorderDash: [],\n    zeroLineBorderDashOffset: 0.0,\n    offsetGridLines: false,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  // scale label\n  scaleLabel: {\n    // display property\n    display: false,\n    // actual label\n    labelString: '',\n    // line height\n    lineHeight: 1.2,\n    // top/bottom padding\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  // label settings\n  ticks: {\n    beginAtZero: false,\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    padding: 0,\n    reverse: false,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 0,\n    labelOffset: 0,\n    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {}\n  }\n});\n\nfunction labelsFromTicks(ticks) {\n  var labels = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    labels.push(ticks[i].label);\n  }\n\n  return labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n  var lineValue = scale.getPixelForTick(index);\n\n  if (offsetGridLines) {\n    if (index === 0) {\n      lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n  return helpers.isArray(tick) ? helpers.longestText(context, font, tick) : context.measureText(tick).width;\n}\n\nfunction parseFontOptions(options) {\n  var valueOrDefault = helpers.valueOrDefault;\n  var globalDefaults = defaults.global;\n  var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n  var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n  var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n  return {\n    size: size,\n    style: style,\n    family: family,\n    font: helpers.fontString(size, style, family)\n  };\n}\n\nfunction parseLineHeight(options) {\n  return helpers.options.toLineHeight(helpers.valueOrDefault(options.lineHeight, 1.2), helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n}\n\nmodule.exports = Element.extend({\n  /**\n   * Get the padding needed for the scale\n   * @method getPadding\n   * @private\n   * @returns {Padding} the necessary padding\n   */\n  getPadding: function getPadding() {\n    var me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  },\n\n  /**\n   * Returns the scale tick objects ({label, major})\n   * @since 2.7\n   */\n  getTicks: function getTicks() {\n    return this._ticks;\n  },\n  // These methods are ordered by lifecyle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n  mergeTicksOptions: function mergeTicksOptions() {\n    var ticks = this.options.ticks;\n\n    if (ticks.minor === false) {\n      ticks.minor = {\n        display: false\n      };\n    }\n\n    if (ticks.major === false) {\n      ticks.major = {\n        display: false\n      };\n    }\n\n    for (var key in ticks) {\n      if (key !== 'major' && key !== 'minor') {\n        if (typeof ticks.minor[key] === 'undefined') {\n          ticks.minor[key] = ticks[key];\n        }\n\n        if (typeof ticks.major[key] === 'undefined') {\n          ticks.major[key] = ticks[key];\n        }\n      }\n    }\n  },\n  beforeUpdate: function beforeUpdate() {\n    helpers.callback(this.options.beforeUpdate, [this]);\n  },\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this;\n    var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = helpers.extend({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Data min/max\n\n    me.beforeDataLimits();\n    me.determineDataLimits();\n    me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n    // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n    // and must not be accessed directly from outside this class. `this.ticks` being\n    // around for long time and not marked as private, we can't change its structure\n    // without unexpected breaking changes. If you need to access the scale ticks,\n    // use scale.getTicks() instead.\n\n    me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n    // we still support no return (`this.ticks` internally set by calling this method).\n\n    ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n    // COMPAT, we still support no return (`this.ticks` internally changed by calling\n    // this method and supposed to contain only string values).\n\n    labels = me.convertTicksToLabels(ticks) || me.ticks;\n    me.afterTickToLabelConversion();\n    me.ticks = labels; // BACKWARD COMPATIBILITY\n    // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n    // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      tick = ticks[i];\n\n      if (!tick) {\n        ticks.push(tick = {\n          label: label,\n          major: false\n        });\n      } else {\n        tick.label = label;\n      }\n    }\n\n    me._ticks = ticks; // Tick Rotation\n\n    me.beforeCalculateTickRotation();\n    me.calculateTickRotation();\n    me.afterCalculateTickRotation(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: function afterUpdate() {\n    helpers.callback(this.options.afterUpdate, [this]);\n  },\n  //\n  beforeSetDimensions: function beforeSetDimensions() {\n    helpers.callback(this.options.beforeSetDimensions, [this]);\n  },\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  },\n  afterSetDimensions: function afterSetDimensions() {\n    helpers.callback(this.options.afterSetDimensions, [this]);\n  },\n  // Data limits\n  beforeDataLimits: function beforeDataLimits() {\n    helpers.callback(this.options.beforeDataLimits, [this]);\n  },\n  determineDataLimits: helpers.noop,\n  afterDataLimits: function afterDataLimits() {\n    helpers.callback(this.options.afterDataLimits, [this]);\n  },\n  //\n  beforeBuildTicks: function beforeBuildTicks() {\n    helpers.callback(this.options.beforeBuildTicks, [this]);\n  },\n  buildTicks: helpers.noop,\n  afterBuildTicks: function afterBuildTicks() {\n    helpers.callback(this.options.afterBuildTicks, [this]);\n  },\n  beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n    helpers.callback(this.options.beforeTickToLabelConversion, [this]);\n  },\n  convertTicksToLabels: function convertTicksToLabels() {\n    var me = this; // Convert ticks to strings\n\n    var tickOpts = me.options.ticks;\n    me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n  },\n  afterTickToLabelConversion: function afterTickToLabelConversion() {\n    helpers.callback(this.options.afterTickToLabelConversion, [this]);\n  },\n  //\n  beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n    helpers.callback(this.options.beforeCalculateTickRotation, [this]);\n  },\n  calculateTickRotation: function calculateTickRotation() {\n    var me = this;\n    var context = me.ctx;\n    var tickOpts = me.options.ticks;\n    var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n    // between x offsets between 0 and 1.\n\n    var tickFont = parseFontOptions(tickOpts);\n    context.font = tickFont.font;\n    var labelRotation = tickOpts.minRotation || 0;\n\n    if (labels.length && me.options.display && me.isHorizontal()) {\n      var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n      var labelWidth = originalLabelWidth;\n      var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n      var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n      while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n        var angleRadians = helpers.toRadians(labelRotation);\n        cosRotation = Math.cos(angleRadians);\n        sinRotation = Math.sin(angleRadians);\n\n        if (sinRotation * originalLabelWidth > me.maxHeight) {\n          // go back one step\n          labelRotation--;\n          break;\n        }\n\n        labelRotation++;\n        labelWidth = cosRotation * originalLabelWidth;\n      }\n    }\n\n    me.labelRotation = labelRotation;\n  },\n  afterCalculateTickRotation: function afterCalculateTickRotation() {\n    helpers.callback(this.options.afterCalculateTickRotation, [this]);\n  },\n  //\n  beforeFit: function beforeFit() {\n    helpers.callback(this.options.beforeFit, [this]);\n  },\n  fit: function fit() {\n    var me = this; // Reset\n\n    var minSize = me.minSize = {\n      width: 0,\n      height: 0\n    };\n    var labels = labelsFromTicks(me._ticks);\n    var opts = me.options;\n    var tickOpts = opts.ticks;\n    var scaleLabelOpts = opts.scaleLabel;\n    var gridLineOpts = opts.gridLines;\n    var display = opts.display;\n    var isHorizontal = me.isHorizontal();\n    var tickFont = parseFontOptions(tickOpts);\n    var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n    if (isHorizontal) {\n      // subtract the margins to line up with the chartArea if we are a full width scale\n      minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n    } else {\n      minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } // height\n\n\n    if (isHorizontal) {\n      minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } else {\n      minSize.height = me.maxHeight; // fill all the height\n    } // Are we showing a title for the scale?\n\n\n    if (scaleLabelOpts.display && display) {\n      var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n      var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n      var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n      if (isHorizontal) {\n        minSize.height += deltaHeight;\n      } else {\n        minSize.width += deltaHeight;\n      }\n    } // Don't bother fitting the ticks if we are not showing them\n\n\n    if (tickOpts.display && display) {\n      var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n      var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n      var lineSpace = tickFont.size * 0.5;\n      var tickPadding = me.options.ticks.padding;\n\n      if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n        me.longestLabelWidth = largestTextWidth;\n        var angleRadians = helpers.toRadians(me.labelRotation);\n        var cosRotation = Math.cos(angleRadians);\n        var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n        var labelHeight = sinRotation * largestTextWidth + tickFont.size * tallestLabelHeightInLines + lineSpace * (tallestLabelHeightInLines - 1) + lineSpace; // padding\n\n        minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        me.ctx.font = tickFont.font;\n        var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n        var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font); // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n        // which means that the right padding is dominated by the font height\n\n        if (me.labelRotation !== 0) {\n          me.paddingLeft = opts.position === 'bottom' ? cosRotation * firstLabelWidth + 3 : cosRotation * lineSpace + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = opts.position === 'bottom' ? cosRotation * lineSpace + 3 : cosRotation * lastLabelWidth + 3;\n        } else {\n          me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = lastLabelWidth / 2 + 3;\n        }\n      } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n        if (tickOpts.mirror) {\n          largestTextWidth = 0;\n        } else {\n          // use lineSpace for consistency with horizontal axis\n          // tickPadding is not implemented for horizontal\n          largestTextWidth += tickPadding + lineSpace;\n        }\n\n        minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n        me.paddingTop = tickFont.size / 2;\n        me.paddingBottom = tickFont.size / 2;\n      }\n    }\n\n    me.handleMargins();\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n\n  /**\n   * Handle margins and padding interactions\n   * @private\n   */\n  handleMargins: function handleMargins() {\n    var me = this;\n\n    if (me.margins) {\n      me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n      me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n      me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n      me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n    }\n  },\n  afterFit: function afterFit() {\n    helpers.callback(this.options.afterFit, [this]);\n  },\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  isFullWidth: function isFullWidth() {\n    return this.options.fullWidth;\n  },\n  // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n  getRightValue: function getRightValue(rawValue) {\n    // Null and undefined values first\n    if (helpers.isNullOrUndef(rawValue)) {\n      return NaN;\n    } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n    if (typeof rawValue === 'number' && !isFinite(rawValue)) {\n      return NaN;\n    } // If it is in fact an object, dive in one more level\n\n\n    if (rawValue) {\n      if (this.isHorizontal()) {\n        if (rawValue.x !== undefined) {\n          return this.getRightValue(rawValue.x);\n        }\n      } else if (rawValue.y !== undefined) {\n        return this.getRightValue(rawValue.y);\n      }\n    } // Value is good, return it\n\n\n    return rawValue;\n  },\n\n  /**\n   * Used to get the value to display in the tooltip for the data at the given index\n   * @param index\n   * @param datasetIndex\n   */\n  getLabelForIndex: helpers.noop,\n\n  /**\n   * Returns the location of the given data point. Value can either be an index or a numerical value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param value\n   * @param index\n   * @param datasetIndex\n   */\n  getPixelForValue: helpers.noop,\n\n  /**\n   * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param pixel\n   */\n  getValueForPixel: helpers.noop,\n\n  /**\n   * Returns the location of the tick at the given index\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForTick: function getPixelForTick(index) {\n    var me = this;\n    var offset = me.options.offset;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var pixel = tickWidth * index + me.paddingLeft;\n\n      if (offset) {\n        pixel += tickWidth / 2;\n      }\n\n      var finalVal = me.left + Math.round(pixel);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n    return me.top + index * (innerHeight / (me._ticks.length - 1));\n  },\n\n  /**\n   * Utility for getting the pixel location of a percentage of scale\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForDecimal: function getPixelForDecimal(decimal) {\n    var me = this;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var valueOffset = innerWidth * decimal + me.paddingLeft;\n      var finalVal = me.left + Math.round(valueOffset);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    return me.top + decimal * me.height;\n  },\n\n  /**\n   * Returns the pixel for the minimum chart value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getBasePixel: function getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  },\n  getBaseValue: function getBaseValue() {\n    var me = this;\n    var min = me.min;\n    var max = me.max;\n    return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  },\n\n  /**\n   * Returns a subset of ticks to be plotted to avoid overlapping labels.\n   * @private\n   */\n  _autoSkip: function _autoSkip(ticks) {\n    var skipRatio;\n    var me = this;\n    var isHorizontal = me.isHorizontal();\n    var optionTicks = me.options.ticks.minor;\n    var tickCount = ticks.length;\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var cosRotation = Math.cos(labelRotationRadians);\n    var longestRotatedLabel = me.longestLabelWidth * cosRotation;\n    var result = [];\n    var i, tick, shouldSkip; // figure out the maximum number of gridlines to show\n\n    var maxTicks;\n\n    if (optionTicks.maxTicksLimit) {\n      maxTicks = optionTicks.maxTicksLimit;\n    }\n\n    if (isHorizontal) {\n      skipRatio = false;\n\n      if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > me.width - (me.paddingLeft + me.paddingRight)) {\n        skipRatio = 1 + Math.floor((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount / (me.width - (me.paddingLeft + me.paddingRight)));\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (maxTicks && tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n      }\n    }\n\n    for (i = 0; i < tickCount; i++) {\n      tick = ticks[i]; // Since we always show the last tick,we need may need to hide the last shown one before\n\n      shouldSkip = skipRatio > 1 && i % skipRatio > 0 || i % skipRatio === 0 && i + skipRatio >= tickCount;\n\n      if (shouldSkip && i !== tickCount - 1) {\n        // leave tick in place but make sure it's not displayed (#4635)\n        delete tick.label;\n      }\n\n      result.push(tick);\n    }\n\n    return result;\n  },\n  // Actually draw the scale on the canvas\n  // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n  draw: function draw(chartArea) {\n    var me = this;\n    var options = me.options;\n\n    if (!options.display) {\n      return;\n    }\n\n    var context = me.ctx;\n    var globalDefaults = defaults.global;\n    var optionTicks = options.ticks.minor;\n    var optionMajorTicks = options.ticks.major || optionTicks;\n    var gridLines = options.gridLines;\n    var scaleLabel = options.scaleLabel;\n    var isRotated = me.labelRotation !== 0;\n    var isHorizontal = me.isHorizontal();\n    var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n    var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n    var tickFont = parseFontOptions(optionTicks);\n    var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n    var majorTickFont = parseFontOptions(optionMajorTicks);\n    var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n    var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n    var scaleLabelFont = parseFontOptions(scaleLabel);\n    var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var itemsToDraw = [];\n    var axisWidth = me.options.gridLines.lineWidth;\n    var xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;\n    var xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n    var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n    var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n    helpers.each(ticks, function (tick, index) {\n      // autoskipper skipped this tick (#4635)\n      if (helpers.isNullOrUndef(tick.label)) {\n        return;\n      }\n\n      var label = tick.label;\n      var lineWidth, lineColor, borderDash, borderDashOffset;\n\n      if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n        // Draw the first index specially\n        lineWidth = gridLines.zeroLineWidth;\n        lineColor = gridLines.zeroLineColor;\n        borderDash = gridLines.zeroLineBorderDash;\n        borderDashOffset = gridLines.zeroLineBorderDashOffset;\n      } else {\n        lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n        lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n        borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n        borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n      } // Common properties\n\n\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n      var textAlign = 'middle';\n      var textBaseline = 'middle';\n      var tickPadding = optionTicks.padding;\n\n      if (isHorizontal) {\n        var labelYOffset = tl + tickPadding;\n\n        if (options.position === 'bottom') {\n          // bottom\n          textBaseline = !isRotated ? 'top' : 'middle';\n          textAlign = !isRotated ? 'center' : 'right';\n          labelY = me.top + labelYOffset;\n        } else {\n          // top\n          textBaseline = !isRotated ? 'bottom' : 'middle';\n          textAlign = !isRotated ? 'center' : 'left';\n          labelY = me.bottom - labelYOffset;\n        }\n\n        var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (xLineValue < me.left) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        xLineValue += helpers.aliasPixel(lineWidth);\n        labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n        tx1 = tx2 = x1 = x2 = xLineValue;\n        ty1 = yTickStart;\n        ty2 = yTickEnd;\n        y1 = chartArea.top;\n        y2 = chartArea.bottom + axisWidth;\n      } else {\n        var isLeft = options.position === 'left';\n        var labelXOffset;\n\n        if (optionTicks.mirror) {\n          textAlign = isLeft ? 'left' : 'right';\n          labelXOffset = tickPadding;\n        } else {\n          textAlign = isLeft ? 'right' : 'left';\n          labelXOffset = tl + tickPadding;\n        }\n\n        labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n        var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (yLineValue < me.top) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        yLineValue += helpers.aliasPixel(lineWidth);\n        labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n        tx1 = xTickStart;\n        tx2 = xTickEnd;\n        x1 = chartArea.left;\n        x2 = chartArea.right + axisWidth;\n        ty1 = ty2 = y1 = y2 = yLineValue;\n      }\n\n      itemsToDraw.push({\n        tx1: tx1,\n        ty1: ty1,\n        tx2: tx2,\n        ty2: ty2,\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        labelX: labelX,\n        labelY: labelY,\n        glWidth: lineWidth,\n        glColor: lineColor,\n        glBorderDash: borderDash,\n        glBorderDashOffset: borderDashOffset,\n        rotation: -1 * labelRotationRadians,\n        label: label,\n        major: tick.major,\n        textBaseline: textBaseline,\n        textAlign: textAlign\n      });\n    }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n    helpers.each(itemsToDraw, function (itemToDraw) {\n      if (gridLines.display) {\n        context.save();\n        context.lineWidth = itemToDraw.glWidth;\n        context.strokeStyle = itemToDraw.glColor;\n\n        if (context.setLineDash) {\n          context.setLineDash(itemToDraw.glBorderDash);\n          context.lineDashOffset = itemToDraw.glBorderDashOffset;\n        }\n\n        context.beginPath();\n\n        if (gridLines.drawTicks) {\n          context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n          context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n        }\n\n        if (gridLines.drawOnChartArea) {\n          context.moveTo(itemToDraw.x1, itemToDraw.y1);\n          context.lineTo(itemToDraw.x2, itemToDraw.y2);\n        }\n\n        context.stroke();\n        context.restore();\n      }\n\n      if (optionTicks.display) {\n        // Make sure we draw text in the correct color and font\n        context.save();\n        context.translate(itemToDraw.labelX, itemToDraw.labelY);\n        context.rotate(itemToDraw.rotation);\n        context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n        context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n        context.textBaseline = itemToDraw.textBaseline;\n        context.textAlign = itemToDraw.textAlign;\n        var label = itemToDraw.label;\n\n        if (helpers.isArray(label)) {\n          var lineCount = label.length;\n          var lineHeight = tickFont.size * 1.5;\n          var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n          for (var i = 0; i < lineCount; ++i) {\n            // We just make sure the multiline element is a string here..\n            context.fillText('' + label[i], 0, y); // apply same lineSpacing as calculated @ L#320\n\n            y += lineHeight;\n          }\n        } else {\n          context.fillText(label, 0, 0);\n        }\n\n        context.restore();\n      }\n    });\n\n    if (scaleLabel.display) {\n      // Draw the scale label\n      var scaleLabelX;\n      var scaleLabelY;\n      var rotation = 0;\n      var halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n      if (isHorizontal) {\n        scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n        scaleLabelY = options.position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n      } else {\n        var isLeft = options.position === 'left';\n        scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n        scaleLabelY = me.top + (me.bottom - me.top) / 2;\n        rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n      }\n\n      context.save();\n      context.translate(scaleLabelX, scaleLabelY);\n      context.rotate(rotation);\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n      context.font = scaleLabelFont.font;\n      context.fillText(scaleLabel.labelString, 0, 0);\n      context.restore();\n    }\n\n    if (gridLines.drawBorder) {\n      // Draw the line at the edge of the axis\n      context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n      context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n      var x1 = me.left;\n      var x2 = me.right + axisWidth;\n      var y1 = me.top;\n      var y2 = me.bottom + axisWidth;\n      var aliasPixel = helpers.aliasPixel(context.lineWidth);\n\n      if (isHorizontal) {\n        y1 = y2 = options.position === 'top' ? me.bottom : me.top;\n        y1 += aliasPixel;\n        y2 += aliasPixel;\n      } else {\n        x1 = x2 = options.position === 'left' ? me.right : me.left;\n        x1 += aliasPixel;\n        x2 += aliasPixel;\n      }\n\n      context.beginPath();\n      context.moveTo(x1, y1);\n      context.lineTo(x2, y2);\n      context.stroke();\n    }\n  }\n});","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\n\n\nmodule.exports = {\n  /**\n   * Namespace to hold formatters for different types of ticks\n   * @namespace Chart.Ticks.formatters\n   */\n  formatters: {\n    /**\n     * Formatter for value labels\n     * @method Chart.Ticks.formatters.values\n     * @param value the value to display\n     * @return {String|Array} the label to display\n     */\n    values: function values(value) {\n      return helpers.isArray(value) ? value : '' + value;\n    },\n\n    /**\n     * Formatter for linear numeric ticks\n     * @method Chart.Ticks.formatters.linear\n     * @param tickValue {Number} the value to be formatted\n     * @param index {Number} the position of the tickValue parameter in the ticks array\n     * @param ticks {Array<Number>} the list of ticks being converted\n     * @return {String} string representation of the tickValue parameter\n     */\n    linear: function linear(tickValue, index, ticks) {\n      // If we have lots of ticks, don't use the ones\n      var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n      if (Math.abs(delta) > 1) {\n        if (tickValue !== Math.floor(tickValue)) {\n          // not an integer\n          delta = tickValue - Math.floor(tickValue);\n        }\n      }\n\n      var logDelta = helpers.log10(Math.abs(delta));\n      var tickString = '';\n\n      if (tickValue !== 0) {\n        var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n        if (maxTick < 1e-4) {\n          // all ticks are small numbers; use scientific notation\n          var logTick = helpers.log10(Math.abs(tickValue));\n          tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n        } else {\n          var numDecimal = -1 * Math.floor(logDelta);\n          numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n          tickString = tickValue.toFixed(numDecimal);\n        }\n      } else {\n        tickString = '0'; // never show decimal places for 0\n      }\n\n      return tickString;\n    },\n    logarithmic: function logarithmic(tickValue, index, ticks) {\n      var remain = tickValue / Math.pow(10, Math.floor(helpers.log10(tickValue)));\n\n      if (tickValue === 0) {\n        return '0';\n      } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n        return tickValue.toExponential();\n      }\n\n      return '';\n    }\n  }\n};","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","'use strict';\n/**\n * @namespace Chart.helpers\n */\n\nvar helpers = {\n  /**\n   * An empty function that can be used, for example, for optional callback.\n   */\n  noop: function noop() {},\n\n  /**\n   * Returns a unique id, sequentially generated from a global variable.\n   * @returns {Number}\n   * @function\n   */\n  uid: function () {\n    var id = 0;\n    return function () {\n      return id++;\n    };\n  }(),\n\n  /**\n   * Returns true if `value` is neither null nor undefined, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isNullOrUndef: function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n  },\n\n  /**\n   * Returns true if `value` is an array, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @function\n   */\n  isArray: Array.isArray ? Array.isArray : function (value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n  /**\n   * Returns true if `value` is an object (excluding null), else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isObject: function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  },\n\n  /**\n   * Returns `value` if defined, else returns `defaultValue`.\n   * @param {*} value - The value to return if defined.\n   * @param {*} defaultValue - The value to return if `value` is undefined.\n   * @returns {*}\n   */\n  valueOrDefault: function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  },\n\n  /**\n   * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n   * @param {Array} value - The array to lookup for value at `index`.\n   * @param {Number} index - The index in `value` to lookup for value.\n   * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n   * @returns {*}\n   */\n  valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n  },\n\n  /**\n   * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n   * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n   * @param {Function} fn - The function to call.\n   * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @returns {*}\n   */\n  callback: function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  },\n\n  /**\n   * Note(SB) for performance sake, this method should only be used when loopable type\n   * is unknown or in none intensive code (not called often and small loopable). Else\n   * it's preferable to use a regular for() loop and save extra function calls.\n   * @param {Object|Array} loopable - The object or array to be iterated.\n   * @param {Function} fn - The function to call for each item.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n   */\n  each: function each(loopable, fn, thisArg, reverse) {\n    var i, len, keys;\n\n    if (helpers.isArray(loopable)) {\n      len = loopable.length;\n\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (helpers.isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  },\n\n  /**\n   * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n   * @see http://stackoverflow.com/a/14853974\n   * @param {Array} a0 - The array to compare\n   * @param {Array} a1 - The array to compare\n   * @returns {Boolean}\n   */\n  arrayEquals: function arrayEquals(a0, a1) {\n    var i, ilen, v0, v1;\n\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n\n      if (v0 instanceof Array && v1 instanceof Array) {\n        if (!helpers.arrayEquals(v0, v1)) {\n          return false;\n        }\n      } else if (v0 !== v1) {\n        // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns a deep copy of `source` without keeping references on objects and arrays.\n   * @param {*} source - The value to clone.\n   * @returns {*}\n   */\n  clone: function clone(source) {\n    if (helpers.isArray(source)) {\n      return source.map(helpers.clone);\n    }\n\n    if (helpers.isObject(source)) {\n      var target = {};\n      var keys = Object.keys(source);\n      var klen = keys.length;\n      var k = 0;\n\n      for (; k < klen; ++k) {\n        target[keys[k]] = helpers.clone(source[keys[k]]);\n      }\n\n      return target;\n    }\n\n    return source;\n  },\n\n  /**\n   * The default merger when Chart.helpers.merge is called without merger option.\n   * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n   * @private\n   */\n  _merger: function _merger(key, target, source, options) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.merge(tval, sval, options);\n    } else {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Merges source[key] in target[key] only if target[key] is undefined.\n   * @private\n   */\n  _mergerIf: function _mergerIf(key, target, source) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.mergeIf(tval, sval);\n    } else if (!target.hasOwnProperty(key)) {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` with the given `options`.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @param {Object} [options] - Merging options:\n   * @param {Function} [options.merger] - The merge method (key, target, source, options)\n   * @returns {Object} The `target` object.\n   */\n  merge: function merge(target, source, options) {\n    var sources = helpers.isArray(source) ? source : [source];\n    var ilen = sources.length;\n    var merge, i, keys, klen, k;\n\n    if (!helpers.isObject(target)) {\n      return target;\n    }\n\n    options = options || {};\n    merge = options.merger || helpers._merger;\n\n    for (i = 0; i < ilen; ++i) {\n      source = sources[i];\n\n      if (!helpers.isObject(source)) {\n        continue;\n      }\n\n      keys = Object.keys(source);\n\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        merge(keys[k], target, source, options);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @returns {Object} The `target` object.\n   */\n  mergeIf: function mergeIf(target, source) {\n    return helpers.merge(target, source, {\n      merger: helpers._mergerIf\n    });\n  },\n\n  /**\n   * Applies the contents of two or more objects together into the first object.\n   * @param {Object} target - The target object in which all objects are merged into.\n   * @param {Object} arg1 - Object containing additional properties to merge in target.\n   * @param {Object} argN - Additional objects containing properties to merge in target.\n   * @returns {Object} The `target` object.\n   */\n  extend: function extend(target) {\n    var setFn = function setFn(value, key) {\n      target[key] = value;\n    };\n\n    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n      helpers.each(arguments[i], setFn);\n    }\n\n    return target;\n  },\n\n  /**\n   * Basic javascript inheritance based on the model created in Backbone.js\n   */\n  inherits: function inherits(extensions) {\n    var me = this;\n    var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n      return me.apply(this, arguments);\n    };\n\n    var Surrogate = function Surrogate() {\n      this.constructor = ChartElement;\n    };\n\n    Surrogate.prototype = me.prototype;\n    ChartElement.prototype = new Surrogate();\n    ChartElement.extend = helpers.inherits;\n\n    if (extensions) {\n      helpers.extend(ChartElement.prototype, extensions);\n    }\n\n    ChartElement.__super__ = me.prototype;\n    return ChartElement;\n  }\n};\nmodule.exports = helpers; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.callCallback = helpers.callback;\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.indexOf = function (array, item, fromIndex) {\n  return Array.prototype.indexOf.call(array, item, fromIndex);\n};\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\n\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport find from 'lodash/find';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this2 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this2.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        redraw = _props2.redraw,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        onElementsClick = _props3.onElementsClick,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this4 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this4.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this6 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this6.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this8 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this8.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this10 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this10.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this12 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this12.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this14 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this14.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this16 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this16.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this18 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this18.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this20 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this20.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index'); // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\nrequire('./core/core.helpers')(Chart);\n\nChart.Animation = require('./core/core.animation');\nChart.animationService = require('./core/core.animations');\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Scale = require('./core/core.scale');\nChart.scaleService = require('./core/core.scaleService');\nChart.Ticks = require('./core/core.ticks');\nChart.Tooltip = require('./core/core.tooltip');\n\nrequire('./core/core.controller')(Chart);\n\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\n\nrequire('./scales/scale.category')(Chart);\n\nrequire('./scales/scale.linear')(Chart);\n\nrequire('./scales/scale.logarithmic')(Chart);\n\nrequire('./scales/scale.radialLinear')(Chart);\n\nrequire('./scales/scale.time')(Chart); // Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\n\n\nrequire('./controllers/controller.bar')(Chart);\n\nrequire('./controllers/controller.bubble')(Chart);\n\nrequire('./controllers/controller.doughnut')(Chart);\n\nrequire('./controllers/controller.line')(Chart);\n\nrequire('./controllers/controller.polarArea')(Chart);\n\nrequire('./controllers/controller.radar')(Chart);\n\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\n\nrequire('./charts/Chart.Bubble')(Chart);\n\nrequire('./charts/Chart.Doughnut')(Chart);\n\nrequire('./charts/Chart.Line')(Chart);\n\nrequire('./charts/Chart.PolarArea')(Chart);\n\nrequire('./charts/Chart.Radar')(Chart);\n\nrequire('./charts/Chart.Scatter')(Chart); // Loading built-in plugins\n\n\nvar plugins = require('./plugins');\n\nfor (var k in plugins) {\n  if (plugins.hasOwnProperty(k)) {\n    Chart.plugins.register(plugins[k]);\n  }\n}\n\nChart.platform.initialize();\nmodule.exports = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n} // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\n\nChart.Legend = plugins.legend._element;\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.Title = plugins.title._element;\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.pluginService = Chart.plugins;\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\n\nChart.PluginBase = Chart.Element.extend({});\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nChart.canvasHelpers = Chart.helpers.canvas;\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\n\nChart.layoutService = Chart.layouts;","/* MIT license */\nvar convert = require('color-convert');\n\nvar string = require('chartjs-color-string');\n\nvar Color = function Color(obj) {\n  if (obj instanceof Color) {\n    return obj;\n  }\n\n  if (!(this instanceof Color)) {\n    return new Color(obj);\n  }\n\n  this.valid = false;\n  this.values = {\n    rgb: [0, 0, 0],\n    hsl: [0, 0, 0],\n    hsv: [0, 0, 0],\n    hwb: [0, 0, 0],\n    cmyk: [0, 0, 0, 0],\n    alpha: 1\n  }; // parse Color() argument\n\n  var vals;\n\n  if (typeof obj === 'string') {\n    vals = string.getRgba(obj);\n\n    if (vals) {\n      this.setValues('rgb', vals);\n    } else if (vals = string.getHsla(obj)) {\n      this.setValues('hsl', vals);\n    } else if (vals = string.getHwb(obj)) {\n      this.setValues('hwb', vals);\n    }\n  } else if (typeof obj === 'object') {\n    vals = obj;\n\n    if (vals.r !== undefined || vals.red !== undefined) {\n      this.setValues('rgb', vals);\n    } else if (vals.l !== undefined || vals.lightness !== undefined) {\n      this.setValues('hsl', vals);\n    } else if (vals.v !== undefined || vals.value !== undefined) {\n      this.setValues('hsv', vals);\n    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n      this.setValues('hwb', vals);\n    } else if (vals.c !== undefined || vals.cyan !== undefined) {\n      this.setValues('cmyk', vals);\n    }\n  }\n};\n\nColor.prototype = {\n  isValid: function isValid() {\n    return this.valid;\n  },\n  rgb: function rgb() {\n    return this.setSpace('rgb', arguments);\n  },\n  hsl: function hsl() {\n    return this.setSpace('hsl', arguments);\n  },\n  hsv: function hsv() {\n    return this.setSpace('hsv', arguments);\n  },\n  hwb: function hwb() {\n    return this.setSpace('hwb', arguments);\n  },\n  cmyk: function cmyk() {\n    return this.setSpace('cmyk', arguments);\n  },\n  rgbArray: function rgbArray() {\n    return this.values.rgb;\n  },\n  hslArray: function hslArray() {\n    return this.values.hsl;\n  },\n  hsvArray: function hsvArray() {\n    return this.values.hsv;\n  },\n  hwbArray: function hwbArray() {\n    var values = this.values;\n\n    if (values.alpha !== 1) {\n      return values.hwb.concat([values.alpha]);\n    }\n\n    return values.hwb;\n  },\n  cmykArray: function cmykArray() {\n    return this.values.cmyk;\n  },\n  rgbaArray: function rgbaArray() {\n    var values = this.values;\n    return values.rgb.concat([values.alpha]);\n  },\n  hslaArray: function hslaArray() {\n    var values = this.values;\n    return values.hsl.concat([values.alpha]);\n  },\n  alpha: function alpha(val) {\n    if (val === undefined) {\n      return this.values.alpha;\n    }\n\n    this.setValues('alpha', val);\n    return this;\n  },\n  red: function red(val) {\n    return this.setChannel('rgb', 0, val);\n  },\n  green: function green(val) {\n    return this.setChannel('rgb', 1, val);\n  },\n  blue: function blue(val) {\n    return this.setChannel('rgb', 2, val);\n  },\n  hue: function hue(val) {\n    if (val) {\n      val %= 360;\n      val = val < 0 ? 360 + val : val;\n    }\n\n    return this.setChannel('hsl', 0, val);\n  },\n  saturation: function saturation(val) {\n    return this.setChannel('hsl', 1, val);\n  },\n  lightness: function lightness(val) {\n    return this.setChannel('hsl', 2, val);\n  },\n  saturationv: function saturationv(val) {\n    return this.setChannel('hsv', 1, val);\n  },\n  whiteness: function whiteness(val) {\n    return this.setChannel('hwb', 1, val);\n  },\n  blackness: function blackness(val) {\n    return this.setChannel('hwb', 2, val);\n  },\n  value: function value(val) {\n    return this.setChannel('hsv', 2, val);\n  },\n  cyan: function cyan(val) {\n    return this.setChannel('cmyk', 0, val);\n  },\n  magenta: function magenta(val) {\n    return this.setChannel('cmyk', 1, val);\n  },\n  yellow: function yellow(val) {\n    return this.setChannel('cmyk', 2, val);\n  },\n  black: function black(val) {\n    return this.setChannel('cmyk', 3, val);\n  },\n  hexString: function hexString() {\n    return string.hexString(this.values.rgb);\n  },\n  rgbString: function rgbString() {\n    return string.rgbString(this.values.rgb, this.values.alpha);\n  },\n  rgbaString: function rgbaString() {\n    return string.rgbaString(this.values.rgb, this.values.alpha);\n  },\n  percentString: function percentString() {\n    return string.percentString(this.values.rgb, this.values.alpha);\n  },\n  hslString: function hslString() {\n    return string.hslString(this.values.hsl, this.values.alpha);\n  },\n  hslaString: function hslaString() {\n    return string.hslaString(this.values.hsl, this.values.alpha);\n  },\n  hwbString: function hwbString() {\n    return string.hwbString(this.values.hwb, this.values.alpha);\n  },\n  keyword: function keyword() {\n    return string.keyword(this.values.rgb, this.values.alpha);\n  },\n  rgbNumber: function rgbNumber() {\n    var rgb = this.values.rgb;\n    return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n  },\n  luminosity: function luminosity() {\n    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n    var rgb = this.values.rgb;\n    var lum = [];\n\n    for (var i = 0; i < rgb.length; i++) {\n      var chan = rgb[i] / 255;\n      lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n    }\n\n    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n  },\n  contrast: function contrast(color2) {\n    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    var lum1 = this.luminosity();\n    var lum2 = color2.luminosity();\n\n    if (lum1 > lum2) {\n      return (lum1 + 0.05) / (lum2 + 0.05);\n    }\n\n    return (lum2 + 0.05) / (lum1 + 0.05);\n  },\n  level: function level(color2) {\n    var contrastRatio = this.contrast(color2);\n\n    if (contrastRatio >= 7.1) {\n      return 'AAA';\n    }\n\n    return contrastRatio >= 4.5 ? 'AA' : '';\n  },\n  dark: function dark() {\n    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n    var rgb = this.values.rgb;\n    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n    return yiq < 128;\n  },\n  light: function light() {\n    return !this.dark();\n  },\n  negate: function negate() {\n    var rgb = [];\n\n    for (var i = 0; i < 3; i++) {\n      rgb[i] = 255 - this.values.rgb[i];\n    }\n\n    this.setValues('rgb', rgb);\n    return this;\n  },\n  lighten: function lighten(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] += hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  darken: function darken(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] -= hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  saturate: function saturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] += hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  desaturate: function desaturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] -= hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  whiten: function whiten(ratio) {\n    var hwb = this.values.hwb;\n    hwb[1] += hwb[1] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  blacken: function blacken(ratio) {\n    var hwb = this.values.hwb;\n    hwb[2] += hwb[2] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  greyscale: function greyscale() {\n    var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n    this.setValues('rgb', [val, val, val]);\n    return this;\n  },\n  clearer: function clearer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha - alpha * ratio);\n    return this;\n  },\n  opaquer: function opaquer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha + alpha * ratio);\n    return this;\n  },\n  rotate: function rotate(degrees) {\n    var hsl = this.values.hsl;\n    var hue = (hsl[0] + degrees) % 360;\n    hsl[0] = hue < 0 ? 360 + hue : hue;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n\n  /**\n   * Ported from sass implementation in C\n   * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n   */\n  mix: function mix(mixinColor, weight) {\n    var color1 = this;\n    var color2 = mixinColor;\n    var p = weight === undefined ? 0.5 : weight;\n    var w = 2 * p - 1;\n    var a = color1.alpha() - color2.alpha();\n    var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n    var w2 = 1 - w1;\n    return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n  },\n  toJSON: function toJSON() {\n    return this.rgb();\n  },\n  clone: function clone() {\n    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n    // making the final build way to big to embed in Chart.js. So let's do it manually,\n    // assuming that values to clone are 1 dimension arrays containing only numbers,\n    // except 'alpha' which is a number.\n    var result = new Color();\n    var source = this.values;\n    var target = result.values;\n    var value, type;\n\n    for (var prop in source) {\n      if (source.hasOwnProperty(prop)) {\n        value = source[prop];\n        type = {}.toString.call(value);\n\n        if (type === '[object Array]') {\n          target[prop] = value.slice(0);\n        } else if (type === '[object Number]') {\n          target[prop] = value;\n        } else {\n          console.error('unexpected color value:', value);\n        }\n      }\n    }\n\n    return result;\n  }\n};\nColor.prototype.spaces = {\n  rgb: ['red', 'green', 'blue'],\n  hsl: ['hue', 'saturation', 'lightness'],\n  hsv: ['hue', 'saturation', 'value'],\n  hwb: ['hue', 'whiteness', 'blackness'],\n  cmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\nColor.prototype.maxes = {\n  rgb: [255, 255, 255],\n  hsl: [360, 100, 100],\n  hsv: [360, 100, 100],\n  hwb: [360, 100, 100],\n  cmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n  var values = this.values;\n  var vals = {};\n\n  for (var i = 0; i < space.length; i++) {\n    vals[space.charAt(i)] = values[space][i];\n  }\n\n  if (values.alpha !== 1) {\n    vals.a = values.alpha;\n  } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n  return vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n  var values = this.values;\n  var spaces = this.spaces;\n  var maxes = this.maxes;\n  var alpha = 1;\n  var i;\n  this.valid = true;\n\n  if (space === 'alpha') {\n    alpha = vals;\n  } else if (vals.length) {\n    // [10, 10, 10]\n    values[space] = vals.slice(0, space.length);\n    alpha = vals[space.length];\n  } else if (vals[space.charAt(0)] !== undefined) {\n    // {r: 10, g: 10, b: 10}\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[space.charAt(i)];\n    }\n\n    alpha = vals.a;\n  } else if (vals[spaces[space][0]] !== undefined) {\n    // {red: 10, green: 10, blue: 10}\n    var chans = spaces[space];\n\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[chans[i]];\n    }\n\n    alpha = vals.alpha;\n  }\n\n  values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n  if (space === 'alpha') {\n    return false;\n  }\n\n  var capped; // cap values of the space prior converting all values\n\n  for (i = 0; i < space.length; i++) {\n    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n    values[space][i] = Math.round(capped);\n  } // convert to all the other color spaces\n\n\n  for (var sname in spaces) {\n    if (sname !== space) {\n      values[sname] = convert[space][sname](values[space]);\n    }\n  }\n\n  return true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n  var vals = args[0];\n\n  if (vals === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof vals === 'number') {\n    vals = Array.prototype.slice.call(args);\n  }\n\n  this.setValues(space, vals);\n  return this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n  var svalues = this.values[space];\n\n  if (val === undefined) {\n    // color.red()\n    return svalues[index];\n  } else if (val === svalues[index]) {\n    // color.red(color.red())\n    return this;\n  } // color.red(100)\n\n\n  svalues[index] = val;\n  this.setValues(space, svalues);\n  return this;\n};\n\nif (typeof window !== 'undefined') {\n  window.Color = Color;\n}\n\nmodule.exports = Color;","'use strict';\n\nvar Element = require('./core.element');\n\nvar exports = module.exports = Element.extend({\n  chart: null,\n  // the animation associated chart instance\n  currentStep: 0,\n  // the current animation step\n  numSteps: 60,\n  // default number of steps\n  easing: '',\n  // the easing to use for this animation\n  render: null,\n  // render function used by the animation service\n  onAnimationProgress: null,\n  // user specified callback to fire on each step of the animation\n  onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n}); // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'animationObject', {\n  get: function get() {\n    return this;\n  }\n});\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'chartInstance', {\n  get: function get() {\n    return this.chart;\n  },\n  set: function set(value) {\n    this.chart = value;\n  }\n});","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  animation: {\n    duration: 1000,\n    easing: 'easeOutQuart',\n    onProgress: helpers.noop,\n    onComplete: helpers.noop\n  }\n});\n\nmodule.exports = {\n  frameDuration: 17,\n  animations: [],\n  dropFrames: 0,\n  request: null,\n\n  /**\n   * @param {Chart} chart - The chart to animate.\n   * @param {Chart.Animation} animation - The animation that we will animate.\n   * @param {Number} duration - The animation duration in ms.\n   * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n   */\n  addAnimation: function addAnimation(chart, animation, duration, lazy) {\n    var animations = this.animations;\n    var i, ilen;\n    animation.chart = chart;\n\n    if (!lazy) {\n      chart.animating = true;\n    }\n\n    for (i = 0, ilen = animations.length; i < ilen; ++i) {\n      if (animations[i].chart === chart) {\n        animations[i] = animation;\n        return;\n      }\n    }\n\n    animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n    if (animations.length === 1) {\n      this.requestAnimationFrame();\n    }\n  },\n  cancelAnimation: function cancelAnimation(chart) {\n    var index = helpers.findIndex(this.animations, function (animation) {\n      return animation.chart === chart;\n    });\n\n    if (index !== -1) {\n      this.animations.splice(index, 1);\n      chart.animating = false;\n    }\n  },\n  requestAnimationFrame: function requestAnimationFrame() {\n    var me = this;\n\n    if (me.request === null) {\n      // Skip animation frame requests until the active one is executed.\n      // This can happen when processing mouse events, e.g. 'mousemove'\n      // and 'mouseout' events will trigger multiple renders.\n      me.request = helpers.requestAnimFrame.call(window, function () {\n        me.request = null;\n        me.startDigest();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  startDigest: function startDigest() {\n    var me = this;\n    var startTime = Date.now();\n    var framesToDrop = 0;\n\n    if (me.dropFrames > 1) {\n      framesToDrop = Math.floor(me.dropFrames);\n      me.dropFrames = me.dropFrames % 1;\n    }\n\n    me.advance(1 + framesToDrop);\n    var endTime = Date.now();\n    me.dropFrames += (endTime - startTime) / me.frameDuration; // Do we have more stuff to animate?\n\n    if (me.animations.length > 0) {\n      me.requestAnimationFrame();\n    }\n  },\n\n  /**\n   * @private\n   */\n  advance: function advance(count) {\n    var animations = this.animations;\n    var animation, chart;\n    var i = 0;\n\n    while (i < animations.length) {\n      animation = animations[i];\n      chart = animation.chart;\n      animation.currentStep = (animation.currentStep || 0) + count;\n      animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n      helpers.callback(animation.render, [chart, animation], chart);\n      helpers.callback(animation.onAnimationProgress, [animation], chart);\n\n      if (animation.currentStep >= animation.numSteps) {\n        helpers.callback(animation.onAnimationComplete, [animation], chart);\n        chart.animating = false;\n        animations.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\n\n\nfunction getRelativePosition(e, chart) {\n  if (e.native) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return helpers.getRelativePosition(e, chart);\n}\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\n\n\nfunction parseVisibleItems(chart, handler) {\n  var datasets = chart.data.datasets;\n  var meta, i, j, ilen, jlen;\n\n  for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n    if (!chart.isDatasetVisible(i)) {\n      continue;\n    }\n\n    meta = chart.getDatasetMeta(i);\n\n    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n      var element = meta.data[j];\n\n      if (!element._view.skip) {\n        handler(element);\n      }\n    }\n  }\n}\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getIntersectItems(chart, position) {\n  var elements = [];\n  parseVisibleItems(chart, function (element) {\n    if (element.inRange(position.x, position.y)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n}\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n  var minDistance = Number.POSITIVE_INFINITY;\n  var nearestItems = [];\n  parseVisibleItems(chart, function (element) {\n    if (intersect && !element.inRange(position.x, position.y)) {\n      return;\n    }\n\n    var center = element.getCenterPoint();\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      nearestItems = [element];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      nearestItems.push(element);\n    }\n  });\n  return nearestItems;\n}\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\n\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction indexMode(chart, e, options) {\n  var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n  options.axis = options.axis || 'x';\n  var distanceMetric = getDistanceMetricForAxis(options.axis);\n  var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n  var elements = [];\n\n  if (!items.length) {\n    return [];\n  }\n\n  chart.data.datasets.forEach(function (dataset, datasetIndex) {\n    if (chart.isDatasetVisible(datasetIndex)) {\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n      if (element && !element._view.skip) {\n        elements.push(element);\n      }\n    }\n  });\n  return elements;\n}\n/**\n * @interface IInteractionOptions\n */\n\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\n\n\nmodule.exports = {\n  // Helper function for different modes\n  modes: {\n    single: function single(chart, e) {\n      var position = getRelativePosition(e, chart);\n      var elements = [];\n      parseVisibleItems(chart, function (element) {\n        if (element.inRange(position.x, position.y)) {\n          elements.push(element);\n          return elements;\n        }\n      });\n      return elements.slice(0, 1);\n    },\n\n    /**\n     * @function Chart.Interaction.modes.label\n     * @deprecated since version 2.4.0\n     * @todo remove at version 3\n     * @private\n     */\n    label: indexMode,\n\n    /**\n     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n     * @function Chart.Interaction.modes.index\n     * @since v2.4.0\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    index: indexMode,\n\n    /**\n     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect is false, we find the nearest item and return the items in that dataset\n     * @function Chart.Interaction.modes.dataset\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    dataset: function dataset(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n      if (items.length > 0) {\n        items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n      }\n\n      return items;\n    },\n\n    /**\n     * @function Chart.Interaction.modes.x-axis\n     * @deprecated since version 2.4.0. Use index mode and intersect == true\n     * @todo remove at version 3\n     * @private\n     */\n    'x-axis': function xAxis(chart, e) {\n      return indexMode(chart, e, {\n        intersect: false\n      });\n    },\n\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * of the event\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    point: function point(chart, e) {\n      var position = getRelativePosition(e, chart);\n      return getIntersectItems(chart, position);\n    },\n\n    /**\n     * nearest mode returns the element closest to the point\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    nearest: function nearest(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric); // We have multiple items at the same distance from the event. Now sort by smallest\n\n      if (nearestItems.length > 1) {\n        nearestItems.sort(function (a, b) {\n          var sizeA = a.getArea();\n          var sizeB = b.getArea();\n          var ret = sizeA - sizeB;\n\n          if (ret === 0) {\n            // if equal sort by dataset index\n            ret = a._datasetIndex - b._datasetIndex;\n          }\n\n          return ret;\n        });\n      } // Return only 1 item\n\n\n      return nearestItems.slice(0, 1);\n    },\n\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @function Chart.Interaction.modes.x\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    x: function x(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inXRange(position.x)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @function Chart.Interaction.modes.y\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    y: function y(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inYRange(position.y)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar basic = require('./platform.basic');\n\nvar dom = require('./platform.dom'); // @TODO Make possible to select another platform at build time.\n\n\nvar implementation = dom._enabled ? dom : basic;\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\n\nmodule.exports = helpers.extend({\n  /**\n   * @since 2.7.0\n   */\n  initialize: function initialize() {},\n\n  /**\n   * Called at chart construction time, returns a context2d instance implementing\n   * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n   * @param {*} item - The native item from which to acquire context (platform specific)\n   * @param {Object} options - The chart options\n   * @returns {CanvasRenderingContext2D} context2d instance\n   */\n  acquireContext: function acquireContext() {},\n\n  /**\n   * Called at chart destruction time, releases any resources associated to the context\n   * previously returned by the acquireContext() method.\n   * @param {CanvasRenderingContext2D} context - The context2d instance\n   * @returns {Boolean} true if the method succeeded, else false\n   */\n  releaseContext: function releaseContext() {},\n\n  /**\n   * Registers the specified listener on the given chart.\n   * @param {Chart} chart - Chart from which to listen for event\n   * @param {String} type - The ({@link IEvent}) type to listen for\n   * @param {Function} listener - Receives a notification (an object that implements\n   * the {@link IEvent} interface) when an event of the specified type occurs.\n   */\n  addEventListener: function addEventListener() {},\n\n  /**\n   * Removes the specified listener previously registered with addEventListener.\n   * @param {Chart} chart -Chart from which to remove the listener\n   * @param {String} type - The ({@link IEvent}) type to remove\n   * @param {Function} listener - The listener function to remove from the event target.\n   */\n  removeEventListener: function removeEventListener() {}\n}, implementation);\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {}\n});\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\n\n\nmodule.exports = {\n  /**\n   * Globally registered plugins.\n   * @private\n   */\n  _plugins: [],\n\n  /**\n   * This identifier is used to invalidate the descriptors cache attached to each chart\n   * when a global plugin is registered or unregistered. In this case, the cache ID is\n   * incremented and descriptors are regenerated during following API calls.\n   * @private\n   */\n  _cacheId: 0,\n\n  /**\n   * Registers the given plugin(s) if not already registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  register: function register(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      if (p.indexOf(plugin) === -1) {\n        p.push(plugin);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Unregisters the given plugin(s) only if registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  unregister: function unregister(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      var idx = p.indexOf(plugin);\n\n      if (idx !== -1) {\n        p.splice(idx, 1);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Remove all registered plugins.\n   * @since 2.1.5\n   */\n  clear: function clear() {\n    this._plugins = [];\n    this._cacheId++;\n  },\n\n  /**\n   * Returns the number of registered plugins?\n   * @returns {Number}\n   * @since 2.1.5\n   */\n  count: function count() {\n    return this._plugins.length;\n  },\n\n  /**\n   * Returns all registered plugin instances.\n   * @returns {Array} array of plugin objects.\n   * @since 2.1.5\n   */\n  getAll: function getAll() {\n    return this._plugins;\n  },\n\n  /**\n   * Calls enabled plugins for `chart` on the specified hook and with the given args.\n   * This method immediately returns as soon as a plugin explicitly returns false. The\n   * returned value can be used, for instance, to interrupt the current action.\n   * @param {Object} chart - The chart instance for which plugins should be called.\n   * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n   * @param {Array} [args] - Extra arguments to apply to the hook call.\n   * @returns {Boolean} false if any of the plugins return false, else returns true.\n   */\n  notify: function notify(chart, hook, args) {\n    var descriptors = this.descriptors(chart);\n    var ilen = descriptors.length;\n    var i, descriptor, plugin, params, method;\n\n    for (i = 0; i < ilen; ++i) {\n      descriptor = descriptors[i];\n      plugin = descriptor.plugin;\n      method = plugin[hook];\n\n      if (typeof method === 'function') {\n        params = [chart].concat(args || []);\n        params.push(descriptor.options);\n\n        if (method.apply(plugin, params) === false) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns descriptors of enabled plugins for the given chart.\n   * @returns {Array} [{ plugin, options }]\n   * @private\n   */\n  descriptors: function descriptors(chart) {\n    var cache = chart.$plugins || (chart.$plugins = {});\n\n    if (cache.id === this._cacheId) {\n      return cache.descriptors;\n    }\n\n    var plugins = [];\n    var descriptors = [];\n    var config = chart && chart.config || {};\n    var options = config.options && config.options.plugins || {};\n\n    this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n      var idx = plugins.indexOf(plugin);\n\n      if (idx !== -1) {\n        return;\n      }\n\n      var id = plugin.id;\n      var opts = options[id];\n\n      if (opts === false) {\n        return;\n      }\n\n      if (opts === true) {\n        opts = helpers.clone(defaults.global.plugins[id]);\n      }\n\n      plugins.push(plugin);\n      descriptors.push({\n        plugin: plugin,\n        options: opts || {}\n      });\n    });\n\n    cache.descriptors = descriptors;\n    cache.id = this._cacheId;\n    return descriptors;\n  },\n\n  /**\n   * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n   * but in some cases, this reference can be changed by the user when updating options.\n   * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n   * @private\n   */\n  _invalidate: function _invalidate(chart) {\n    delete chart.$plugins;\n  }\n};\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  tooltips: {\n    enabled: true,\n    custom: null,\n    mode: 'nearest',\n    position: 'average',\n    intersect: true,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleFontStyle: 'bold',\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleFontColor: '#fff',\n    titleAlign: 'left',\n    bodySpacing: 2,\n    bodyFontColor: '#fff',\n    bodyAlign: 'left',\n    footerFontStyle: 'bold',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFontColor: '#fff',\n    footerAlign: 'left',\n    yPadding: 6,\n    xPadding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    callbacks: {\n      // Args are: (tooltipItems, data)\n      beforeTitle: helpers.noop,\n      title: function title(tooltipItems, data) {\n        // Pick first xLabel for now\n        var title = '';\n        var labels = data.labels;\n        var labelCount = labels ? labels.length : 0;\n\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n\n          if (item.xLabel) {\n            title = item.xLabel;\n          } else if (labelCount > 0 && item.index < labelCount) {\n            title = labels[item.index];\n          }\n        }\n\n        return title;\n      },\n      afterTitle: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeBody: helpers.noop,\n      // Args are: (tooltipItem, data)\n      beforeLabel: helpers.noop,\n      label: function label(tooltipItem, data) {\n        var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        label += tooltipItem.yLabel;\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem, chart) {\n        var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var activeElement = meta.data[tooltipItem.index];\n        var view = activeElement._view;\n        return {\n          borderColor: view.borderColor,\n          backgroundColor: view.backgroundColor\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this._options.bodyFontColor;\n      },\n      afterLabel: helpers.noop,\n      // Args are: (tooltipItems, data)\n      afterBody: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeFooter: helpers.noop,\n      footer: helpers.noop,\n      afterFooter: helpers.noop\n    }\n  }\n});\n\nvar positioners = {\n  /**\n   * Average mode places the tooltip at the average position of the elements shown\n   * @function Chart.Tooltip.positioners.average\n   * @param elements {ChartElement[]} the elements being displayed in the tooltip\n   * @returns {Point} tooltip position\n   */\n  average: function average(elements) {\n    if (!elements.length) {\n      return false;\n    }\n\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: Math.round(x / count),\n      y: Math.round(y / count)\n    };\n  },\n\n  /**\n   * Gets the tooltip position nearest of the item nearest to the event position\n   * @function Chart.Tooltip.positioners.nearest\n   * @param elements {Chart.Element[]} the tooltip elements\n   * @param eventPosition {Point} the position of the event in canvas coordinates\n   * @returns {Point} the tooltip position\n   */\n  nearest: function nearest(elements, eventPosition) {\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = helpers.distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n/**\n * Helper method to merge the opacity into a color\n */\n\nfunction mergeOpacity(colorString, opacity) {\n  var color = helpers.color(colorString);\n  return color.alpha(opacity * color.alpha()).rgbaString();\n} // Helper to push or concat based on if the 2nd parameter is an array or not\n\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (helpers.isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n/**\n * Returns array of strings split by newline\n * @param {String} value - The value to split by newline.\n * @returns {Array} value if newline present - Returned from String split() method\n * @function\n */\n\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n} // Private helper to create a tooltip item model\n// @param element : the chart element (point, arc, bar) to create the tooltip item for\n// @return : new tooltip item\n\n\nfunction createTooltipItem(element) {\n  var xScale = element._xScale;\n  var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n  var index = element._index;\n  var datasetIndex = element._datasetIndex;\n  return {\n    xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n    yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n    index: index,\n    datasetIndex: datasetIndex,\n    x: element._model.x,\n    y: element._model.y\n  };\n}\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {Object} the tooltip options\n */\n\n\nfunction getBaseModel(tooltipOpts) {\n  var globalDefaults = defaults.global;\n  var valueOrDefault = helpers.valueOrDefault;\n  return {\n    // Positioning\n    xPadding: tooltipOpts.xPadding,\n    yPadding: tooltipOpts.yPadding,\n    xAlign: tooltipOpts.xAlign,\n    yAlign: tooltipOpts.yAlign,\n    // Body\n    bodyFontColor: tooltipOpts.bodyFontColor,\n    _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n    _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n    _bodyAlign: tooltipOpts.bodyAlign,\n    bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n    bodySpacing: tooltipOpts.bodySpacing,\n    // Title\n    titleFontColor: tooltipOpts.titleFontColor,\n    _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n    _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n    titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n    _titleAlign: tooltipOpts.titleAlign,\n    titleSpacing: tooltipOpts.titleSpacing,\n    titleMarginBottom: tooltipOpts.titleMarginBottom,\n    // Footer\n    footerFontColor: tooltipOpts.footerFontColor,\n    _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n    _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n    footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n    _footerAlign: tooltipOpts.footerAlign,\n    footerSpacing: tooltipOpts.footerSpacing,\n    footerMarginTop: tooltipOpts.footerMarginTop,\n    // Appearance\n    caretSize: tooltipOpts.caretSize,\n    cornerRadius: tooltipOpts.cornerRadius,\n    backgroundColor: tooltipOpts.backgroundColor,\n    opacity: 0,\n    legendColorBackground: tooltipOpts.multiKeyBackground,\n    displayColors: tooltipOpts.displayColors,\n    borderColor: tooltipOpts.borderColor,\n    borderWidth: tooltipOpts.borderWidth\n  };\n}\n/**\n * Get the size of the tooltip\n */\n\n\nfunction getTooltipSize(tooltip, model) {\n  var ctx = tooltip._chart.ctx;\n  var height = model.yPadding * 2; // Tooltip Padding\n\n  var width = 0; // Count of all lines in the body\n\n  var body = model.body;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n  var titleLineCount = model.title.length;\n  var footerLineCount = model.footer.length;\n  var titleFontSize = model.titleFontSize;\n  var bodyFontSize = model.bodyFontSize;\n  var footerFontSize = model.footerFontSize;\n  height += titleLineCount * titleFontSize; // Title Lines\n\n  height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n  height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n  height += combinedBodyLength * bodyFontSize; // Body Lines\n\n  height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n  height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n  height += footerLineCount * footerFontSize; // Footer Lines\n\n  height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n  // Title width\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n  helpers.each(model.title, maxLineWidth); // Body width\n\n  ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n  helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n  widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n  helpers.each(body, function (bodyItem) {\n    helpers.each(bodyItem.before, maxLineWidth);\n    helpers.each(bodyItem.lines, maxLineWidth);\n    helpers.each(bodyItem.after, maxLineWidth);\n  }); // Reset back to 0\n\n  widthPadding = 0; // Footer width\n\n  ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n  helpers.each(model.footer, maxLineWidth); // Add padding\n\n  width += 2 * model.xPadding;\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Helper to get the alignment of a tooltip given the size\n */\n\n\nfunction determineAlignment(tooltip, size) {\n  var model = tooltip._model;\n  var chart = tooltip._chart;\n  var chartArea = tooltip._chart.chartArea;\n  var xAlign = 'center';\n  var yAlign = 'center';\n\n  if (model.y < size.height) {\n    yAlign = 'top';\n  } else if (model.y > chart.height - size.height) {\n    yAlign = 'bottom';\n  }\n\n  var lf, rf; // functions to determine left, right alignment\n\n  var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n  var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n  var midX = (chartArea.left + chartArea.right) / 2;\n  var midY = (chartArea.top + chartArea.bottom) / 2;\n\n  if (yAlign === 'center') {\n    lf = function lf(x) {\n      return x <= midX;\n    };\n\n    rf = function rf(x) {\n      return x > midX;\n    };\n  } else {\n    lf = function lf(x) {\n      return x <= size.width / 2;\n    };\n\n    rf = function rf(x) {\n      return x >= chart.width - size.width / 2;\n    };\n  }\n\n  olf = function olf(x) {\n    return x + size.width + model.caretSize + model.caretPadding > chart.width;\n  };\n\n  orf = function orf(x) {\n    return x - size.width - model.caretSize - model.caretPadding < 0;\n  };\n\n  yf = function yf(y) {\n    return y <= midY ? 'top' : 'bottom';\n  };\n\n  if (lf(model.x)) {\n    xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n    if (olf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  } else if (rf(model.x)) {\n    xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n    if (orf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  }\n\n  var opts = tooltip._options;\n  return {\n    xAlign: opts.xAlign ? opts.xAlign : xAlign,\n    yAlign: opts.yAlign ? opts.yAlign : yAlign\n  };\n}\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\n\n\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n  // Background Position\n  var x = vm.x;\n  var y = vm.y;\n  var caretSize = vm.caretSize;\n  var caretPadding = vm.caretPadding;\n  var cornerRadius = vm.cornerRadius;\n  var xAlign = alignment.xAlign;\n  var yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var radiusAndPadding = cornerRadius + caretPadding;\n\n  if (xAlign === 'right') {\n    x -= size.width;\n  } else if (xAlign === 'center') {\n    x -= size.width / 2;\n\n    if (x + size.width > chart.width) {\n      x = chart.width - size.width;\n    }\n\n    if (x < 0) {\n      x = 0;\n    }\n  }\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= size.height + paddingAndSize;\n  } else {\n    y -= size.height / 2;\n  }\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n/**\n * Helper to build before and after body lines\n */\n\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports = module.exports = Element.extend({\n  initialize: function initialize() {\n    this._model = getBaseModel(this._options);\n    this._lastActive = [];\n  },\n  // Get the title\n  // Args are: (tooltipItem, data)\n  getTitle: function getTitle() {\n    var me = this;\n    var opts = me._options;\n    var callbacks = opts.callbacks;\n    var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n    var title = callbacks.title.apply(me, arguments);\n    var afterTitle = callbacks.afterTitle.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  },\n  // Args are: (tooltipItem, data)\n  getBeforeBody: function getBeforeBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n  },\n  // Args are: (tooltipItem, data)\n  getBody: function getBody(tooltipItems, data) {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var bodyItems = [];\n    helpers.each(tooltipItems, function (tooltipItem) {\n      var bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n      pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n      pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  },\n  // Args are: (tooltipItem, data)\n  getAfterBody: function getAfterBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n  },\n  // Get the footer and beforeFooter and afterFooter lines\n  // Args are: (tooltipItem, data)\n  getFooter: function getFooter() {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n    var footer = callbacks.footer.apply(me, arguments);\n    var afterFooter = callbacks.afterFooter.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  },\n  update: function update(changed) {\n    var me = this;\n    var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n    // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n    // which breaks any animations.\n\n    var existingModel = me._model;\n    var model = me._model = getBaseModel(opts);\n    var active = me._active;\n    var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n    var alignment = {\n      xAlign: existingModel.xAlign,\n      yAlign: existingModel.yAlign\n    };\n    var backgroundPoint = {\n      x: existingModel.x,\n      y: existingModel.y\n    };\n    var tooltipSize = {\n      width: existingModel.width,\n      height: existingModel.height\n    };\n    var tooltipPosition = {\n      x: existingModel.caretX,\n      y: existingModel.caretY\n    };\n    var i, len;\n\n    if (active.length) {\n      model.opacity = 1;\n      var labelColors = [];\n      var labelTextColors = [];\n      tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n      var tooltipItems = [];\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(active[i]));\n      } // If the user provided a filter function, use it to modify the tooltip items\n\n\n      if (opts.filter) {\n        tooltipItems = tooltipItems.filter(function (a) {\n          return opts.filter(a, data);\n        });\n      } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n      if (opts.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return opts.itemSort(a, b, data);\n        });\n      } // Determine colors for boxes\n\n\n      helpers.each(tooltipItems, function (tooltipItem) {\n        labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n        labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n      }); // Build the Text Lines\n\n      model.title = me.getTitle(tooltipItems, data);\n      model.beforeBody = me.getBeforeBody(tooltipItems, data);\n      model.body = me.getBody(tooltipItems, data);\n      model.afterBody = me.getAfterBody(tooltipItems, data);\n      model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n      model.x = Math.round(tooltipPosition.x);\n      model.y = Math.round(tooltipPosition.y);\n      model.caretPadding = opts.caretPadding;\n      model.labelColors = labelColors;\n      model.labelTextColors = labelTextColors; // data points\n\n      model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n      tooltipSize = getTooltipSize(this, model);\n      alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n      backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n    } else {\n      model.opacity = 0;\n    }\n\n    model.xAlign = alignment.xAlign;\n    model.yAlign = alignment.yAlign;\n    model.x = backgroundPoint.x;\n    model.y = backgroundPoint.y;\n    model.width = tooltipSize.width;\n    model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n    model.caretX = tooltipPosition.x;\n    model.caretY = tooltipPosition.y;\n    me._model = model;\n\n    if (changed && opts.custom) {\n      opts.custom.call(me, model);\n    }\n\n    return me;\n  },\n  drawCaret: function drawCaret(tooltipPoint, size) {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  },\n  getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n    var x1, x2, x3, y1, y2, y3;\n    var caretSize = vm.caretSize;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var ptX = tooltipPoint.x;\n    var ptY = tooltipPoint.y;\n    var width = size.width;\n    var height = size.height;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        x3 = x1;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        x3 = x1;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        x2 = vm.caretX;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        y3 = y1;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        y3 = y1; // invert drawing order\n\n        var tmp = x3;\n        x3 = x1;\n        x1 = tmp;\n      }\n    }\n\n    return {\n      x1: x1,\n      x2: x2,\n      x3: x3,\n      y1: y1,\n      y2: y2,\n      y3: y3\n    };\n  },\n  drawTitle: function drawTitle(pt, vm, ctx, opacity) {\n    var title = vm.title;\n\n    if (title.length) {\n      ctx.textAlign = vm._titleAlign;\n      ctx.textBaseline = 'top';\n      var titleFontSize = vm.titleFontSize;\n      var titleSpacing = vm.titleSpacing;\n      ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n      ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n      var i, len;\n\n      for (i = 0, len = title.length; i < len; ++i) {\n        ctx.fillText(title[i], pt.x, pt.y);\n        pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === title.length) {\n          pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  },\n  drawBody: function drawBody(pt, vm, ctx, opacity) {\n    var bodyFontSize = vm.bodyFontSize;\n    var bodySpacing = vm.bodySpacing;\n    var body = vm.body;\n    ctx.textAlign = vm._bodyAlign;\n    ctx.textBaseline = 'top';\n    ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily); // Before Body\n\n    var xLinePadding = 0;\n\n    var fillLineOfText = function fillLineOfText(line) {\n      ctx.fillText(line, pt.x + xLinePadding, pt.y);\n      pt.y += bodyFontSize + bodySpacing;\n    }; // Before body lines\n\n\n    ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n    helpers.each(vm.beforeBody, fillLineOfText);\n    var drawColorBoxes = vm.displayColors;\n    xLinePadding = drawColorBoxes ? bodyFontSize + 2 : 0; // Draw body lines now\n\n    helpers.each(body, function (bodyItem, i) {\n      var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n      ctx.fillStyle = textColor;\n      helpers.each(bodyItem.before, fillLineOfText);\n      helpers.each(bodyItem.lines, function (line) {\n        // Draw Legend-like boxes if needed\n        if (drawColorBoxes) {\n          // Fill a white rect so that colours merge nicely if the opacity is < 1\n          ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n          ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Border\n\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n          ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n          ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n          ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n          ctx.fillStyle = textColor;\n        }\n\n        fillLineOfText(line);\n      });\n      helpers.each(bodyItem.after, fillLineOfText);\n    }); // Reset back to 0 for after body\n\n    xLinePadding = 0; // After body lines\n\n    helpers.each(vm.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  },\n  drawFooter: function drawFooter(pt, vm, ctx, opacity) {\n    var footer = vm.footer;\n\n    if (footer.length) {\n      pt.y += vm.footerMarginTop;\n      ctx.textAlign = vm._footerAlign;\n      ctx.textBaseline = 'top';\n      ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n      ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n      helpers.each(footer, function (line) {\n        ctx.fillText(line, pt.x, pt.y);\n        pt.y += vm.footerFontSize + vm.footerSpacing;\n      });\n    }\n  },\n  drawBackground: function drawBackground(pt, vm, ctx, tooltipSize, opacity) {\n    ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n    ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n    ctx.lineWidth = vm.borderWidth;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var x = pt.x;\n    var y = pt.y;\n    var width = tooltipSize.width;\n    var height = tooltipSize.height;\n    var radius = vm.cornerRadius;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (vm.borderWidth > 0) {\n      ctx.stroke();\n    }\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n\n    if (vm.opacity === 0) {\n      return;\n    }\n\n    var tooltipSize = {\n      width: vm.width,\n      height: vm.height\n    };\n    var pt = {\n      x: vm.x,\n      y: vm.y\n    }; // IE11/Edge does not like very small opacities, so snap to 0\n\n    var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n    var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n    if (this._options.enabled && hasTooltipContent) {\n      // Draw Background\n      this.drawBackground(pt, vm, ctx, tooltipSize, opacity); // Draw Title, Body, and Footer\n\n      pt.x += vm.xPadding;\n      pt.y += vm.yPadding; // Titles\n\n      this.drawTitle(pt, vm, ctx, opacity); // Body\n\n      this.drawBody(pt, vm, ctx, opacity); // Footer\n\n      this.drawFooter(pt, vm, ctx, opacity);\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @returns {Boolean} true if the tooltip changed\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var options = me._options;\n    var changed = false;\n    me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n    if (e.type === 'mouseout') {\n      me._active = [];\n    } else {\n      me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n    } // Remember Last Actives\n\n\n    changed = !helpers.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n    if (changed) {\n      me._lastActive = me._active;\n\n      if (options.enabled || options.custom) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true);\n        me.pivot();\n      }\n    }\n\n    return changed;\n  }\n});\n/**\n * @namespace Chart.Tooltip.positioners\n */\n\nexports.positioners = positioners;","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n  responsive: true,\n  responsiveAnimationDuration: 0,\n  maintainAspectRatio: true,\n  events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n  hover: {\n    onHover: null,\n    mode: 'nearest',\n    intersect: true,\n    animationDuration: 400\n  },\n  onClick: null,\n  defaultColor: 'rgba(0,0,0,0.1)',\n  defaultFontColor: '#666',\n  defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n  defaultFontSize: 12,\n  defaultFontStyle: 'normal',\n  showLines: true,\n  // Element defaults defined in element extensions\n  elements: {},\n  // Layout options such as padding\n  layout: {\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }\n});\n\nmodule.exports = function () {\n  // Occupy the global variable of Chart, and create a simple base class\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  Chart.Chart = Chart;\n  return Chart;\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\n\n\nvar effects = {\n  linear: function linear(t) {\n    return t;\n  },\n  easeInQuad: function easeInQuad(t) {\n    return t * t;\n  },\n  easeOutQuad: function easeOutQuad(t) {\n    return -t * (t - 2);\n  },\n  easeInOutQuad: function easeInOutQuad(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t;\n    }\n\n    return -0.5 * (--t * (t - 2) - 1);\n  },\n  easeInCubic: function easeInCubic(t) {\n    return t * t * t;\n  },\n  easeOutCubic: function easeOutCubic(t) {\n    return (t = t - 1) * t * t + 1;\n  },\n  easeInOutCubic: function easeInOutCubic(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t + 2);\n  },\n  easeInQuart: function easeInQuart(t) {\n    return t * t * t * t;\n  },\n  easeOutQuart: function easeOutQuart(t) {\n    return -((t = t - 1) * t * t * t - 1);\n  },\n  easeInOutQuart: function easeInOutQuart(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t;\n    }\n\n    return -0.5 * ((t -= 2) * t * t * t - 2);\n  },\n  easeInQuint: function easeInQuint(t) {\n    return t * t * t * t * t;\n  },\n  easeOutQuint: function easeOutQuint(t) {\n    return (t = t - 1) * t * t * t * t + 1;\n  },\n  easeInOutQuint: function easeInOutQuint(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n  },\n  easeInSine: function easeInSine(t) {\n    return -Math.cos(t * (Math.PI / 2)) + 1;\n  },\n  easeOutSine: function easeOutSine(t) {\n    return Math.sin(t * (Math.PI / 2));\n  },\n  easeInOutSine: function easeInOutSine(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n  },\n  easeInExpo: function easeInExpo(t) {\n    return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n  },\n  easeOutExpo: function easeOutExpo(t) {\n    return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n  },\n  easeInOutExpo: function easeInOutExpo(t) {\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * Math.pow(2, 10 * (t - 1));\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n  },\n  easeInCirc: function easeInCirc(t) {\n    if (t >= 1) {\n      return t;\n    }\n\n    return -(Math.sqrt(1 - t * t) - 1);\n  },\n  easeOutCirc: function easeOutCirc(t) {\n    return Math.sqrt(1 - (t = t - 1) * t);\n  },\n  easeInOutCirc: function easeInOutCirc(t) {\n    if ((t /= 0.5) < 1) {\n      return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n  },\n  easeInElastic: function easeInElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n  },\n  easeOutElastic: function easeOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n  },\n  easeInOutElastic: function easeInOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if ((t /= 0.5) === 2) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.45;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  easeInBack: function easeInBack(t) {\n    var s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack: function easeOutBack(t) {\n    var s = 1.70158;\n    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack: function easeInOutBack(t) {\n    var s = 1.70158;\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n    }\n\n    return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n  },\n  easeInBounce: function easeInBounce(t) {\n    return 1 - effects.easeOutBounce(1 - t);\n  },\n  easeOutBounce: function easeOutBounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n    }\n\n    return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n  },\n  easeInOutBounce: function easeInOutBounce(t) {\n    if (t < 0.5) {\n      return effects.easeInBounce(t * 2) * 0.5;\n    }\n\n    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n  }\n};\nmodule.exports = {\n  effects: effects\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.easingEffects = effects;","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @namespace Chart.helpers.canvas\n */\n\n\nvar exports = module.exports = {\n  /**\n   * Clears the entire canvas associated to the given `chart`.\n   * @param {Chart} chart - The chart for which to clear the canvas.\n   */\n  clear: function clear(chart) {\n    chart.ctx.clearRect(0, 0, chart.width, chart.height);\n  },\n\n  /**\n   * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n   * given size (width, height) and the same `radius` for all corners.\n   * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n   * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n   * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n   * @param {Number} width - The rectangle's width.\n   * @param {Number} height - The rectangle's height.\n   * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n   * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n   */\n  roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n    if (radius) {\n      // NOTE(SB) `epsilon` helps to prevent minor artifacts appearing\n      // on Chrome when `r` is exactly half the height or the width.\n      var epsilon = 0.0000001;\n      var r = Math.min(radius, height / 2 - epsilon, width / 2 - epsilon);\n      ctx.moveTo(x + r, y);\n      ctx.lineTo(x + width - r, y);\n      ctx.arcTo(x + width, y, x + width, y + r, r);\n      ctx.lineTo(x + width, y + height - r);\n      ctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n      ctx.lineTo(x + r, y + height);\n      ctx.arcTo(x, y + height, x, y + height - r, r);\n      ctx.lineTo(x, y + r);\n      ctx.arcTo(x, y, x + r, y, r);\n      ctx.closePath();\n      ctx.moveTo(x, y);\n    } else {\n      ctx.rect(x, y, width, height);\n    }\n  },\n  drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n    var type, edgeLength, xOffset, yOffset, height, size;\n    rotation = rotation || 0;\n\n    if (style && typeof style === 'object') {\n      type = style.toString();\n\n      if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n        ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n        return;\n      }\n    }\n\n    if (isNaN(radius) || radius <= 0) {\n      return;\n    }\n\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rotation * Math.PI / 180);\n    ctx.beginPath();\n\n    switch (style) {\n      // Default includes circle\n      default:\n        ctx.arc(0, 0, radius, 0, Math.PI * 2);\n        ctx.closePath();\n        break;\n\n      case 'triangle':\n        edgeLength = 3 * radius / Math.sqrt(3);\n        height = edgeLength * Math.sqrt(3) / 2;\n        ctx.moveTo(-edgeLength / 2, height / 3);\n        ctx.lineTo(edgeLength / 2, height / 3);\n        ctx.lineTo(0, -2 * height / 3);\n        ctx.closePath();\n        break;\n\n      case 'rect':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.rect(-size, -size, 2 * size, 2 * size);\n        break;\n\n      case 'rectRounded':\n        var offset = radius / Math.SQRT2;\n        var leftX = -offset;\n        var topY = -offset;\n        var sideSize = Math.SQRT2 * radius; // NOTE(SB) the rounded rect implementation changed to use `arcTo`\n        // instead of `quadraticCurveTo` since it generates better results\n        // when rect is almost a circle. 0.425 (instead of 0.5) produces\n        // results visually closer to the previous impl.\n\n        this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);\n        break;\n\n      case 'rectRot':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.moveTo(-size, 0);\n        ctx.lineTo(0, size);\n        ctx.lineTo(size, 0);\n        ctx.lineTo(0, -size);\n        ctx.closePath();\n        break;\n\n      case 'cross':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'crossRot':\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'star':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'line':\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'dash':\n        ctx.moveTo(0, 0);\n        ctx.lineTo(radius, 0);\n        break;\n    }\n\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n  },\n  clipArea: function clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n  },\n  unclipArea: function unclipArea(ctx) {\n    ctx.restore();\n  },\n  lineTo: function lineTo(ctx, previous, target, flip) {\n    if (target.steppedLine) {\n      if (target.steppedLine === 'after' && !flip || target.steppedLine !== 'after' && flip) {\n        ctx.lineTo(previous.x, target.y);\n      } else {\n        ctx.lineTo(target.x, previous.y);\n      }\n\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    if (!target.tension) {\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.clear = exports.clear;\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.drawRoundedRectangle = function (ctx) {\n  ctx.beginPath();\n  exports.roundedRect.apply(exports, arguments);\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n\n\nmodule.exports = {\n  /**\n   * Converts the given line height `value` in pixels for a specific font `size`.\n   * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n   * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n   * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n   * @since 2.7.0\n   */\n  toLineHeight: function toLineHeight(value, size) {\n    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n\n    value = +matches[2];\n\n    switch (matches[3]) {\n      case 'px':\n        return value;\n\n      case '%':\n        value /= 100;\n        break;\n\n      default:\n        break;\n    }\n\n    return size * value;\n  },\n\n  /**\n   * Converts the given value into a padding object with pre-computed width/height.\n   * @param {Number|Object} value - If a number, set the value to all TRBL component,\n   *  else, if and object, use defined properties and sets undefined ones to 0.\n   * @returns {Object} The padding values (top, right, bottom, left, width, height)\n   * @since 2.7.0\n   */\n  toPadding: function toPadding(value) {\n    var t, r, b, l;\n\n    if (helpers.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      height: t + b,\n      width: l + r\n    };\n  },\n\n  /**\n   * Evaluates the given `inputs` sequentially and returns the first defined value.\n   * @param {Array[]} inputs - An array of values, falling back to the last value.\n   * @param {Object} [context] - If defined and the current value is a function, the value\n   * is called with `context` as first argument and the result becomes the new input.\n   * @param {Number} [index] - If defined and the current value is an array, the value\n   * at `index` become the new input.\n   * @since 2.7.0\n   */\n  resolve: function resolve(inputs, context, index) {\n    var i, ilen, value;\n\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n      }\n\n      if (index !== undefined && helpers.isArray(value)) {\n        value = value[index];\n      }\n\n      if (value !== undefined) {\n        return value;\n      }\n    }\n  }\n};","/* global window: false */\n\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // -- Basic js utility methods\n  helpers.configMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = helpers.scaleMerge(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers.merge(tval, [scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.scaleMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers.merge(target[key][i], [scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.where = function (collection, filterCallback) {\n    if (helpers.isArray(collection) && Array.prototype.filter) {\n      return collection.filter(filterCallback);\n    }\n\n    var filtered = [];\n    helpers.each(collection, function (item) {\n      if (filterCallback(item)) {\n        filtered.push(item);\n      }\n    });\n    return filtered;\n  };\n\n  helpers.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n    return array.findIndex(callback, scope);\n  } : function (array, callback, scope) {\n    scope = scope === undefined ? array : scope;\n\n    for (var i = 0, ilen = array.length; i < ilen; ++i) {\n      if (callback.call(scope, array[i], i, array)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  helpers.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to start of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = -1;\n    }\n\n    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  };\n\n  helpers.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to end of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = arrayToSearch.length;\n    }\n\n    for (var i = startIndex - 1; i >= 0; i--) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  }; // -- Math methods\n\n\n  helpers.isNumber = function (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  };\n\n  helpers.almostEquals = function (x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n  };\n\n  helpers.almostWhole = function (x, epsilon) {\n    var rounded = Math.round(x);\n    return rounded - epsilon < x && rounded + epsilon > x;\n  };\n\n  helpers.max = function (array) {\n    return array.reduce(function (max, value) {\n      if (!isNaN(value)) {\n        return Math.max(max, value);\n      }\n\n      return max;\n    }, Number.NEGATIVE_INFINITY);\n  };\n\n  helpers.min = function (array) {\n    return array.reduce(function (min, value) {\n      if (!isNaN(value)) {\n        return Math.min(min, value);\n      }\n\n      return min;\n    }, Number.POSITIVE_INFINITY);\n  };\n\n  helpers.sign = Math.sign ? function (x) {\n    return Math.sign(x);\n  } : function (x) {\n    x = +x; // convert to a number\n\n    if (x === 0 || isNaN(x)) {\n      return x;\n    }\n\n    return x > 0 ? 1 : -1;\n  };\n  helpers.log10 = Math.log10 ? function (x) {\n    return Math.log10(x);\n  } : function (x) {\n    var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n    // Check for whole powers of 10,\n    // which due to floating point rounding error should be corrected.\n\n    var powerOf10 = Math.round(exponent);\n    var isPowerOf10 = x === Math.pow(10, powerOf10);\n    return isPowerOf10 ? powerOf10 : exponent;\n  };\n\n  helpers.toRadians = function (degrees) {\n    return degrees * (Math.PI / 180);\n  };\n\n  helpers.toDegrees = function (radians) {\n    return radians * (180 / Math.PI);\n  }; // Gets the angle from vertical upright to the point about a centre.\n\n\n  helpers.getAngleFromPoint = function (centrePoint, anglePoint) {\n    var distanceFromXCenter = anglePoint.x - centrePoint.x;\n    var distanceFromYCenter = anglePoint.y - centrePoint.y;\n    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n    if (angle < -0.5 * Math.PI) {\n      angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n\n    return {\n      angle: angle,\n      distance: radialDistanceFromCenter\n    };\n  };\n\n  helpers.distanceBetweenPoints = function (pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n  };\n\n  helpers.aliasPixel = function (pixelWidth) {\n    return pixelWidth % 2 === 0 ? 0 : 0.5;\n  };\n\n  helpers.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    var previous = firstPoint.skip ? middlePoint : firstPoint;\n    var current = middlePoint;\n    var next = afterPoint.skip ? middlePoint : afterPoint;\n    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n    var s01 = d01 / (d01 + d12);\n    var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    var fa = t * s01; // scaling factor for triangle Ta\n\n    var fb = t * s12;\n    return {\n      previous: {\n        x: current.x - fa * (next.x - previous.x),\n        y: current.y - fa * (next.y - previous.y)\n      },\n      next: {\n        x: current.x + fb * (next.x - previous.x),\n        y: current.y + fb * (next.y - previous.y)\n      }\n    };\n  };\n\n  helpers.EPSILON = Number.EPSILON || 1e-14;\n\n  helpers.splineCurveMonotone = function (points) {\n    // This function calculates Bézier control points in a similar way than |splineCurve|,\n    // but preserves monotonicity of the provided data and ensures no local extremums are added\n    // between the dataset discrete points due to the interpolation.\n    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n    var pointsWithTangents = (points || []).map(function (point) {\n      return {\n        model: point._model,\n        deltaK: 0,\n        mK: 0\n      };\n    }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n    var pointsLen = pointsWithTangents.length;\n    var i, pointBefore, pointCurrent, pointAfter;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointAfter && !pointAfter.model.skip) {\n        var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n        pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n      }\n\n      if (!pointBefore || pointBefore.model.skip) {\n        pointCurrent.mK = pointCurrent.deltaK;\n      } else if (!pointAfter || pointAfter.model.skip) {\n        pointCurrent.mK = pointBefore.deltaK;\n      } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n        pointCurrent.mK = 0;\n      } else {\n        pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n      }\n    } // Adjust tangents to ensure monotonic properties\n\n\n    var alphaK, betaK, tauK, squaredMagnitude;\n\n    for (i = 0; i < pointsLen - 1; ++i) {\n      pointCurrent = pointsWithTangents[i];\n      pointAfter = pointsWithTangents[i + 1];\n\n      if (pointCurrent.model.skip || pointAfter.model.skip) {\n        continue;\n      }\n\n      if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n        pointCurrent.mK = pointAfter.mK = 0;\n        continue;\n      }\n\n      alphaK = pointCurrent.mK / pointCurrent.deltaK;\n      betaK = pointAfter.mK / pointCurrent.deltaK;\n      squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n      if (squaredMagnitude <= 9) {\n        continue;\n      }\n\n      tauK = 3 / Math.sqrt(squaredMagnitude);\n      pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n      pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n    } // Compute control points\n\n\n    var deltaX;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointBefore && !pointBefore.model.skip) {\n        deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n        pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n        pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n      }\n\n      if (pointAfter && !pointAfter.model.skip) {\n        deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n        pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n        pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n      }\n    }\n  };\n\n  helpers.nextItem = function (collection, index, loop) {\n    if (loop) {\n      return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n    }\n\n    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n  };\n\n  helpers.previousItem = function (collection, index, loop) {\n    if (loop) {\n      return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n    }\n\n    return index <= 0 ? collection[0] : collection[index - 1];\n  }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n  helpers.niceNum = function (range, round) {\n    var exponent = Math.floor(helpers.log10(range));\n    var fraction = range / Math.pow(10, exponent);\n    var niceFraction;\n\n    if (round) {\n      if (fraction < 1.5) {\n        niceFraction = 1;\n      } else if (fraction < 3) {\n        niceFraction = 2;\n      } else if (fraction < 7) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n    } else if (fraction <= 1.0) {\n      niceFraction = 1;\n    } else if (fraction <= 2) {\n      niceFraction = 2;\n    } else if (fraction <= 5) {\n      niceFraction = 5;\n    } else {\n      niceFraction = 10;\n    }\n\n    return niceFraction * Math.pow(10, exponent);\n  }; // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n  helpers.requestAnimFrame = function () {\n    if (typeof window === 'undefined') {\n      return function (callback) {\n        callback();\n      };\n    }\n\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      return window.setTimeout(callback, 1000 / 60);\n    };\n  }(); // -- DOM methods\n\n\n  helpers.getRelativePosition = function (evt, chart) {\n    var mouseX, mouseY;\n    var e = evt.originalEvent || evt;\n    var canvas = evt.target || evt.srcElement;\n    var boundingRect = canvas.getBoundingClientRect();\n    var touches = e.touches;\n\n    if (touches && touches.length > 0) {\n      mouseX = touches[0].clientX;\n      mouseY = touches[0].clientY;\n    } else {\n      mouseX = e.clientX;\n      mouseY = e.clientY;\n    } // Scale mouse coordinates into canvas coordinates\n    // by following the pattern laid out by 'jerryj' in the comments of\n    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n    return {\n      x: mouseX,\n      y: mouseY\n    };\n  }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n  function parseMaxStyle(styleValue, node, parentProperty) {\n    var valueInPixels;\n\n    if (typeof styleValue === 'string') {\n      valueInPixels = parseInt(styleValue, 10);\n\n      if (styleValue.indexOf('%') !== -1) {\n        // percentage * size in dimension\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n      }\n    } else {\n      valueInPixels = styleValue;\n    }\n\n    return valueInPixels;\n  }\n  /**\n   * Returns if the given value contains an effective constraint.\n   * @private\n   */\n\n\n  function isConstrainedValue(value) {\n    return value !== undefined && value !== null && value !== 'none';\n  } // Private helper to get a constraint dimension\n  // @param domNode : the node to check the constraint on\n  // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n  // @param percentageProperty : property of parent to use when calculating width as a percentage\n  // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\n\n  function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n    var view = document.defaultView;\n\n    var parentNode = helpers._getParentNode(domNode);\n\n    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n    var hasCNode = isConstrainedValue(constrainedNode);\n    var hasCContainer = isConstrainedValue(constrainedContainer);\n    var infinity = Number.POSITIVE_INFINITY;\n\n    if (hasCNode || hasCContainer) {\n      return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n    }\n\n    return 'none';\n  } // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintWidth = function (domNode) {\n    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n  }; // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintHeight = function (domNode) {\n    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n  };\n  /**\n   * @private\n  \t */\n\n\n  helpers._calculatePadding = function (container, padding, parentDimension) {\n    padding = helpers.getStyle(container, padding);\n    return padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);\n  };\n  /**\n   * @private\n   */\n\n\n  helpers._getParentNode = function (domNode) {\n    var parent = domNode.parentNode;\n\n    if (parent && parent.host) {\n      parent = parent.host;\n    }\n\n    return parent;\n  };\n\n  helpers.getMaximumWidth = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientWidth;\n    }\n\n    var clientWidth = container.clientWidth;\n\n    var paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);\n\n    var paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);\n\n    var w = clientWidth - paddingLeft - paddingRight;\n    var cw = helpers.getConstraintWidth(domNode);\n    return isNaN(cw) ? w : Math.min(w, cw);\n  };\n\n  helpers.getMaximumHeight = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientHeight;\n    }\n\n    var clientHeight = container.clientHeight;\n\n    var paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);\n\n    var paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);\n\n    var h = clientHeight - paddingTop - paddingBottom;\n    var ch = helpers.getConstraintHeight(domNode);\n    return isNaN(ch) ? h : Math.min(h, ch);\n  };\n\n  helpers.getStyle = function (el, property) {\n    return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n  };\n\n  helpers.retinaScale = function (chart, forceRatio) {\n    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n    if (pixelRatio === 1) {\n      return;\n    }\n\n    var canvas = chart.canvas;\n    var height = chart.height;\n    var width = chart.width;\n    canvas.height = height * pixelRatio;\n    canvas.width = width * pixelRatio;\n    chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n\n    if (!canvas.style.height && !canvas.style.width) {\n      canvas.style.height = height + 'px';\n      canvas.style.width = width + 'px';\n    }\n  }; // -- Canvas methods\n\n\n  helpers.fontString = function (pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n  };\n\n  helpers.longestText = function (ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    var data = cache.data = cache.data || {};\n    var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n    if (cache.font !== font) {\n      data = cache.data = {};\n      gc = cache.garbageCollect = [];\n      cache.font = font;\n    }\n\n    ctx.font = font;\n    var longest = 0;\n    helpers.each(arrayOfThings, function (thing) {\n      // Undefined strings and arrays should not be measured\n      if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n        longest = helpers.measureText(ctx, data, gc, longest, thing);\n      } else if (helpers.isArray(thing)) {\n        // if it is an array lets measure each element\n        // to do maybe simplify this function a bit so we can do this more recursively?\n        helpers.each(thing, function (nestedThing) {\n          // Undefined strings and arrays should not be measured\n          if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n            longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n          }\n        });\n      }\n    });\n    var gcLen = gc.length / 2;\n\n    if (gcLen > arrayOfThings.length) {\n      for (var i = 0; i < gcLen; i++) {\n        delete data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n\n    return longest;\n  };\n\n  helpers.measureText = function (ctx, data, gc, longest, string) {\n    var textWidth = data[string];\n\n    if (!textWidth) {\n      textWidth = data[string] = ctx.measureText(string).width;\n      gc.push(string);\n    }\n\n    if (textWidth > longest) {\n      longest = textWidth;\n    }\n\n    return longest;\n  };\n\n  helpers.numberOfLabelLines = function (arrayOfThings) {\n    var numberOfLines = 1;\n    helpers.each(arrayOfThings, function (thing) {\n      if (helpers.isArray(thing)) {\n        if (thing.length > numberOfLines) {\n          numberOfLines = thing.length;\n        }\n      }\n    });\n    return numberOfLines;\n  };\n\n  helpers.color = !color ? function (value) {\n    console.error('Color.js not found!');\n    return value;\n  } : function (value) {\n    /* global CanvasGradient */\n    if (value instanceof CanvasGradient) {\n      value = defaults.global.defaultColor;\n    }\n\n    return color(value);\n  };\n\n  helpers.getHoverColor = function (colorValue) {\n    /* global CanvasPattern */\n    return colorValue instanceof CanvasPattern ? colorValue : helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n  };\n};","var conversions = require(\"./conversions\");\n\nvar convert = function convert() {\n  return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] = function (func) {\n    // accept array or plain args\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    };\n  }(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = function (func) {\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n      for (var i = 0; i < val.length; i++) {\n        val[i] = Math.round(val[i]);\n      }\n\n      return val;\n    };\n  }(func);\n}\n/* Converter does lazy conversion and caching */\n\n\nvar Converter = function Converter() {\n  this.convs = {};\n};\n/* Either get the values for a space or\n  set the values for a space, depending on args */\n\n\nConverter.prototype.routeSpace = function (space, args) {\n  var values = args[0];\n\n  if (values === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof values == \"number\") {\n    values = Array.prototype.slice.call(args);\n  }\n\n  return this.setValues(space, values);\n};\n/* Set the values for a space, invalidating cache */\n\n\nConverter.prototype.setValues = function (space, values) {\n  this.space = space;\n  this.convs = {};\n  this.convs[space] = values;\n  return this;\n};\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\n\n\nConverter.prototype.getValues = function (space) {\n  var vals = this.convs[space];\n\n  if (!vals) {\n    var fspace = this.space,\n        from = this.convs[fspace];\n    vals = convert[fspace][space](from);\n    this.convs[space] = vals;\n  }\n\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n  Converter.prototype[space] = function (vals) {\n    return this.routeSpace(space, arguments);\n  };\n});\nmodule.exports = convert;","/* MIT license */\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      l;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  l = (min + max) / 2;\n  if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      v;\n  if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  v = max / 255 * 1000 / 10;\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1 / 255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c,\n      m,\n      y,\n      k;\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255; // assume sRGB\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x * 100, y * 100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n      x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1,\n      t2,\n      t3,\n      rgb,\n      val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n  rgb = [0, 0, 0];\n\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * -(i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n    if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv,\n      v;\n\n  if (l === 0) {\n    // no need to do calc on black\n    // also avoids divide by 0 error\n    return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= l <= 1 ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = 2 * s / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - s * f),\n      t = 255 * v * (1 - s * (1 - f)),\n      v = 255 * v;\n\n  switch (hi) {\n    case 0:\n      return [v, t, p];\n\n    case 1:\n      return [q, v, p];\n\n    case 2:\n      return [p, v, t];\n\n    case 3:\n      return [p, q, v];\n\n    case 4:\n      return [t, p, v];\n\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl,\n      l;\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= l <= 1 ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args));\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n} // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i,\n      v,\n      f,\n      n; // wh + bl cant be > 1\n\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n\n  n = wh + f * (v - wh); // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0:\n      r = v;\n      g = n;\n      b = wh;\n      break;\n\n    case 1:\n      r = n;\n      g = v;\n      b = wh;\n      break;\n\n    case 2:\n      r = wh;\n      g = v;\n      b = n;\n      break;\n\n    case 3:\n      r = wh;\n      g = n;\n      b = v;\n      break;\n\n    case 4:\n      r = n;\n      g = wh;\n      b = v;\n      break;\n\n    case 5:\n      r = v;\n      g = wh;\n      b = n;\n      break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r,\n      g,\n      b;\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r,\n      g,\n      b;\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x,\n      y,\n      z,\n      y2;\n\n  if (l <= 8) {\n    y = l * 100 / 903.3;\n    y2 = 7.787 * (y / 100) + 16 / 116;\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1 / 3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n  z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr,\n      h,\n      c;\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a,\n      b,\n      hr;\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50]\n};\nvar reverseKeywords = {};\n\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n  getRgba: getRgba,\n  getHsla: getHsla,\n  getRgb: getRgb,\n  getHsl: getHsl,\n  getHwb: getHwb,\n  getAlpha: getAlpha,\n  hexString: hexString,\n  rgbString: rgbString,\n  rgbaString: rgbaString,\n  percentString: percentString,\n  percentaString: percentaString,\n  hslString: hslString,\n  hslaString: hslaString,\n  hwbString: hwbString,\n  keyword: keyword\n};\n\nfunction getRgba(string) {\n  if (!string) {\n    return;\n  }\n\n  var abbr = /^#([a-fA-F0-9]{3})$/i,\n      hex = /^#([a-fA-F0-9]{6})$/i,\n      rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      keyword = /(\\w+)/;\n  var rgb = [0, 0, 0],\n      a = 1,\n      match = string.match(abbr);\n\n  if (match) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i] + match[i], 16);\n    }\n  } else if (match = string.match(hex)) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n    }\n  } else if (match = string.match(rgba)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i + 1]);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(per)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(keyword)) {\n    if (match[1] == \"transparent\") {\n      return [0, 0, 0, 0];\n    }\n\n    rgb = colorNames[match[1]];\n\n    if (!rgb) {\n      return;\n    }\n  }\n\n  for (var i = 0; i < rgb.length; i++) {\n    rgb[i] = scale(rgb[i], 0, 255);\n  }\n\n  if (!a && a != 0) {\n    a = 1;\n  } else {\n    a = scale(a, 0, 1);\n  }\n\n  rgb[3] = a;\n  return rgb;\n}\n\nfunction getHsla(string) {\n  if (!string) {\n    return;\n  }\n\n  var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hsl);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        s = scale(parseFloat(match[2]), 0, 100),\n        l = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, s, l, a];\n  }\n}\n\nfunction getHwb(string) {\n  if (!string) {\n    return;\n  }\n\n  var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hwb);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        w = scale(parseFloat(match[2]), 0, 100),\n        b = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, w, b, a];\n  }\n}\n\nfunction getRgb(string) {\n  var rgba = getRgba(string);\n  return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n  var vals = getRgba(string);\n\n  if (vals) {\n    return vals[3];\n  } else if (vals = getHsla(string)) {\n    return vals[3];\n  } else if (vals = getHwb(string)) {\n    return vals[3];\n  }\n} // generators\n\n\nfunction hexString(rgb) {\n  return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1]) + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return rgbaString(rgba, alpha);\n  }\n\n  return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n  if (alpha === undefined) {\n    alpha = rgba[3] !== undefined ? rgba[3] : 1;\n  }\n\n  return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return percentaString(rgba, alpha);\n  }\n\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n  if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n    return hslaString(hsla, alpha);\n  }\n\n  return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n  if (alpha === undefined) {\n    alpha = hsla[3] !== undefined ? hsla[3] : 1;\n  }\n\n  return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n} // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\n\n\nfunction hwbString(hwb, alpha) {\n  if (alpha === undefined) {\n    alpha = hwb[3] !== undefined ? hwb[3] : 1;\n  }\n\n  return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n} // helpers\n\n\nfunction scale(num, min, max) {\n  return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return str.length < 2 ? \"0\" + str : str;\n} //create a list of reverse color names\n\n\nvar reverseNames = {};\n\nfor (var name in colorNames) {\n  reverseNames[colorNames[name]] = name;\n}","'use strict';\n\nmodule.exports = {\n  \"aliceblue\": [240, 248, 255],\n  \"antiquewhite\": [250, 235, 215],\n  \"aqua\": [0, 255, 255],\n  \"aquamarine\": [127, 255, 212],\n  \"azure\": [240, 255, 255],\n  \"beige\": [245, 245, 220],\n  \"bisque\": [255, 228, 196],\n  \"black\": [0, 0, 0],\n  \"blanchedalmond\": [255, 235, 205],\n  \"blue\": [0, 0, 255],\n  \"blueviolet\": [138, 43, 226],\n  \"brown\": [165, 42, 42],\n  \"burlywood\": [222, 184, 135],\n  \"cadetblue\": [95, 158, 160],\n  \"chartreuse\": [127, 255, 0],\n  \"chocolate\": [210, 105, 30],\n  \"coral\": [255, 127, 80],\n  \"cornflowerblue\": [100, 149, 237],\n  \"cornsilk\": [255, 248, 220],\n  \"crimson\": [220, 20, 60],\n  \"cyan\": [0, 255, 255],\n  \"darkblue\": [0, 0, 139],\n  \"darkcyan\": [0, 139, 139],\n  \"darkgoldenrod\": [184, 134, 11],\n  \"darkgray\": [169, 169, 169],\n  \"darkgreen\": [0, 100, 0],\n  \"darkgrey\": [169, 169, 169],\n  \"darkkhaki\": [189, 183, 107],\n  \"darkmagenta\": [139, 0, 139],\n  \"darkolivegreen\": [85, 107, 47],\n  \"darkorange\": [255, 140, 0],\n  \"darkorchid\": [153, 50, 204],\n  \"darkred\": [139, 0, 0],\n  \"darksalmon\": [233, 150, 122],\n  \"darkseagreen\": [143, 188, 143],\n  \"darkslateblue\": [72, 61, 139],\n  \"darkslategray\": [47, 79, 79],\n  \"darkslategrey\": [47, 79, 79],\n  \"darkturquoise\": [0, 206, 209],\n  \"darkviolet\": [148, 0, 211],\n  \"deeppink\": [255, 20, 147],\n  \"deepskyblue\": [0, 191, 255],\n  \"dimgray\": [105, 105, 105],\n  \"dimgrey\": [105, 105, 105],\n  \"dodgerblue\": [30, 144, 255],\n  \"firebrick\": [178, 34, 34],\n  \"floralwhite\": [255, 250, 240],\n  \"forestgreen\": [34, 139, 34],\n  \"fuchsia\": [255, 0, 255],\n  \"gainsboro\": [220, 220, 220],\n  \"ghostwhite\": [248, 248, 255],\n  \"gold\": [255, 215, 0],\n  \"goldenrod\": [218, 165, 32],\n  \"gray\": [128, 128, 128],\n  \"green\": [0, 128, 0],\n  \"greenyellow\": [173, 255, 47],\n  \"grey\": [128, 128, 128],\n  \"honeydew\": [240, 255, 240],\n  \"hotpink\": [255, 105, 180],\n  \"indianred\": [205, 92, 92],\n  \"indigo\": [75, 0, 130],\n  \"ivory\": [255, 255, 240],\n  \"khaki\": [240, 230, 140],\n  \"lavender\": [230, 230, 250],\n  \"lavenderblush\": [255, 240, 245],\n  \"lawngreen\": [124, 252, 0],\n  \"lemonchiffon\": [255, 250, 205],\n  \"lightblue\": [173, 216, 230],\n  \"lightcoral\": [240, 128, 128],\n  \"lightcyan\": [224, 255, 255],\n  \"lightgoldenrodyellow\": [250, 250, 210],\n  \"lightgray\": [211, 211, 211],\n  \"lightgreen\": [144, 238, 144],\n  \"lightgrey\": [211, 211, 211],\n  \"lightpink\": [255, 182, 193],\n  \"lightsalmon\": [255, 160, 122],\n  \"lightseagreen\": [32, 178, 170],\n  \"lightskyblue\": [135, 206, 250],\n  \"lightslategray\": [119, 136, 153],\n  \"lightslategrey\": [119, 136, 153],\n  \"lightsteelblue\": [176, 196, 222],\n  \"lightyellow\": [255, 255, 224],\n  \"lime\": [0, 255, 0],\n  \"limegreen\": [50, 205, 50],\n  \"linen\": [250, 240, 230],\n  \"magenta\": [255, 0, 255],\n  \"maroon\": [128, 0, 0],\n  \"mediumaquamarine\": [102, 205, 170],\n  \"mediumblue\": [0, 0, 205],\n  \"mediumorchid\": [186, 85, 211],\n  \"mediumpurple\": [147, 112, 219],\n  \"mediumseagreen\": [60, 179, 113],\n  \"mediumslateblue\": [123, 104, 238],\n  \"mediumspringgreen\": [0, 250, 154],\n  \"mediumturquoise\": [72, 209, 204],\n  \"mediumvioletred\": [199, 21, 133],\n  \"midnightblue\": [25, 25, 112],\n  \"mintcream\": [245, 255, 250],\n  \"mistyrose\": [255, 228, 225],\n  \"moccasin\": [255, 228, 181],\n  \"navajowhite\": [255, 222, 173],\n  \"navy\": [0, 0, 128],\n  \"oldlace\": [253, 245, 230],\n  \"olive\": [128, 128, 0],\n  \"olivedrab\": [107, 142, 35],\n  \"orange\": [255, 165, 0],\n  \"orangered\": [255, 69, 0],\n  \"orchid\": [218, 112, 214],\n  \"palegoldenrod\": [238, 232, 170],\n  \"palegreen\": [152, 251, 152],\n  \"paleturquoise\": [175, 238, 238],\n  \"palevioletred\": [219, 112, 147],\n  \"papayawhip\": [255, 239, 213],\n  \"peachpuff\": [255, 218, 185],\n  \"peru\": [205, 133, 63],\n  \"pink\": [255, 192, 203],\n  \"plum\": [221, 160, 221],\n  \"powderblue\": [176, 224, 230],\n  \"purple\": [128, 0, 128],\n  \"rebeccapurple\": [102, 51, 153],\n  \"red\": [255, 0, 0],\n  \"rosybrown\": [188, 143, 143],\n  \"royalblue\": [65, 105, 225],\n  \"saddlebrown\": [139, 69, 19],\n  \"salmon\": [250, 128, 114],\n  \"sandybrown\": [244, 164, 96],\n  \"seagreen\": [46, 139, 87],\n  \"seashell\": [255, 245, 238],\n  \"sienna\": [160, 82, 45],\n  \"silver\": [192, 192, 192],\n  \"skyblue\": [135, 206, 235],\n  \"slateblue\": [106, 90, 205],\n  \"slategray\": [112, 128, 144],\n  \"slategrey\": [112, 128, 144],\n  \"snow\": [255, 250, 250],\n  \"springgreen\": [0, 255, 127],\n  \"steelblue\": [70, 130, 180],\n  \"tan\": [210, 180, 140],\n  \"teal\": [0, 128, 128],\n  \"thistle\": [216, 191, 216],\n  \"tomato\": [255, 99, 71],\n  \"turquoise\": [64, 224, 208],\n  \"violet\": [238, 130, 238],\n  \"wheat\": [245, 222, 179],\n  \"white\": [255, 255, 255],\n  \"whitesmoke\": [245, 245, 245],\n  \"yellow\": [255, 255, 0],\n  \"yellowgreen\": [154, 205, 50]\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  elements: {\n    arc: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: '#fff',\n      borderWidth: 2\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  inLabelRange: function inLabelRange(mouseX) {\n    var vm = this._view;\n\n    if (vm) {\n      return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n    }\n\n    return false;\n  },\n  inRange: function inRange(chartX, chartY) {\n    var vm = this._view;\n\n    if (vm) {\n      var pointRelativePosition = helpers.getAngleFromPoint(vm, {\n        x: chartX,\n        y: chartY\n      });\n      var angle = pointRelativePosition.angle;\n      var distance = pointRelativePosition.distance; // Sanitise angle range\n\n      var startAngle = vm.startAngle;\n      var endAngle = vm.endAngle;\n\n      while (endAngle < startAngle) {\n        endAngle += 2.0 * Math.PI;\n      }\n\n      while (angle > endAngle) {\n        angle -= 2.0 * Math.PI;\n      }\n\n      while (angle < startAngle) {\n        angle += 2.0 * Math.PI;\n      } // Check if within the range of the open/close angle\n\n\n      var betweenAngles = angle >= startAngle && angle <= endAngle;\n      var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n      return betweenAngles && withinRadius;\n    }\n\n    return false;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n    return {\n      x: vm.x + Math.cos(halfAngle) * halfRadius,\n      y: vm.y + Math.sin(halfAngle) * halfRadius\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n    return {\n      x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n      y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n    };\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var sA = vm.startAngle;\n    var eA = vm.endAngle;\n    ctx.beginPath();\n    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n    ctx.closePath();\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = vm.borderWidth;\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.fill();\n    ctx.lineJoin = 'bevel';\n\n    if (vm.borderWidth) {\n      ctx.stroke();\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n  elements: {\n    line: {\n      tension: 0.4,\n      backgroundColor: globalDefaults.defaultColor,\n      borderWidth: 3,\n      borderColor: globalDefaults.defaultColor,\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      capBezierPoints: true,\n      fill: true // do we fill in the area between the line and its base axis\n\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var me = this;\n    var vm = me._view;\n    var ctx = me._chart.ctx;\n    var spanGaps = vm.spanGaps;\n\n    var points = me._children.slice(); // clone array\n\n\n    var globalOptionLineElements = globalDefaults.elements.line;\n    var lastDrawnIndex = -1;\n    var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n    if (me._loop && points.length) {\n      points.push(points[0]);\n    }\n\n    ctx.save(); // Stroke Line Options\n\n    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n    }\n\n    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n    ctx.beginPath();\n    lastDrawnIndex = -1;\n\n    for (index = 0; index < points.length; ++index) {\n      current = points[index];\n      previous = helpers.previousItem(points, index);\n      currentVM = current._view; // First point moves to it's starting position no matter what\n\n      if (index === 0) {\n        if (!currentVM.skip) {\n          ctx.moveTo(currentVM.x, currentVM.y);\n          lastDrawnIndex = index;\n        }\n      } else {\n        previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n        if (!currentVM.skip) {\n          if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n            // There was a gap and this is the first point after the gap\n            ctx.moveTo(currentVM.x, currentVM.y);\n          } else {\n            // Line to next point\n            helpers.canvas.lineTo(ctx, previous._view, current._view);\n          }\n\n          lastDrawnIndex = index;\n        }\n      }\n    }\n\n    ctx.stroke();\n    ctx.restore();\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n  elements: {\n    point: {\n      radius: 3,\n      pointStyle: 'circle',\n      backgroundColor: defaultColor,\n      borderColor: defaultColor,\n      borderWidth: 1,\n      // Hover\n      hitRadius: 1,\n      hoverRadius: 4,\n      hoverBorderWidth: 1\n    }\n  }\n});\n\nfunction xRange(mouseX) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n}\n\nfunction yRange(mouseY) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n}\n\nmodule.exports = Element.extend({\n  inRange: function inRange(mouseX, mouseY) {\n    var vm = this._view;\n    return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n  },\n  inLabelRange: xRange,\n  inXRange: xRange,\n  inYRange: yRange,\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  },\n  getArea: function getArea() {\n    return Math.PI * Math.pow(this._view.radius, 2);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y,\n      padding: vm.radius + vm.borderWidth\n    };\n  },\n  draw: function draw(chartArea) {\n    var vm = this._view;\n    var model = this._model;\n    var ctx = this._chart.ctx;\n    var pointStyle = vm.pointStyle;\n    var rotation = vm.rotation;\n    var radius = vm.radius;\n    var x = vm.x;\n    var y = vm.y;\n    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n    if (vm.skip) {\n      return;\n    } // Clipping for Points.\n\n\n    if (chartArea === undefined || model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y) {\n      ctx.strokeStyle = vm.borderColor || defaultColor;\n      ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n      ctx.fillStyle = vm.backgroundColor || defaultColor;\n      helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n  elements: {\n    rectangle: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: defaults.global.defaultColor,\n      borderSkipped: 'bottom',\n      borderWidth: 0\n    }\n  }\n});\n\nfunction isVertical(bar) {\n  return bar._view.width !== undefined;\n}\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\n\n\nfunction getBarBounds(bar) {\n  var vm = bar._view;\n  var x1, x2, y1, y2;\n\n  if (isVertical(bar)) {\n    // vertical\n    var halfWidth = vm.width / 2;\n    x1 = vm.x - halfWidth;\n    x2 = vm.x + halfWidth;\n    y1 = Math.min(vm.y, vm.base);\n    y2 = Math.max(vm.y, vm.base);\n  } else {\n    // horizontal bar\n    var halfHeight = vm.height / 2;\n    x1 = Math.min(vm.x, vm.base);\n    x2 = Math.max(vm.x, vm.base);\n    y1 = vm.y - halfHeight;\n    y2 = vm.y + halfHeight;\n  }\n\n  return {\n    left: x1,\n    top: y1,\n    right: x2,\n    bottom: y2\n  };\n}\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var left, right, top, bottom, signX, signY, borderSkipped;\n    var borderWidth = vm.borderWidth;\n\n    if (!vm.horizontal) {\n      // bar\n      left = vm.x - vm.width / 2;\n      right = vm.x + vm.width / 2;\n      top = vm.y;\n      bottom = vm.base;\n      signX = 1;\n      signY = bottom > top ? 1 : -1;\n      borderSkipped = vm.borderSkipped || 'bottom';\n    } else {\n      // horizontal bar\n      left = vm.base;\n      right = vm.x;\n      top = vm.y - vm.height / 2;\n      bottom = vm.y + vm.height / 2;\n      signX = right > left ? 1 : -1;\n      signY = 1;\n      borderSkipped = vm.borderSkipped || 'left';\n    } // Canvas doesn't allow us to stroke inside the width so we can\n    // adjust the sizes to fit if we're setting a stroke on the line\n\n\n    if (borderWidth) {\n      // borderWidth shold be less than bar width and bar height.\n      var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n      borderWidth = borderWidth > barSize ? barSize : borderWidth;\n      var halfStroke = borderWidth / 2; // Adjust borderWidth when bar top position is near vm.base(zero).\n\n      var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n      var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n      var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n      var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0); // not become a vertical line?\n\n      if (borderLeft !== borderRight) {\n        top = borderTop;\n        bottom = borderBottom;\n      } // not become a horizontal line?\n\n\n      if (borderTop !== borderBottom) {\n        left = borderLeft;\n        right = borderRight;\n      }\n    }\n\n    ctx.beginPath();\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = borderWidth; // Corner points, from bottom-left to bottom-right clockwise\n    // | 1 2 |\n    // | 0 3 |\n\n    var corners = [[left, bottom], [left, top], [right, top], [right, bottom]]; // Find first (starting) corner with fallback to 'bottom'\n\n    var borders = ['bottom', 'left', 'top', 'right'];\n    var startCorner = borders.indexOf(borderSkipped, 0);\n\n    if (startCorner === -1) {\n      startCorner = 0;\n    }\n\n    function cornerAt(index) {\n      return corners[(startCorner + index) % 4];\n    } // Draw rectangle from 'startCorner'\n\n\n    var corner = cornerAt(0);\n    ctx.moveTo(corner[0], corner[1]);\n\n    for (var i = 1; i < 4; i++) {\n      corner = cornerAt(i);\n      ctx.lineTo(corner[0], corner[1]);\n    }\n\n    ctx.fill();\n\n    if (borderWidth) {\n      ctx.stroke();\n    }\n  },\n  height: function height() {\n    var vm = this._view;\n    return vm.base - vm.y;\n  },\n  inRange: function inRange(mouseX, mouseY) {\n    var inRange = false;\n\n    if (this._view) {\n      var bounds = getBarBounds(this);\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inLabelRange: function inLabelRange(mouseX, mouseY) {\n    var me = this;\n\n    if (!me._view) {\n      return false;\n    }\n\n    var inRange = false;\n    var bounds = getBarBounds(me);\n\n    if (isVertical(me)) {\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right;\n    } else {\n      inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inXRange: function inXRange(mouseX) {\n    var bounds = getBarBounds(this);\n    return mouseX >= bounds.left && mouseX <= bounds.right;\n  },\n  inYRange: function inYRange(mouseY) {\n    var bounds = getBarBounds(this);\n    return mouseY >= bounds.top && mouseY <= bounds.bottom;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var x, y;\n\n    if (isVertical(this)) {\n      x = vm.x;\n      y = (vm.y + vm.base) / 2;\n    } else {\n      x = (vm.x + vm.base) / 2;\n      y = vm.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return vm.width * Math.abs(vm.y - vm.base);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  }\n});","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\nmodule.exports = {\n  acquireContext: function acquireContext(item) {\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    }\n\n    return item && item.getContext('2d') || null;\n  }\n};","/**\n * Chart.Platform implementation for targeting a web browser\n */\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\n\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\n\nfunction readUsedSize(element, property) {\n  var value = helpers.getStyle(element, property);\n  var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? Number(matches[1]) : undefined;\n}\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\n\n\nfunction initCanvas(canvas, config) {\n  var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  }; // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n\n  style.display = style.display || 'block';\n\n  if (renderWidth === null || renderWidth === '') {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (renderHeight === null || renderHeight === '') {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (config.options.aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayWidth !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\n\n\nvar supportsEventListenerOptions = function () {\n  var supports = false;\n\n  try {\n    var options = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supports = true;\n      }\n    });\n    window.addEventListener('e', null, options);\n  } catch (e) {// continue regardless of error\n  }\n\n  return supports;\n}(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\n\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction _addEventListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction _removeEventListener(node, type, listener) {\n  node.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n  return {\n    type: type,\n    chart: chart,\n    native: nativeEvent || null,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var pos = helpers.getRelativePosition(event, chart);\n  return createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n  var ticking = false;\n  var args = [];\n  return function () {\n    args = Array.prototype.slice.call(arguments);\n    thisArg = thisArg || this;\n\n    if (!ticking) {\n      ticking = true;\n      helpers.requestAnimFrame.call(window, function () {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n} // Implementation based on https://github.com/marcj/css-element-queries\n\n\nfunction createResizer(handler) {\n  var resizer = document.createElement('div');\n  var cls = CSS_PREFIX + 'size-monitor';\n  var maxSize = 1000000;\n  var style = 'position:absolute;' + 'left:0;' + 'top:0;' + 'right:0;' + 'bottom:0;' + 'overflow:hidden;' + 'pointer-events:none;' + 'visibility:hidden;' + 'z-index:-1;';\n  resizer.style.cssText = style;\n  resizer.className = cls;\n  resizer.innerHTML = '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:' + maxSize + 'px;' + 'height:' + maxSize + 'px;' + 'left:0;' + 'top:0\">' + '</div>' + '</div>' + '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:200%;' + 'height:200%;' + 'left:0; ' + 'top:0\">' + '</div>' + '</div>';\n  var expand = resizer.childNodes[0];\n  var shrink = resizer.childNodes[1];\n\n  resizer._reset = function () {\n    expand.scrollLeft = maxSize;\n    expand.scrollTop = maxSize;\n    shrink.scrollLeft = maxSize;\n    shrink.scrollTop = maxSize;\n  };\n\n  var onScroll = function onScroll() {\n    resizer._reset();\n\n    handler();\n  };\n\n  _addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\n  _addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n  return resizer;\n} // https://davidwalsh.name/detect-node-insertion\n\n\nfunction watchForRender(node, handler) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n  var proxy = expando.renderProxy = function (e) {\n    if (e.animationName === CSS_RENDER_ANIMATION) {\n      handler();\n    }\n  };\n\n  helpers.each(ANIMATION_START_EVENTS, function (type) {\n    _addEventListener(node, type, proxy);\n  }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n  // is removed then added back immediately (same animation frame?). Accessing the\n  // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n  // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n  // https://github.com/chartjs/Chart.js/issues/4737\n\n  expando.reflow = !!node.offsetParent;\n  node.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var proxy = expando.renderProxy;\n\n  if (proxy) {\n    helpers.each(ANIMATION_START_EVENTS, function (type) {\n      _removeEventListener(node, type, proxy);\n    });\n    delete expando.renderProxy;\n  }\n\n  node.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n  var resizer = expando.resizer = createResizer(throttled(function () {\n    if (expando.resizer) {\n      return listener(createEvent('resize', chart));\n    }\n  })); // The resizer needs to be attached to the node parent, so we first need to be\n  // sure that `node` is attached to the DOM before injecting the resizer element.\n\n  watchForRender(node, function () {\n    if (expando.resizer) {\n      var container = node.parentNode;\n\n      if (container && container !== resizer.parentNode) {\n        container.insertBefore(resizer, container.firstChild);\n      } // The container size might have changed, let's reset the resizer state.\n\n\n      resizer._reset();\n    }\n  });\n}\n\nfunction removeResizeListener(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var resizer = expando.resizer;\n  delete expando.resizer;\n  unwatchForRender(node);\n\n  if (resizer && resizer.parentNode) {\n    resizer.parentNode.removeChild(resizer);\n  }\n}\n\nfunction injectCSS(platform, css) {\n  // http://stackoverflow.com/q/3922139\n  var style = platform._style || document.createElement('style');\n\n  if (!platform._style) {\n    platform._style = style;\n    css = '/* Chart.js */\\n' + css;\n    style.setAttribute('type', 'text/css');\n    document.getElementsByTagName('head')[0].appendChild(style);\n  }\n\n  style.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n  /**\n   * This property holds whether this platform is enabled for the current environment.\n   * Currently used by platform.js to select the proper implementation.\n   * @private\n   */\n  _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n  initialize: function initialize() {\n    var keyframes = 'from{opacity:0.99}to{opacity:1}';\n    injectCSS(this, // DOM rendering detection\n    // https://davidwalsh.name/detect-node-insertion\n    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '.' + CSS_RENDER_MONITOR + '{' + '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + 'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + '}');\n  },\n  acquireContext: function acquireContext(item, config) {\n    if (typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item.length) {\n      // Support for array based queries (such as jQuery)\n      item = item[0];\n    }\n\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n\n\n    var context = item && item.getContext && item.getContext('2d'); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the item has a context2D which has item as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n\n    if (context && context.canvas === item) {\n      initCanvas(item, config);\n      return context;\n    }\n\n    return null;\n  },\n  releaseContext: function releaseContext(context) {\n    var canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return;\n    }\n\n    var initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(function (prop) {\n      var value = initial[prop];\n\n      if (helpers.isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    helpers.each(initial.style || {}, function (value, key) {\n      canvas.style[key] = value;\n    }); // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n  },\n  addEventListener: function addEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      addResizeListener(canvas, listener, chart);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n    var proxies = expando.proxies || (expando.proxies = {});\n\n    var proxy = proxies[chart.id + '_' + type] = function (event) {\n      listener(fromNativeEvent(event, chart));\n    };\n\n    _addEventListener(canvas, type, proxy);\n  },\n  removeEventListener: function removeEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      removeResizeListener(canvas, listener);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || {};\n    var proxies = expando.proxies || {};\n    var proxy = proxies[chart.id + '_' + type];\n\n    if (!proxy) {\n      return;\n    }\n\n    _removeEventListener(canvas, type, proxy);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.addEvent = _addEventListener;\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.removeEvent = _removeEventListener;","'use strict';\n\nvar Animation = require('./core.animation');\n\nvar animations = require('./core.animations');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Interaction = require('./core.interaction');\n\nvar layouts = require('./core.layouts');\n\nvar platform = require('../platforms/platform');\n\nvar plugins = require('./core.plugins');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Tooltip = require('./core.tooltip');\n\nmodule.exports = function (Chart) {\n  // Create a dictionary of chart types, to allow for extension of existing types\n  Chart.types = {}; // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n  // Destroy method on the chart will remove the instance of the chart from this reference.\n\n  Chart.instances = {}; // Controllers available for dataset visualization eg. bar, line, slice, etc.\n\n  Chart.controllers = {};\n  /**\n   * Initializes the given config with global and chart default values.\n   */\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use configMerge() for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = helpers.configMerge(defaults.global, defaults[config.type], config.options || {});\n    return config;\n  }\n  /**\n   * Updates the config of the chart\n   * @param chart {Chart} chart to update the options for\n   */\n\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers.each(chart.scales, function (scale) {\n      layouts.removeBox(chart, scale);\n    });\n    newOptions = helpers.configMerge(Chart.defaults.global, Chart.defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  helpers.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      plugins.notify(me, 'beforeInit');\n      helpers.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (me.options.onResize) {\n          me.options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: me.options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var types = [];\n      var newControllers = [];\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n        types.push(meta.type);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = Chart.controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      plugins._invalidate(me);\n\n      if (plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      plugins.notify(me, 'afterScaleUpdate');\n      plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var duration = config.duration;\n      var lazy = config.lazy;\n\n      if (plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var animationOptions = me.options.animation;\n\n      var onComplete = function onComplete(animation) {\n        plugins.notify(me, 'afterRender');\n        helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && (typeof duration !== 'undefined' && duration !== 0 || typeof duration === 'undefined' && animationOptions.duration !== 0)) {\n        var animation = new Animation({\n          numSteps: (duration || animationOptions.duration) / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new Animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n\n      if (me.scale) {\n        me.scale.draw();\n      }\n\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n    // Get the single element that was clicked on\n    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n    getElementAtEvent: function getElementAtEvent(e) {\n      return Interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return Interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return Interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return Interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new Tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {Boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function (Chart) {\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  Chart.DatasetController = function (chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers.extend(Chart.DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        listenArrayEvents(data, me);\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var getHoverColor = helpers.getHoverColor;\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      this.insertElements(this.getDataset().data.length - 1, arguments.length);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  Chart.DatasetController.extend = helpers.inherits;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  var factor;\n  var precision;\n  var spacing;\n\n  if (generationOptions.stepSize && generationOptions.stepSize > 0) {\n    spacing = generationOptions.stepSize;\n  } else {\n    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n    precision = generationOptions.precision;\n\n    if (precision !== undefined) {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n  }\n\n  var niceMin = Math.floor(dataRange.min / spacing) * spacing;\n  var niceMax = Math.ceil(dataRange.max / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n  if (!helpers.isNullOrUndef(generationOptions.min) && !helpers.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {\n    // If very close to our whole number, use it.\n    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n      niceMin = generationOptions.min;\n      niceMax = generationOptions.max;\n    }\n  }\n\n  var numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n  if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n    numSpaces = Math.round(numSpaces);\n  } else {\n    numSpaces = Math.ceil(numSpaces);\n  }\n\n  precision = 1;\n\n  if (spacing < 1) {\n    precision = Math.pow(10, 1 - Math.floor(helpers.log10(spacing)));\n    niceMin = Math.round(niceMin * precision) / precision;\n    niceMax = Math.round(niceMax * precision) / precision;\n  }\n\n  ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\n  for (var j = 1; j < numSpaces; ++j) {\n    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n  }\n\n  ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var noop = helpers.noop;\n  Chart.LinearScaleBase = Scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return Scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers.sign(me.min);\n        var maxSign = helpers.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: noop,\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      Scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n};","'use strict';\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // Default config for a category scale\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var DatasetScale = Scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var isHorizontal = me.isHorizontal();\n\n      if (data.yLabels && !isHorizontal) {\n        return me.getRightValue(data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + Math.round(widthOffset);\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + Math.round(heightOffset);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  });\n  scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    ticks: {\n      callback: Ticks.formatters.linear\n    }\n  };\n  var LinearScale = Chart.LinearScaleBase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers.min(values);\n          var maxVal = helpers.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var maxTicks;\n      var me = this;\n      var tickOpts = me.options.ticks;\n\n      if (me.isHorizontal()) {\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n      } else {\n        // The factor of 2 used to scale the font size has been experimentally determined.\n        var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n      }\n\n      return maxTicks;\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  });\n  scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = [];\n  var valueOrDefault = helpers.valueOrDefault; // Figure out what the max number of ticks we can support it is based on the size of\n  // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n  // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n  // the graph\n\n  var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n  var endExp = Math.floor(helpers.log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var exp, significand;\n\n  if (tickVal === 0) {\n    exp = Math.floor(helpers.log10(dataRange.minNotZero));\n    significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n    ticks.push(tickVal);\n    tickVal = significand * Math.pow(10, exp);\n  } else {\n    exp = Math.floor(helpers.log10(tickVal));\n    significand = Math.floor(tickVal / Math.pow(10, exp));\n  }\n\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push(tickVal);\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = valueOrDefault(generationOptions.max, tickVal);\n  ticks.push(lastTick);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: Ticks.formatters.logarithmic\n    }\n  };\n  var LogarithmicScale = Scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers.min(valuesForType);\n            var maxVal = helpers.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = valueOrDefault(tickOpts.min, me.min);\n      me.max = valueOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: tickOpts.min,\n        max: tickOpts.max\n      };\n      var ticks = me.ticks = generateTicks(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      Scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {Number} value - The minimum not zero value.\n     * @return {Number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  });\n  scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var globalDefaults = defaults.global;\n  var defaultConfig = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: Ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getPointLabelFontOptions(scale) {\n    var pointLabelOptions = scale.options.pointLabels;\n    var fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n    var fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n    var fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n    var font = helpers.fontString(fontSize, fontStyle, fontFamily);\n    return {\n      size: fontSize,\n      style: fontStyle,\n      family: fontFamily,\n      font: font\n    };\n  }\n\n  function measureLabelSize(ctx, fontSize, label) {\n    if (helpers.isArray(label)) {\n      return {\n        w: helpers.longestText(ctx, ctx.font, label),\n        h: label.length * fontSize + (label.length - 1) * 1.5 * fontSize\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: fontSize\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size - 5,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size + 5\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    /*\n     * Right, this is really confusing and there is a lot of maths going on here\n     * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n     *\n     * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n     *\n     * Solution:\n     *\n     * We assume the radius of the polygon is half the size of the canvas at first\n     * at each index we check if the text overlaps.\n     *\n     * Where it does, we store that angle and that index.\n     *\n     * After finding the largest index and angle we calculate how much we need to remove\n     * from the shape radius to move the point inwards by that x.\n     *\n     * We average the left and right distances to get the maximum shape radius that can fit in the box\n     * along with labels.\n     *\n     * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n     * on each side, removing that from the size, halving it and adding the left x protrusion width.\n     *\n     * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n     * and position it in the most space efficient manner\n     *\n     * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n     */\n    var plFont = getPointLabelFontOptions(scale); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    var furthestLimits = {\n      r: scale.width,\n      l: 0,\n      t: scale.height,\n      b: 0\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.font;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, largestPossibleRadius);\n      textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n  }\n  /**\n   * Helper function to fit a radial linear scale with no point labels\n   */\n\n\n  function _fit(scale) {\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    scale.drawingArea = Math.round(largestPossibleRadius);\n    scale.setCenterPoint(0, 0, 0, 0);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, fontSize) {\n    if (helpers.isArray(text)) {\n      var y = position.y;\n      var spacing = 1.5 * fontSize;\n\n      for (var i = 0; i < text.length; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += spacing;\n      }\n    } else {\n      ctx.fillText(text, position.x, position.y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var pointLabelOpts = opts.pointLabels;\n    ctx.lineWidth = angleLineOpts.lineWidth;\n    ctx.strokeStyle = angleLineOpts.color;\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = getPointLabelFontOptions(scale);\n    ctx.textBaseline = 'top';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra 3px out for some label spacing\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n        ctx.font = plFont.font;\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n      }\n    }\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    ctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n    ctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n    if (scale.options.gridLines.circular) {\n      // Draw circular arcs between the points\n      ctx.beginPath();\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.stroke();\n    } else {\n      // Draw straight lines connecting each index\n      var valueCount = getValueCount(scale);\n\n      if (valueCount === 0) {\n        return;\n      }\n\n      ctx.beginPath();\n      var pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n\n  function numberOrZero(param) {\n    return helpers.isNumber(param) ? param : 0;\n  }\n\n  var LinearRadialScale = Chart.LinearScaleBase.extend({\n    setDimensions: function setDimensions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.xCenter = Math.round(me.width / 2);\n      me.yCenter = Math.round(me.height / 2);\n      var minSize = helpers.min([me.height, me.width]);\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      me.drawingArea = opts.display ? minSize / 2 - (tickFontSize / 2 + tickOpts.backdropPaddingY) : minSize / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      if (this.options.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        _fit(this);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - bottomMovement - me.drawingArea;\n      me.xCenter = Math.round((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.round((maxTop + maxBottom) / 2 + me.top);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n        y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0); // Tick Font\n\n        var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n        var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n        var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n        var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n        helpers.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n              ctx.font = tickLabelFont;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFontSize + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n      }\n    }\n  });\n  scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\n\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService'); // Integer constants are from the ES6 spec.\n\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: [1, 2, 3, 6, 12]\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: [1, 2, 5]\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: [1, 2, 3, 4]\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: [1, 2, 3]\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: [1, 2, 3, 4]\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction arrayUnique(items) {\n  var hash = {};\n  var out = [];\n  var i, ilen, item;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    item = items[i];\n\n    if (!hash[item]) {\n      hash[item] = true;\n      out.push(item);\n    }\n  }\n\n  return out;\n}\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\n\n\nfunction buildLookupTable(timestamps, min, max, distribution) {\n  if (distribution === 'linear' || !timestamps.length) {\n    return [{\n      time: min,\n      pos: 0\n    }, {\n      time: max,\n      pos: 1\n    }];\n  }\n\n  var table = [];\n  var items = [min];\n  var i, ilen, prev, curr, next;\n\n  for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n    curr = timestamps[i];\n\n    if (curr > min && curr < max) {\n      items.push(curr);\n    }\n  }\n\n  items.push(max);\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    next = items[i + 1];\n    prev = items[i - 1];\n    curr = items[i]; // only add points that breaks the scale linearity\n\n    if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n      table.push({\n        time: curr,\n        pos: i / (ilen - 1)\n      });\n    }\n  }\n\n  return table;\n} // @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\nfunction lookup(table, key, value) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var mid, i0, i1;\n\n  while (lo >= 0 && lo <= hi) {\n    mid = lo + hi >> 1;\n    i0 = table[mid - 1] || null;\n    i1 = table[mid];\n\n    if (!i0) {\n      // given value is outside table (before first item)\n      return {\n        lo: null,\n        hi: i1\n      };\n    } else if (i1[key] < value) {\n      lo = mid + 1;\n    } else if (i0[key] > value) {\n      hi = mid - 1;\n    } else {\n      return {\n        lo: i0,\n        hi: i1\n      };\n    }\n  } // given value is outside table (after last item)\n\n\n  return {\n    lo: i1,\n    hi: null\n  };\n}\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\n\n\nfunction interpolate(table, skey, sval, tkey) {\n  var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n  var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n  var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n  var span = next[skey] - prev[skey];\n  var ratio = span ? (sval - prev[skey]) / span : 0;\n  var offset = (next[tkey] - prev[tkey]) * ratio;\n  return prev[tkey] + offset;\n}\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\n\n\nfunction momentify(value, options) {\n  var parser = options.parser;\n  var format = options.parser || options.format;\n\n  if (typeof parser === 'function') {\n    return parser(value);\n  }\n\n  if (typeof value === 'string' && typeof format === 'string') {\n    return moment(value, format);\n  }\n\n  if (!(value instanceof moment)) {\n    value = moment(value);\n  }\n\n  if (value.isValid()) {\n    return value;\n  } // Labels are in an incompatible moment format and no `parser` has been provided.\n  // The user might still use the deprecated `format` option to convert his inputs.\n\n\n  if (typeof format === 'function') {\n    return format(value);\n  }\n\n  return value;\n}\n\nfunction parse(input, scale) {\n  if (helpers.isNullOrUndef(input)) {\n    return null;\n  }\n\n  var options = scale.options.time;\n  var value = momentify(scale.getRightValue(input), options);\n\n  if (!value.isValid()) {\n    return null;\n  }\n\n  if (options.round) {\n    value.startOf(options.round);\n  }\n\n  return value.valueOf();\n}\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\n\n\nfunction determineStepSize(min, max, unit, capacity) {\n  var range = max - min;\n  var interval = INTERVALS[unit];\n  var milliseconds = interval.size;\n  var steps = interval.steps;\n  var i, ilen, factor;\n\n  if (!steps) {\n    return Math.ceil(range / (capacity * milliseconds));\n  }\n\n  for (i = 0, ilen = steps.length; i < ilen; ++i) {\n    factor = steps[i];\n\n    if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n      break;\n    }\n  }\n\n  return factor;\n}\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\n\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  var i, interval, factor;\n\n  for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    interval = INTERVALS[UNITS[i]];\n    factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n/**\n * Figures out what unit to format a set of ticks with\n */\n\n\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n  var duration = moment.duration(moment(max).diff(moment(min)));\n  var ilen = UNITS.length;\n  var i, unit;\n\n  for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n    unit = UNITS[i];\n\n    if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\n\n\nfunction generate(min, max, capacity, options) {\n  var timeOpts = options.time;\n  var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n  var major = determineMajorUnit(minor);\n  var stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n  var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n  var majorTicksEnabled = options.ticks.major.enabled;\n  var interval = INTERVALS[minor];\n  var first = moment(min);\n  var last = moment(max);\n  var ticks = [];\n  var time;\n\n  if (!stepSize) {\n    stepSize = determineStepSize(min, max, minor, capacity);\n  } // For 'week' unit, handle the first day of week option\n\n\n  if (weekday) {\n    first = first.isoWeekday(weekday);\n    last = last.isoWeekday(weekday);\n  } // Align first/last ticks on unit\n\n\n  first = first.startOf(weekday ? 'day' : minor);\n  last = last.startOf(weekday ? 'day' : minor); // Make sure that the last tick include max\n\n  if (last < max) {\n    last.add(1, minor);\n  }\n\n  time = moment(first);\n\n  if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n    // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n    // we first aligned time on the previous `major` unit then add the number of full\n    // stepSize there is between first and the previous major time.\n    time.startOf(major);\n    time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n  }\n\n  for (; time < last; time.add(stepSize, minor)) {\n    ticks.push(+time);\n  }\n\n  ticks.push(+time);\n  return ticks;\n}\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\n\n\nfunction computeOffsets(table, ticks, min, max, options) {\n  var left = 0;\n  var right = 0;\n  var upper, lower;\n\n  if (options.offset && ticks.length) {\n    if (!options.time.min) {\n      upper = ticks.length > 1 ? ticks[1] : max;\n      lower = ticks[0];\n      left = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n\n    if (!options.time.max) {\n      upper = ticks[ticks.length - 1];\n      lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n      right = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n  }\n\n  return {\n    left: left,\n    right: right\n  };\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n  var ticks = [];\n  var i, ilen, value, major;\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    value = values[i];\n    major = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n    ticks.push({\n      value: value,\n      major: major\n    });\n  }\n\n  return ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n  var i, momentDate, hasTime;\n  var ilen = data.length; // find the label with the most parts (milliseconds, minutes, etc.)\n  // format all labels with the same level of detail as the most specific label\n\n  for (i = 0; i < ilen; i++) {\n    momentDate = momentify(data[i], timeOpts);\n\n    if (momentDate.millisecond() !== 0) {\n      return 'MMM D, YYYY h:mm:ss.SSS a';\n    }\n\n    if (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n      hasTime = true;\n    }\n  }\n\n  if (hasTime) {\n    return 'MMM D, YYYY h:mm:ss a';\n  }\n\n  return 'MMM D, YYYY';\n}\n\nmodule.exports = function () {\n  var defaultConfig = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    time: {\n      parser: false,\n      // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      // defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n      displayFormats: {\n        millisecond: 'h:mm:ss.SSS a',\n        // 11:20:01.123 AM,\n        second: 'h:mm:ss a',\n        // 11:20:01 AM\n        minute: 'h:mm a',\n        // 11:20 AM\n        hour: 'hA',\n        // 5PM\n        day: 'MMM D',\n        // Sep 4\n        week: 'll',\n        // Week 46, or maybe \"[W]WW - YYYY\" ?\n        month: 'MMM YYYY',\n        // Sept 2015\n        quarter: '[Q]Q - YYYY',\n        // Q3\n        year: 'YYYY' // 2015\n\n      }\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var TimeScale = Scale.extend({\n    initialize: function initialize() {\n      if (!moment) {\n        throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n      }\n\n      this.mergeTicksOptions();\n      Scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options; // DEPRECATIONS: output a message only one time per update\n\n      if (options.time && options.time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      }\n\n      return Scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return Scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp; // Convert labels to timestamps\n\n      for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n        labels.push(parse(chart.data.labels[i], me));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(data[j], me);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            timestamps.push.apply(timestamps, labels);\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n      max = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n      me._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n      return ticksFromTimestamps(ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return momentify(label, timeOpts).format(me._labelFormat);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(tick, index, ticks, formatOverride) {\n      var me = this;\n      var options = me.options;\n      var time = tick.valueOf();\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = tick.clone().startOf(majorUnit).valueOf();\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = interpolate(me._table, 'time', time, 'pos');\n      return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(value, me);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n      var time = interpolate(me._table, 'pos', pos, 'time');\n      return moment(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this;\n      var formatOverride = me.options.time.displayFormats.millisecond; // Pick the longest format for guestimation\n\n      var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  });\n  scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      // Specific to Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }],\n    yAxes: [{\n      type: 'linear'\n    }]\n  }\n});\n\ndefaults._set('horizontalBar', {\n  hover: {\n    mode: 'index',\n    axis: 'y'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      position: 'bottom'\n    }],\n    yAxes: [{\n      position: 'left',\n      type: 'category',\n      // Specific to Horizontal Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }]\n  },\n  elements: {\n    rectangle: {\n      borderSkipped: 'left'\n    }\n  },\n  tooltips: {\n    callbacks: {\n      title: function title(item, data) {\n        // Pick first xLabel for now\n        var title = '';\n\n        if (item.length > 0) {\n          if (item[0].yLabel) {\n            title = item[0].yLabel;\n          } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n            title = data.labels[item[0].index];\n          }\n        }\n\n        return title;\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        return datasetLabel + ': ' + item.xLabel;\n      }\n    },\n    mode: 'index',\n    axis: 'y'\n  }\n});\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\n\n\nfunction computeMinSampleSize(scale, pixels) {\n  var min = scale.isHorizontal() ? scale.width : scale.height;\n  var ticks = scale.getTicks();\n  var prev, curr, i, ilen;\n\n  for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n    min = Math.min(min, pixels[i] - pixels[i - 1]);\n  }\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    min = i > 0 ? Math.min(min, curr - prev) : min;\n    prev = curr;\n  }\n\n  return min;\n}\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\n\n\nfunction computeFitCategoryTraits(index, ruler, options) {\n  var thickness = options.barThickness;\n  var count = ruler.stackCount;\n  var curr = ruler.pixels[index];\n  var size, ratio;\n\n  if (helpers.isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * count;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / count,\n    ratio: ratio,\n    start: curr - size / 2\n  };\n}\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\n\n\nfunction computeFlexCategoryTraits(index, ruler, options) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  var start, size;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale end extremity.\n    prev = curr - (next === null ? ruler.end - curr : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  start = curr - (curr - prev) / 2 * percent;\n  size = (next - prev) / 2 * percent;\n  return {\n    chunk: size / ruler.stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bar = Chart.DatasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      Chart.DatasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n      var custom = rectangle.custom || {};\n      var rectangleOptions = chart.options.elements.rectangle;\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        datasetLabel: dataset.label,\n        label: chart.data.labels[index],\n        borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n        backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n        borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n        borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n      };\n      me.updateElementGeometry(rectangle, index, reset);\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    updateElementGeometry: function updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n      var vscale = me.getValueScale();\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getValueScale: function getValueScale() {\n      return this.getScaleForId(this.getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    getIndexScale: function getIndexScale() {\n      return this.getScaleForId(this.getIndexScaleId());\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {Number} [last] - The dataset index\n     * @returns {Array} The stack list\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getIndexScale();\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {Number} [datasetIndex] - The dataset index\n     * @param {String} [name] - The stack name to find\n     * @returns {Number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n      var scale = me.getIndexScale();\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var scale = me.getValueScale();\n      var datasets = chart.data.datasets;\n      var value = scale.getRightValue(datasets[datasetIndex].data[index]);\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller.getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = (head - base) / 2;\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getValueScale();\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers.canvas.unclipArea(chart.ctx);\n    }\n  });\n  Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      // bubble should probably use a linear scale by default\n      position: 'bottom',\n      id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n    }],\n    yAxes: [{\n      type: 'linear',\n      position: 'left',\n      id: 'y-axis-0'\n    }]\n  },\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        // Title doesn't make sense for scatter since we format the data as a point\n        return '';\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n        return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bubble = Chart.DatasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n      model.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n      model.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var resolve = helpers.options.resolve;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n  animation: {\n    // Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    // Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false\n  },\n  hover: {\n    mode: 'single'\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc && arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n        if (meta.data[index]) {\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n      }\n\n      chart.update();\n    }\n  },\n  // The percentage of the chart that we cut out of the middle.\n  cutoutPercentage: 50,\n  // The rotation of the chart, where the first data arc begins.\n  rotation: Math.PI * -0.5,\n  // The total circumference of the chart.\n  circumference: Math.PI * 2.0,\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(tooltipItem, data) {\n        var dataLabel = data.labels[tooltipItem.index];\n        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n        if (helpers.isArray(dataLabel)) {\n          // show value on first line of multiline label\n          // need to clone because we are changing the value\n          dataLabel = dataLabel.slice();\n          dataLabel[0] += value;\n        } else {\n          dataLabel += value;\n        }\n\n        return dataLabel;\n      }\n    }\n  }\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\n\ndefaults._set('pie', {\n  cutoutPercentage: 0\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n      var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth(meta.data);\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.getRingIndex(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Resets the visual styles\n\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var elementOpts = this.chart.options.elements.arc;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth); // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var index = this.index;\n      var length = arcs.length;\n      var borderWidth;\n      var hoverWidth;\n\n      for (var i = 0; i < length; i++) {\n        borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n        hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n        max = borderWidth > max ? borderWidth : max;\n        max = hoverWidth > max ? hoverWidth : max;\n      }\n\n      return max;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n  showLines: true,\n  spanGaps: false,\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      id: 'x-axis-0'\n    }],\n    yAxes: [{\n      type: 'linear',\n      id: 'y-axis-0'\n    }]\n  }\n});\n\nmodule.exports = function (Chart) {\n  function lineEnabled(dataset, options) {\n    return helpers.valueOrDefault(dataset.showLine, options.showLines);\n  }\n\n  Chart.controllers.line = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var options = me.chart.options;\n      var lineElementOptions = options.elements.line;\n      var scale = me.getScaleForId(meta.yAxisID);\n      var i, ilen, custom;\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, options); // Update Line\n\n      if (showLine) {\n        custom = line.custom || {}; // Compatibility: If the properties are defined with only the old name, use those values\n\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = {\n          // Appearance\n          // The default behavior of lines is to break at null values, according\n          // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n          // This option gives lines the ability to span gaps\n          spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n          cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode)\n        };\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    getPointBackgroundColor: function getPointBackgroundColor(point, index) {\n      var backgroundColor = this.chart.options.elements.point.backgroundColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.backgroundColor) {\n        backgroundColor = custom.backgroundColor;\n      } else if (dataset.pointBackgroundColor) {\n        backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n      } else if (dataset.backgroundColor) {\n        backgroundColor = dataset.backgroundColor;\n      }\n\n      return backgroundColor;\n    },\n    getPointBorderColor: function getPointBorderColor(point, index) {\n      var borderColor = this.chart.options.elements.point.borderColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.borderColor) {\n        borderColor = custom.borderColor;\n      } else if (dataset.pointBorderColor) {\n        borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n      } else if (dataset.borderColor) {\n        borderColor = dataset.borderColor;\n      }\n\n      return borderColor;\n    },\n    getPointBorderWidth: function getPointBorderWidth(point, index) {\n      var borderWidth = this.chart.options.elements.point.borderWidth;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.borderWidth)) {\n        borderWidth = custom.borderWidth;\n      } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n        borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n      } else if (!isNaN(dataset.borderWidth)) {\n        borderWidth = dataset.borderWidth;\n      }\n\n      return borderWidth;\n    },\n    getPointRotation: function getPointRotation(point, index) {\n      var pointRotation = this.chart.options.elements.point.rotation;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.rotation)) {\n        pointRotation = custom.rotation;\n      } else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n        pointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n      }\n\n      return pointRotation;\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var pointOptions = me.chart.options.elements.point;\n      var x, y; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n        pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n        rotation: me.getPointRotation(point, index),\n        backgroundColor: me.getPointBackgroundColor(point, index),\n        borderColor: me.getPointBorderColor(point, index),\n        borderWidth: me.getPointBorderWidth(point, index),\n        tension: meta.dataset._model ? meta.dataset._model.tension : 0,\n        steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n        // Tooltip\n        hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n      };\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, point, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (meta.dataset._model.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n        helpers.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          point = points[i];\n          model = point._model;\n          controlPoints = helpers.splineCurve(helpers.previousItem(points, i)._model, model, helpers.nextItem(points, i)._model, meta.dataset._model.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (me.chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n          model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n          model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n          model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      // Point\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n      model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n  scale: {\n    type: 'radialLinear',\n    angleLines: {\n      display: false\n    },\n    gridLines: {\n      circular: true\n    },\n    pointLabels: {\n      display: false\n    },\n    ticks: {\n      beginAtZero: true\n    }\n  },\n  // Boolean - Whether to animate the rotation of the chart\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  startAngle: -0.5 * Math.PI,\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n        meta.data[index].hidden = !meta.data[index].hidden;\n      }\n\n      chart.update();\n    }\n  },\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(item, data) {\n        return data.labels[item.index] + ': ' + item.yLabel;\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.polarArea = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      }); // Apply border and fill style\n\n      var elementOpts = this.chart.options.elements.arc;\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var model = arc._model;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return helpers.options.resolve([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n  scale: {\n    type: 'radialLinear'\n  },\n  elements: {\n    line: {\n      tension: 0 // no bezier in radar\n\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.radar = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data;\n      var custom = line.custom || {};\n      var dataset = me.getDataset();\n      var lineElementOptions = me.chart.options.elements.line;\n      var scale = me.chart.scale; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      }\n\n      helpers.extend(meta.dataset, {\n        // Utility\n        _datasetIndex: me.index,\n        _scale: scale,\n        // Data\n        _children: points,\n        _loop: true,\n        // Model\n        _model: {\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle\n        }\n      });\n      meta.dataset.pivot(); // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      }, me); // Update bezier control points\n\n      me.updateBezierControlPoints();\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointElementOptions = me.chart.options.elements.point;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]); // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      helpers.extend(point, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: reset ? scale.xCenter : pointPosition.x,\n          // value not used in dataset scale, but we want a consistent API between scales\n          y: reset ? scale.yCenter : pointPosition.y,\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n          radius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n          borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n          borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n          pointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n          rotation: custom.rotation ? custom.rotation : helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),\n          // Tooltip\n          hitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n        }\n      });\n      point._model.skip = custom.skip ? custom.skip : isNaN(point._model.x) || isNaN(point._model.y);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var chartArea = this.chart.chartArea;\n      var meta = this.getMeta();\n      helpers.each(meta.data, function (point, index) {\n        var model = point._model;\n        var controlPoints = helpers.splineCurve(helpers.previousItem(meta.data, index, true)._model, model, helpers.nextItem(meta.data, index, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n        model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n        model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n        model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top); // Now pivot the point for animation\n\n        point.pivot();\n      });\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      // Point\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var custom = point.custom || {};\n      var index = point._index;\n      var model = point._model;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      id: 'x-axis-1',\n      // need an ID so datasets can reference the scale\n      type: 'linear',\n      // scatter should not use a category axis\n      position: 'bottom'\n    }],\n    yAxes: [{\n      id: 'y-axis-1',\n      type: 'linear',\n      position: 'left'\n    }]\n  },\n  showLines: false,\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return ''; // doesn't make sense for scatter since data are formatted as a point\n      },\n      label: function label(item) {\n        return '(' + item.xLabel + ', ' + item.yLabel + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  // Scatter charts use line controllers\n  Chart.controllers.scatter = Chart.controllers.line;\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bar = function (context, config) {\n    config.type = 'bar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bubble = function (context, config) {\n    config.type = 'bubble';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Doughnut = function (context, config) {\n    config.type = 'doughnut';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Line = function (context, config) {\n    config.type = 'line';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.PolarArea = function (context, config) {\n    config.type = 'polarArea';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Radar = function (context, config) {\n    config.type = 'radar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Scatter = function (context, config) {\n    config.type = 'scatter';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {\n    filler: {\n      propagate: true\n    }\n  }\n});\n\nvar mappers = {\n  dataset: function dataset(source) {\n    var index = source.fill;\n    var chart = source.chart;\n    var meta = chart.getDatasetMeta(index);\n    var visible = meta && chart.isDatasetVisible(index);\n    var points = visible && meta.dataset._children || [];\n    var length = points.length || 0;\n    return !length ? null : function (point, i) {\n      return i < length && points[i]._view || null;\n    };\n  },\n  boundary: function boundary(source) {\n    var boundary = source.boundary;\n    var x = boundary ? boundary.x : null;\n    var y = boundary ? boundary.y : null;\n    return function (point) {\n      return {\n        x: x === null ? point.x : x,\n        y: y === null ? point.y : y\n      };\n    };\n  }\n}; // @todo if (fill[0] === '#')\n\nfunction decodeFill(el, index, count) {\n  var model = el._model || {};\n  var fill = model.fill;\n  var target;\n\n  if (fill === undefined) {\n    fill = !!model.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  target = parseFloat(fill, 10);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  switch (fill) {\n    // compatibility\n    case 'bottom':\n      return 'start';\n\n    case 'top':\n      return 'end';\n\n    case 'zero':\n      return 'origin';\n    // supported boundaries\n\n    case 'origin':\n    case 'start':\n    case 'end':\n      return fill;\n    // invalid fill values\n\n    default:\n      return false;\n  }\n}\n\nfunction computeBoundary(source) {\n  var model = source.el._model || {};\n  var scale = source.el._scale || {};\n  var fill = source.fill;\n  var target = null;\n  var horizontal;\n\n  if (isFinite(fill)) {\n    return null;\n  } // Backward compatibility: until v3, we still need to support boundary values set on\n  // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n  // controllers might still use it (e.g. the Smith chart).\n\n\n  if (fill === 'start') {\n    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n  } else if (fill === 'end') {\n    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n  } else if (model.scaleZero !== undefined) {\n    target = model.scaleZero;\n  } else if (scale.getBasePosition) {\n    target = scale.getBasePosition();\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (target !== undefined && target !== null) {\n    if (target.x !== undefined && target.y !== undefined) {\n      return target;\n    }\n\n    if (typeof target === 'number' && isFinite(target)) {\n      horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? target : null,\n        y: horizontal ? null : target\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction createMapper(source) {\n  var fill = source.fill;\n  var type = 'dataset';\n\n  if (fill === false) {\n    return null;\n  }\n\n  if (!isFinite(fill)) {\n    type = 'boundary';\n  }\n\n  return mappers[type](source);\n}\n\nfunction isDrawable(point) {\n  return point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n  var i;\n\n  if (!len0 || !len1) {\n    return;\n  } // building first area curve (normal)\n\n\n  ctx.moveTo(curve0[0].x, curve0[0].y);\n\n  for (i = 1; i < len0; ++i) {\n    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n  } // joining the two area curves\n\n\n  ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n  for (i = len1 - 1; i > 0; --i) {\n    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n  }\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n  var count = points.length;\n  var span = view.spanGaps;\n  var curve0 = [];\n  var curve1 = [];\n  var len0 = 0;\n  var len1 = 0;\n  var i, ilen, index, p0, p1, d0, d1;\n  ctx.beginPath();\n\n  for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n    index = i % count;\n    p0 = points[index]._view;\n    p1 = mapper(p0, index, view);\n    d0 = isDrawable(p0);\n    d1 = isDrawable(p1);\n\n    if (d0 && d1) {\n      len0 = curve0.push(p0);\n      len1 = curve1.push(p1);\n    } else if (len0 && len1) {\n      if (!span) {\n        drawArea(ctx, curve0, curve1, len0, len1);\n        len0 = len1 = 0;\n        curve0 = [];\n        curve1 = [];\n      } else {\n        if (d0) {\n          curve0.push(p0);\n        }\n\n        if (d1) {\n          curve1.push(p1);\n        }\n      }\n    }\n  }\n\n  drawArea(ctx, curve0, curve1, len0, len1);\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\n\nmodule.exports = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n    var count = (chart.data.datasets || []).length;\n    var propagate = options.propagate;\n    var sources = [];\n    var meta, i, el, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      el = meta.dataset;\n      source = null;\n\n      if (el && el._model && el instanceof elements.Line) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          fill: decodeFill(el, i, count),\n          chart: chart,\n          el: el\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, propagate);\n      source.boundary = computeBoundary(source);\n      source.mapper = createMapper(source);\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n    var meta = args.meta.$filler;\n\n    if (!meta) {\n      return;\n    }\n\n    var ctx = chart.ctx;\n    var el = meta.el;\n    var view = el._view;\n    var points = el._children || [];\n    var mapper = meta.mapper;\n    var color = view.backgroundColor || defaults.global.defaultColor;\n\n    if (mapper && color && points.length) {\n      helpers.canvas.clipArea(ctx, chart.chartArea);\n      doFill(ctx, points, mapper, view, color, el._loop);\n      helpers.canvas.unclipArea(ctx);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  legend: {\n    display: true,\n    position: 'top',\n    fullWidth: true,\n    reverse: false,\n    weight: 1000,\n    // a callback that will handle\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.datasetIndex;\n      var ci = this.chart;\n      var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n      meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n      ci.update();\n    },\n    onHover: null,\n    labels: {\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n        return helpers.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n          return {\n            text: dataset.label,\n            fillStyle: !helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n            hidden: !chart.isDatasetVisible(i),\n            lineCap: dataset.borderCapStyle,\n            lineDash: dataset.borderDash,\n            lineDashOffset: dataset.borderDashOffset,\n            lineJoin: dataset.borderJoinStyle,\n            lineWidth: dataset.borderWidth,\n            strokeStyle: dataset.borderColor,\n            pointStyle: dataset.pointStyle,\n            // Below is extra data used for toggling the datasets\n            datasetIndex: i\n          };\n        }, this) : [];\n      }\n    }\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n\n    for (var i = 0; i < chart.data.datasets.length; i++) {\n      text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n      if (chart.data.datasets[i].label) {\n        text.push(chart.data.datasets[i].label);\n      }\n\n      text.push('</li>');\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  }\n});\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\n\n\nfunction getBoxWidth(labelOpts, fontSize) {\n  return labelOpts.usePointStyle ? fontSize * Math.SQRT2 : labelOpts.boxWidth;\n}\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Legend = Element.extend({\n  initialize: function initialize(config) {\n    helpers.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n    this.legendHitBoxes = []; // Are we in doughnut mode which has a different data type\n\n    this.doughnutMode = false;\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all legend types.\n  // Any function can be extended by the legend type\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: function buildLabels() {\n    var me = this;\n    var labelOpts = me.options.labels || {};\n    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(function (item) {\n        return labelOpts.filter(item, me.chart.data);\n      });\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  },\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var display = opts.display;\n    var ctx = me.ctx;\n    var globalDefault = defaults.global;\n    var valueOrDefault = helpers.valueOrDefault;\n    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily); // Reset hit boxes\n\n    var hitboxes = me.legendHitBoxes = [];\n    var minSize = me.minSize;\n    var isHorizontal = me.isHorizontal();\n\n    if (isHorizontal) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = display ? 10 : 0;\n    } else {\n      minSize.width = display ? 10 : 0;\n      minSize.height = me.maxHeight; // fill all the height\n    } // Increase sizes here\n\n\n    if (display) {\n      ctx.font = labelFont;\n\n      if (isHorizontal) {\n        // Labels\n        // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n        var lineWidths = me.lineWidths = [0];\n        var totalHeight = me.legendItems.length ? fontSize + labelOpts.padding : 0;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n          if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n            totalHeight += fontSize + labelOpts.padding;\n            lineWidths[lineWidths.length] = me.left;\n          } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: width,\n            height: fontSize\n          };\n          lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n        });\n        minSize.height += totalHeight;\n      } else {\n        var vPadding = labelOpts.padding;\n        var columnWidths = me.columnWidths = [];\n        var totalWidth = labelOpts.padding;\n        var currentColWidth = 0;\n        var currentColHeight = 0;\n        var itemHeight = fontSize + vPadding;\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n          if (currentColHeight + itemHeight > minSize.height) {\n            totalWidth += currentColWidth + labelOpts.padding;\n            columnWidths.push(currentColWidth); // previous column width\n\n            currentColWidth = 0;\n            currentColHeight = 0;\n          } // Get max width\n\n\n          currentColWidth = Math.max(currentColWidth, itemWidth);\n          currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: itemWidth,\n            height: fontSize\n          };\n        });\n        totalWidth += currentColWidth;\n        columnWidths.push(currentColWidth);\n        minSize.width += totalWidth;\n      }\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  // Actually draw the legend on the canvas\n  draw: function draw() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var globalDefault = defaults.global;\n    var lineDefault = globalDefault.elements.line;\n    var legendWidth = me.width;\n    var lineWidths = me.lineWidths;\n\n    if (opts.display) {\n      var ctx = me.ctx;\n      var valueOrDefault = helpers.valueOrDefault;\n      var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n      var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n      var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n      var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n      var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var cursor; // Canvas setup\n\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = fontColor; // for strikethrough effect\n\n      ctx.fillStyle = fontColor; // render in correct colour\n\n      ctx.font = labelFont;\n      var boxWidth = getBoxWidth(labelOpts, fontSize);\n      var hitboxes = me.legendHitBoxes; // current position\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0) {\n          return;\n        } // Set the ctx for the box\n\n\n        ctx.save();\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n        ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n        var isLineWidthZero = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0;\n\n        if (ctx.setLineDash) {\n          // IE 9 and 10 do not support line dash\n          ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n        }\n\n        if (opts.labels && opts.labels.usePointStyle) {\n          // Recalculate x and y for drawPoint() because its expecting\n          // x and y to be center of figure (instead of top left)\n          var radius = fontSize * Math.SQRT2 / 2;\n          var offSet = radius / Math.SQRT2;\n          var centerX = x + offSet;\n          var centerY = y + offSet; // Draw pointStyle as legend symbol\n\n          helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n        } else {\n          // Draw box as legend symbol\n          if (!isLineWidthZero) {\n            ctx.strokeRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.fillRect(x, y, boxWidth, fontSize);\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem, textWidth) {\n        var halfFontSize = fontSize / 2;\n        var xLeft = boxWidth + halfFontSize + x;\n        var yMiddle = y + halfFontSize;\n        ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n        if (legendItem.hidden) {\n          // Strikethrough the text if hidden\n          ctx.beginPath();\n          ctx.lineWidth = 2;\n          ctx.moveTo(xLeft, yMiddle);\n          ctx.lineTo(xLeft + textWidth, yMiddle);\n          ctx.stroke();\n        }\n      }; // Horizontal\n\n\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        cursor = {\n          x: me.left + (legendWidth - lineWidths[0]) / 2,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + labelOpts.padding,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      }\n\n      var itemHeight = fontSize + labelOpts.padding;\n      helpers.each(me.legendItems, function (legendItem, i) {\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var width = boxWidth + fontSize / 2 + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n\n        if (isHorizontal) {\n          if (x + width >= legendWidth) {\n            y = cursor.y += itemHeight;\n            cursor.line++;\n            x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2;\n          }\n        } else if (y + itemHeight > me.bottom) {\n          x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n          y = cursor.y = me.top + labelOpts.padding;\n          cursor.line++;\n        }\n\n        drawLegendBox(x, y, legendItem);\n        hitboxes[i].left = x;\n        hitboxes[i].top = y; // Fill the actual label\n\n        fillText(x, y, legendItem, textWidth);\n\n        if (isHorizontal) {\n          cursor.x += width + labelOpts.padding;\n        } else {\n          cursor.y += itemHeight;\n        }\n      });\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @return {Boolean} true if a change occured\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var opts = me.options;\n    var type = e.type === 'mouseup' ? 'click' : e.type;\n    var changed = false;\n\n    if (type === 'mousemove') {\n      if (!opts.onHover) {\n        return;\n      }\n    } else if (type === 'click') {\n      if (!opts.onClick) {\n        return;\n      }\n    } else {\n      return;\n    } // Chart event already has relative position in it\n\n\n    var x = e.x;\n    var y = e.y;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      // See if we are touching one of the dataset boxes\n      var lh = me.legendHitBoxes;\n\n      for (var i = 0; i < lh.length; ++i) {\n        var hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          // Touching an element\n          if (type === 'click') {\n            // use e.native for backwards compatibility\n            opts.onClick.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          } else if (type === 'mousemove') {\n            // use e.native for backwards compatibility\n            opts.onHover.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          }\n        }\n      }\n    }\n\n    return changed;\n  }\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n  var legend = new Legend({\n    ctx: chart.ctx,\n    options: legendOpts,\n    chart: chart\n  });\n  layouts.configure(chart, legend, legendOpts);\n  layouts.addBox(chart, legend);\n  chart.legend = legend;\n}\n\nmodule.exports = {\n  id: 'legend',\n\n  /**\n   * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n   * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Legend,\n  beforeInit: function beforeInit(chart) {\n    var legendOpts = chart.options.legend;\n\n    if (legendOpts) {\n      createNewLegendAndAttach(chart, legendOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var legendOpts = chart.options.legend;\n    var legend = chart.legend;\n\n    if (legendOpts) {\n      helpers.mergeIf(legendOpts, defaults.global.legend);\n\n      if (legend) {\n        layouts.configure(chart, legend, legendOpts);\n        legend.options = legendOpts;\n      } else {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    } else if (legend) {\n      layouts.removeBox(chart, legend);\n      delete chart.legend;\n    }\n  },\n  afterEvent: function afterEvent(chart, e) {\n    var legend = chart.legend;\n\n    if (legend) {\n      legend.handleEvent(e);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  title: {\n    display: false,\n    fontStyle: 'bold',\n    fullWidth: true,\n    lineHeight: 1.2,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000 // by default greater than legend (1000) to be above\n\n  }\n});\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Title = Element.extend({\n  initialize: function initialize(config) {\n    var me = this;\n    helpers.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n    me.legendHitBoxes = [];\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: noop,\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var display = opts.display;\n    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n    var minSize = me.minSize;\n    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n    var textSize = display ? lineCount * lineHeight + opts.padding * 2 : 0;\n\n    if (me.isHorizontal()) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = textSize;\n    } else {\n      minSize.width = textSize;\n      minSize.height = me.maxHeight; // fill all the height\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    var pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  },\n  // Actually draw the title block on the canvas\n  draw: function draw() {\n    var me = this;\n    var ctx = me.ctx;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var globalDefaults = defaults.global;\n\n    if (opts.display) {\n      var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n      var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n      var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n      var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n      var offset = lineHeight / 2 + opts.padding;\n      var rotation = 0;\n      var top = me.top;\n      var left = me.left;\n      var bottom = me.bottom;\n      var right = me.right;\n      var maxWidth, titleX, titleY;\n      ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\n      ctx.font = titleFont; // Horizontal\n\n      if (me.isHorizontal()) {\n        titleX = left + (right - left) / 2; // midpoint of the width\n\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        titleX = opts.position === 'left' ? left + offset : right - offset;\n        titleY = top + (bottom - top) / 2;\n        maxWidth = bottom - top;\n        rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n      }\n\n      ctx.save();\n      ctx.translate(titleX, titleY);\n      ctx.rotate(rotation);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      var text = opts.text;\n\n      if (helpers.isArray(text)) {\n        var y = 0;\n\n        for (var i = 0; i < text.length; ++i) {\n          ctx.fillText(text[i], 0, y, maxWidth);\n          y += lineHeight;\n        }\n      } else {\n        ctx.fillText(text, 0, 0, maxWidth);\n      }\n\n      ctx.restore();\n    }\n  }\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nmodule.exports = {\n  id: 'title',\n\n  /**\n   * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n   * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Title,\n  beforeInit: function beforeInit(chart) {\n    var titleOpts = chart.options.title;\n\n    if (titleOpts) {\n      createNewTitleBlockAndAttach(chart, titleOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var titleOpts = chart.options.title;\n    var titleBlock = chart.titleBlock;\n\n    if (titleOpts) {\n      helpers.mergeIf(titleOpts, defaults.global.title);\n\n      if (titleBlock) {\n        layouts.configure(chart, titleBlock, titleOpts);\n        titleBlock.options = titleOpts;\n      } else {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    } else if (titleBlock) {\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    }\n  }\n};","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\n\n\nvar find = createFind(findIndex);\nmodule.exports = find;","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\n\n\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n\n      predicate = function predicate(key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeMax = Math.max;\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\n\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n\n  if (!length) {\n    return -1;\n  }\n\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while (fromRight ? index-- : ++index < length) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = baseFindIndex;","var toFinite = require('./toFinite');\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\n\n\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n  return result === result ? remainder ? result - remainder : result : 0;\n}\n\nmodule.exports = toInteger;","var toNumber = require('./toNumber');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\n\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n\n  value = toNumber(value);\n\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = value < 0 ? -1 : 1;\n    return sign * MAX_INTEGER;\n  }\n\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar NAN = 0 / 0;\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = toNumber;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;"],"sourceRoot":""}