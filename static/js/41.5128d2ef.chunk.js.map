{"version":3,"sources":["components/modals/confirmModal.js","components/alerts/errorAlert.js","containers/pages/Role/RoleUpdate.js"],"names":["ConfirmModal","_React$Component","Object","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this$props","props","isOpenModal","className","toggleModal","headerTitle","bodyContent","sizeModal","textBtnYes","textBtnNo","backdropModal","selectedYes","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_6__","isOpen","size","backdrop","toggle","color","onClick","React","Component","ErrorAlert","responseData","msgErrorGetAPI","msgError401GetAPI","msgRedirectToLogin","msgError","status","href","_renderNumber","RoleUpdate","_this","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","handleSubmitForm","event","preventDefault","handleValidateForm","state","formData","handleParam","addRole","roleName","strQuery","getSessionStorage","commonConstant","ROLE_KEY_EDIT","editRole","handleResetForm","setState","roleNameInput","focus","updateRoleName","e","target","newValue","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","applyAuthorization","roleEdit","nextProps","t","resultAddRole","resultEditRole","success","toastr","role","roleAddTitle","common","addDataSuccess","data","Code","ROLE_ERROR_MSG_EXISTED","error","roleAddExistErrorMsg","addDataFail","setSessionStorage","trim","match","result","params","id","parseInt","classAnimated","titleRoleUpdate","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","react_loading_overlay__WEBPACK_IMPORTED_MODULE_14___default","active","isLoading","spinner","text","processingSpinner","reactstrap__WEBPACK_IMPORTED_MODULE_11__","onSubmit","htmlFor","roleNameField","type","invalid","innerRef","self","onChange","roleNameFieldErrorMsg","btnSubmit","btnReset","console","log","roleEditTitle","renderMainContent","mapDispatchToProps","translate","connect","addRoleReducer","editRoleReducer"],"mappings":"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","file":"static/js/41.5128d2ef.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  Button, Modal, ModalBody, ModalFooter, ModalHeader,\r\n} from \"reactstrap\";\r\n\r\nexport class ConfirmModal extends React.Component {\r\n  render() {\r\n    const {\r\n      isOpenModal, className, toggleModal,\r\n      headerTitle, bodyContent, sizeModal,\r\n      textBtnYes, textBtnNo, backdropModal,\r\n      selectedYes\r\n    } = this.props;\r\n    return (\r\n      <Modal isOpen={isOpenModal} size={sizeModal} backdrop={backdropModal}\r\n        className={'modal-' + className} toggle={toggleModal}>\r\n        <ModalHeader toggle={toggleModal}>{headerTitle}</ModalHeader>\r\n        <ModalBody>{bodyContent}</ModalBody>\r\n        <ModalFooter>\r\n          <Button className=\"label-button-confirm\" color={className} onClick={selectedYes}>{textBtnYes}</Button>{' '}\r\n          <Button className=\"label-button-confirm\" color=\"secondary\" onClick={toggleModal}>{textBtnNo}</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\nexport default ConfirmModal;\r\n","import React from 'react';\r\n\r\nexport class ErrorAlert extends React.Component {\r\n    render() {\r\n        const { responseData, msgErrorGetAPI, msgError401GetAPI, msgRedirectToLogin } = this.props;\r\n        const clsError = 'alert alert-danger';\r\n        let msgError = <div className={clsError}>{msgErrorGetAPI}</div>;\r\n        if (responseData && responseData.status === 401) {\r\n            msgError = <div>\r\n                <div className={clsError}>\r\n                    {msgErrorGetAPI}\r\n                    <br />\r\n                    {msgError401GetAPI}\r\n                    <br /><a className='alert-link' href='/login'>{msgRedirectToLogin}</a>\r\n                </div>\r\n            </div>;\r\n        }\r\n        return msgError;\r\n    }\r\n}\r\nexport default ErrorAlert;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactTable from \"react-table\";\r\nimport { translate } from 'react-i18next';\r\nimport key from '../../../i18n/key';\r\nimport { Button, Label, Card, CardBody, CardFooter, CardHeader, Col, Form, FormGroup, FormFeedback, Input, Row, } from \"reactstrap\";\r\nimport { AppSwitch } from '@coreui/react';\r\nimport { RingLoader } from 'react-spinners';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport { ConfirmModal } from '../../../components/modals/confirmModal';\r\nimport { ErrorAlert } from '../../../components/alerts/errorAlert';\r\nimport { addRole, editRole } from '../../../actions/role';\r\nimport { commonConstant } from '../../../contants/common';\r\nimport { isNullOrEmptyObject, removeItemFromItems } from '../../../utilities/validate';\r\nimport { getSessionStorage, setSessionStorage } from '../../../utilities/storage';\r\nimport { applyAuthorization } from '../../../services';\r\n\r\nvar _renderNumber = 0;\r\nclass RoleUpdate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formData: {\r\n                roleName: null,\r\n            },\r\n        };\r\n        //Add token to header\r\n        applyAuthorization();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.roleNameInput.focus();\r\n        const roleEdit = getSessionStorage(commonConstant.ROLE_KEY_EDIT);\r\n        if (roleEdit && this.handleParam() !== 'add') {\r\n            this.setState({\r\n                formData: {\r\n                    ...this.state.formData,\r\n                    roleName: roleEdit,\r\n                }\r\n            });\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        let { t, resultAddRole, resultEditRole } = nextProps;\r\n        if (this.handleParam() === 'add') {\r\n            if (!resultAddRole || !resultAddRole.responseData) return;\r\n            if (resultAddRole.responseData.success) {\r\n                toastr.success(t(key.role.roleAddTitle), t(key.common.addDataSuccess));\r\n                this.setState({\r\n                    formData: {\r\n                        roleName: null,\r\n                    }\r\n                });\r\n            }\r\n            else if (resultAddRole.responseData.data &&\r\n                resultAddRole.responseData.data.Code === commonConstant.ROLE_ERROR_MSG_EXISTED) {\r\n                toastr.error(t(key.role.roleAddTitle), t(key.role.roleAddExistErrorMsg));\r\n            }\r\n            else {\r\n                toastr.error(t(key.role.roleAddTitle), t(key.common.addDataFail));\r\n            }\r\n        } else {\r\n            if (!resultEditRole || !resultEditRole.responseData) return;\r\n            if (resultEditRole.responseData.success) {\r\n                setSessionStorage(commonConstant.ROLE_KEY_EDIT, this.state.formData.roleName);\r\n                toastr.success(t(key.role.roleAddTitle), t(key.common.addDataSuccess));\r\n            }\r\n            else if (resultEditRole.responseData.data &&\r\n                resultEditRole.responseData.data.Code === commonConstant.ROLE_ERROR_MSG_EXISTED) {\r\n                toastr.error(t(key.role.roleAddTitle), t(key.role.roleAddExistErrorMsg));\r\n            }\r\n            else {\r\n                toastr.error(t(key.role.roleAddTitle), t(key.common.addDataFail));\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSubmitForm = (event) => {\r\n        if (!event) return;\r\n        event.preventDefault();\r\n        if (!this.handleValidateForm(this.state.formData)) return;\r\n        //Process login \r\n        const id = this.handleParam();\r\n        if (id === 'add') {\r\n            this.props.addRole(this.state.formData.roleName);\r\n        }\r\n        else {\r\n            var strQuery = '?currRoleName=' + getSessionStorage(commonConstant.ROLE_KEY_EDIT)\r\n                + '&nameChanged=' + this.state.formData.roleName;\r\n            this.props.editRole(strQuery);\r\n        }\r\n    }\r\n    handleResetForm = () => {\r\n        this.setState({\r\n            formData: {\r\n                roleName: null,\r\n            }\r\n        });\r\n        this.roleNameInput.focus();\r\n    }\r\n    handleValidateForm(formData) {\r\n        if (!formData) return false;\r\n        const { roleName } = formData;\r\n        if (!roleName || roleName.trim() === '') {\r\n            this.setState({\r\n                formData: {\r\n                    ...this.state.formData,\r\n                    roleName: roleName == null ? '' : roleName,\r\n                }\r\n            });\r\n            this.roleNameInput.focus();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    updateRoleName = (e) => {\r\n        if (!e || !e.target) return;\r\n        const newValue = e.target.value;\r\n        this.setState({\r\n            formData: {\r\n                ...this.state.formData,\r\n                roleName: newValue,\r\n            }\r\n        });\r\n    }\r\n    handleParam() {\r\n        const { match } = this.props;\r\n        let result = 'add';\r\n        if (match && match.params && match.params.id) {\r\n            if (match.params.id > 0) {\r\n                result = parseInt(match.params.id);\r\n            } else {\r\n                result = match.params.id;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    renderMainContent(classAnimated, titleRoleUpdate, formData) {\r\n        const { t, resultAddRole, resultEditRole } = this.props;\r\n        return (\r\n            <div className={classAnimated}>\r\n                <LoadingOverlay active={resultAddRole.isLoading || resultEditRole.isLoading} spinner text={t(key.common.processingSpinner)} className=\"overlayFullScreen\" />\r\n                <Form onSubmit={this.handleSubmitForm}>\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <strong>{titleRoleUpdate}</strong>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"roleName\">{t(key.role.roleNameField)}</Label>\r\n                                <Input type=\"text\" invalid={formData.roleName === '' ? true : null} id=\"roleName\"\r\n                                    innerRef={(self) => { this.roleNameInput = self; }}\r\n                                    value={formData.roleName == null ? '' : formData.roleName} onChange={this.updateRoleName} />\r\n                                <FormFeedback>{t(key.role.roleNameFieldErrorMsg)}</FormFeedback>\r\n                            </FormGroup>\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            <Button type=\"submit\" size=\"sm\" color=\"primary\">\r\n                                <i className=\"fa fa-dot-circle-o\"></i> {t(key.common.btnSubmit)}\r\n                            </Button>{' '}\r\n                            <Button type=\"reset\" size=\"sm\" color=\"danger\" onClick={this.handleResetForm}>\r\n                                <i className=\"fa fa-ban\"></i> {t(key.common.btnReset)}\r\n                            </Button>\r\n                        </CardFooter>\r\n                    </Card>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        console.log('_renderNumber', _renderNumber++);\r\n        const { t } = this.props;\r\n        const classAnimated = 'animated fadeIn';\r\n        const id = this.handleParam();\r\n        let titleRoleUpdate = t(key.role.roleEditTitle);\r\n        if (id === 'add') {\r\n            titleRoleUpdate = t(key.role.roleAddTitle);\r\n        } else {\r\n            //call api getbyid\r\n        }\r\n        return this.renderMainContent(classAnimated, titleRoleUpdate, this.state.formData);\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    resultAddRole: state.addRoleReducer,\r\n    resultEditRole: state.editRoleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    addRole,\r\n    editRole,\r\n};\r\n\r\nexport default translate()(connect(mapStateToProps, mapDispatchToProps)(RoleUpdate));"],"sourceRoot":""}