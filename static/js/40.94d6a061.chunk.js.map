{"version":3,"sources":["i18n/translationKeys.js","components/modals/confirmModal.js","utilities/validate.js","containers/pages/Role/Role.js"],"names":["__webpack_exports__","translations","languageName","selectLanguage","button","btnOk","btnCancel","message","errorGetAllAPI","noDataFound","infoTitleConfirmModal","switchStatusConfirmModal","switchStatusInfo","switchStatusSuccessInfo","switchStatusErrorInfo","deleteConfirmModal","deleteInfo","deleteSuccessInfo","deleteErrorInfo","usersList","rolesList","active","inActive","deleted","pending","ConfirmModal","_React$Component","Object","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this$props","props","isOpenModal","className","toggleModal","headerTitle","bodyContent","sizeModal","textBtnYes","textBtnNo","backdropModal","selectedYes","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_6__","isOpen","size","backdrop","toggle","color","onClick","React","Component","isNullOrEmptyObject","obj","JSON","stringify","_handleItem","_currentAtion","_renderNumber","Role","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","openModalChangeStatus","item","handleToggleModal","commonConstant","CHANGE_STATUS","handleChangeStatus","Id","changeStatusRole","openModalDelete","DELETE","handleDelete","RoleName","deleteRole","nameFn","isSelected","length","undefined","setState","isShowStatusConfirmModal","state","isShowDeleteConfirmModal","handleEdit","console","log","getAllRoles","nextProps","t","roles","deleteItem","changeStatus","isLoading","responseData","data","currentList","isError","toastr","error","success","items","index","indexOf","splice","removeItemFromItems","classAnimated","isLoadingDelete","_this2","columns","keys","map","id","Header","headerClassName","accessor","show","minWidth","unshift","Cell","row","react_default","push","titleStatus","original","Status","colorStatus","reactstrap_es","width","Fragment","propsOfTable","defaultPageSize","LoadingOverlay_default","spinner","text","xs","lg","react_table_es","confirmModal","react_spinners","sizeUnit","loading","renderMainContent","mapDispatchToProps","translate","connect","getAllRolesReducer","changeStatusRoleReducer","deleteRoleReducer"],"mappings":"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","file":"static/js/40.94d6a061.chunk.js","sourcesContent":["export default {\r\n    translations: {\r\n        languageName: 'translations:languageName',\r\n        selectLanguage: 'translations:selectLanguage',\r\n    },\r\n    button: {\r\n        btnOk: 'button:btnOk',\r\n        btnCancel: 'button:btnCancel',\r\n    },\r\n    message: {\r\n        //API\r\n        errorGetAllAPI: 'message:errorGetAllAPI',\r\n        noDataFound: 'message:noDataFound',\r\n\r\n        //MODAL CONFIRM\r\n        infoTitleConfirmModal: 'message:infoTitleConfirmModal',\r\n\r\n        switchStatusConfirmModal: 'message:switchStatusConfirmModal',\r\n        switchStatusInfo: 'message:switchStatusInfo',\r\n        switchStatusSuccessInfo: 'message:switchStatusSuccessInfo',\r\n        switchStatusErrorInfo: 'message:switchStatusErrorInfo',\r\n\r\n        deleteConfirmModal: 'message:deleteConfirmModal',\r\n        deleteInfo: 'message:deleteInfo',\r\n        deleteSuccessInfo: 'message:deleteSuccessInfo',\r\n        deleteErrorInfo: 'message:deleteErrorInfo',\r\n\r\n        //USERS\r\n        usersList: 'message:usersList',\r\n\r\n        //ROLES\r\n        rolesList: 'message:rolesList',\r\n\r\n        //STATUS\r\n        active: 'message:active',\r\n        inActive: 'message:inActive',\r\n        deleted: 'message:deleted',\r\n        pending: 'message:pending',\r\n    }\r\n};","import React from 'react';\r\nimport {\r\n  Button, Modal, ModalBody, ModalFooter, ModalHeader,\r\n} from \"reactstrap\";\r\n\r\nexport class ConfirmModal extends React.Component {\r\n  render() {\r\n    const {\r\n      isOpenModal, className, toggleModal,\r\n      headerTitle, bodyContent, sizeModal,\r\n      textBtnYes, textBtnNo, backdropModal,\r\n      selectedYes\r\n    } = this.props;\r\n    return (\r\n      <Modal isOpen={isOpenModal} size={sizeModal} backdrop={backdropModal}\r\n        className={'modal-' + className} toggle={toggleModal}>\r\n        <ModalHeader toggle={toggleModal}>{headerTitle}</ModalHeader>\r\n        <ModalBody>{bodyContent}</ModalBody>\r\n        <ModalFooter>\r\n          <Button className=\"label-button-confirm\" color={className} onClick={selectedYes}>{textBtnYes}</Button>{' '}\r\n          <Button className=\"label-button-confirm\" color=\"secondary\" onClick={toggleModal}>{textBtnNo}</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\nexport default ConfirmModal;\r\n","//All function return value is boolean type\r\nexport function isNullOrEmptyObject(obj) {\r\n    if (obj) return JSON.stringify(obj) === JSON.stringify({});\r\n    else return true;\r\n}\r\n\r\nexport function removeItemFromItems(item, items) {\r\n    if (items && items.length > 0 && item) {\r\n        const index = items.indexOf(item);\r\n        if (index > -1) {\r\n            items.splice(index, 1);\r\n        }\r\n    }\r\n    return items;\r\n}","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport ReactTable from \"react-table\";\r\nimport { translate } from 'react-i18next';\r\nimport key from '../../../i18n/translationKeys';\r\nimport { Card, CardBody, CardHeader, Col, Row, Badge } from \"reactstrap\";\r\nimport { RingLoader } from 'react-spinners';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport { ConfirmModal } from '../../../components/modals/confirmModal';\r\nimport { getAllRoles, changeStatusRole, deleteRole } from '../../../actions/role';\r\nimport { commonConstant } from '../../../contants/common';\r\nimport { isNullOrEmptyObject, removeItemFromItems } from '../../../utilities/validate';\r\n\r\nvar _handleItem = null;\r\nvar _currentAtion = null;\r\nvar _renderNumber = 0;\r\nclass Role extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowStatusConfirmModal: false,\r\n            isShowDeleteConfirmModal: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAllRoles();\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        let { t, roles, deleteItem, changeStatus } = nextProps;\r\n        if (deleteItem && deleteItem.isLoading) {\r\n            _currentAtion = commonConstant.DELETE;\r\n            return;\r\n        }\r\n        if (changeStatus && changeStatus.isLoading) {\r\n            _currentAtion = commonConstant.CHANGE_STATUS;\r\n            return;\r\n        }\r\n        if (roles.responseData && roles.responseData.data && roles.responseData.data.length > 0) {\r\n            let currentList = roles.responseData.data;\r\n            if (_currentAtion === commonConstant.DELETE && deleteItem && !deleteItem.isLoading && !isNullOrEmptyObject(deleteItem.responseData)) {\r\n                roles.responseData.data = removeItemFromItems(_handleItem, currentList);\r\n                deleteItem.isError ? toastr.error(t(key.message.deleteInfo), t(key.message.deleteErrorInfo)) :\r\n                    toastr.success(t(key.message.deleteInfo), t(key.message.deleteSuccessInfo));\r\n            }\r\n\r\n            else if (_currentAtion === commonConstant.CHANGE_STATUS && changeStatus && !isNullOrEmptyObject(changeStatus.responseData) && !changeStatus.isLoading) {\r\n                changeStatus.isError ? toastr.error(t(key.message.switchStatusInfo), t(key.message.switchStatusErrorInfo)) :\r\n                    toastr.success(t(key.message.switchStatusInfo), t(key.message.switchStatusSuccessInfo));\r\n            }\r\n        }\r\n    }\r\n    openModalChangeStatus = (item) => {\r\n        _handleItem = item;\r\n        this.handleToggleModal(commonConstant.CHANGE_STATUS, null);\r\n    }\r\n    handleChangeStatus = () => {\r\n        if (_handleItem && _handleItem.Id) {\r\n            this.props.changeStatusRole(_handleItem.Id);\r\n        }\r\n    }\r\n    openModalDelete = (item) => {\r\n        _handleItem = item;\r\n        this.handleToggleModal(commonConstant.DELETE, null);\r\n    }\r\n    handleDelete = () => {\r\n        if (_handleItem && _handleItem.RoleName) {\r\n            this.props.deleteRole(_handleItem.RoleName);\r\n        }\r\n    }\r\n    handleToggleModal = (nameFn, isSelected = false) => {\r\n        if (isSelected && nameFn === commonConstant.CHANGE_STATUS) {\r\n            this.handleChangeStatus();\r\n        }\r\n        else if (isSelected && nameFn === commonConstant.DELETE) {\r\n            this.handleDelete();\r\n        }\r\n        this.setState({\r\n            isShowStatusConfirmModal: nameFn === commonConstant.CHANGE_STATUS ? !this.state.isShowStatusConfirmModal : false,\r\n            isShowDeleteConfirmModal: nameFn === commonConstant.DELETE ? !this.state.isShowDeleteConfirmModal : false,\r\n        });\r\n    }\r\n    handleEdit = (item) => {\r\n        console.log('handleEdit', item);\r\n    }\r\n    renderMainContent(data, t, classAnimated, isLoadingDelete) {\r\n        let columns = Object.keys(data[0]).map((key, id) => {\r\n            return {\r\n                Header: key,\r\n                headerClassName: 'header-table',\r\n                accessor: key,\r\n                show: (key === 'Status') ? false : true,\r\n                minWidth: id === 0 ? 150 : 100,\r\n                className: id === 0 ? 'text-center' : '',\r\n            };\r\n        });\r\n        columns.unshift({\r\n            Header: '#',\r\n            headerClassName: 'header-table',\r\n            accessor: 'identifierNumber',\r\n            Cell: (row) => { return <span>{row.index + 1}</span> },\r\n            minWidth: 20,\r\n            className: 'text-center',\r\n        });\r\n        columns.push({\r\n            Header: 'Status',\r\n            headerClassName: 'header-table',\r\n            accessor: 'status',\r\n            Cell: row => {\r\n                const titleStatus = (row.original.Status === 'Active' || row.original.Status === 1) ? key.message.active :\r\n                    (row.original.Status === 'InActive' || row.original.Status === 0) ? key.message.inActive : key.message.deleted;\r\n                const colorStatus = (row.original.Status === 'Active' || row.original.Status === 1) ? 'success' :\r\n                    (row.original.Status === 'InActive' || row.original.Status === 0) ? 'danger' : 'secondary';\r\n                return (\r\n                    <Badge className=\"label-status\" onClick={() => this.openModalChangeStatus(row.original)}\r\n                        color={colorStatus}>\r\n                        {t(titleStatus)}\r\n                    </Badge>\r\n                )\r\n            },\r\n            width: 80,\r\n            className: 'text-center handle-pointer',\r\n        });\r\n        columns.push({\r\n            Header: 'Update',\r\n            headerClassName: 'header-table',\r\n            accessor: 'update',\r\n            Cell: row => (\r\n                <>\r\n                    <i onClick={() => this.handleEdit(row.original)} className=\"handle-pointer fa fa-edit fa-lg\"></i> &nbsp;\r\n        <i onClick={() => this.openModalDelete(row.original)} className=\"handle-pointer fa fa-trash-o fa-lg\"></i>\r\n                </>\r\n            ),\r\n            width: 80,\r\n            className: 'text-center',\r\n        });\r\n        const propsOfTable = {\r\n            data: data,\r\n            columns: columns,\r\n            defaultPageSize: 10,\r\n        }\r\n        return (\r\n\r\n            <div className={classAnimated}>\r\n                <LoadingOverlay active={isLoadingDelete} spinner text='Processing...' className=\"overlayFullScreen\" />\r\n                <Row>\r\n                    <Col xs=\"12\" lg=\"12\">\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <i className=\"fa fa-roles text-primary\" /> {t(key.message.rolesList)}\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <ReactTable {...propsOfTable} />\r\n                                <ConfirmModal isOpenModal={this.state.isShowStatusConfirmModal}\r\n                                    toggleModal={() => this.handleToggleModal(commonConstant.CHANGE_STATUS, false)}\r\n                                    selectedYes={() => this.handleToggleModal(commonConstant.CHANGE_STATUS, true)}\r\n                                    className=\"warning\" sizeModal=\"md\" backdropModal=\"static\"\r\n                                    headerTitle={t(key.message.infoTitleConfirmModal)}\r\n                                    bodyContent={t(key.message.switchStatusConfirmModal)}\r\n                                    textBtnYes={t(key.button.btnOk)}\r\n                                    textBtnNo={t(key.button.btnCancel)}\r\n                                />\r\n                                <ConfirmModal isOpenModal={this.state.isShowDeleteConfirmModal}\r\n                                    toggleModal={() => this.handleToggleModal(commonConstant.DELETE, false)}\r\n                                    selectedYes={() => this.handleToggleModal(commonConstant.DELETE, true)}\r\n                                    className=\"danger\" sizeModal=\"md\" backdropModal=\"static\"\r\n                                    headerTitle={t(key.message.infoTitleConfirmModal)}\r\n                                    bodyContent={t(key.message.deleteConfirmModal)}\r\n                                    textBtnYes={t(key.button.btnOk)}\r\n                                    textBtnNo={t(key.button.btnCancel)}\r\n                                />\r\n                                {/* Option className modal: primary, info, danger, warning,success, \r\n                  Size modal: sm, md, lg */}\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n    render() {\r\n        console.log('_renderNumber', _renderNumber++);\r\n        const { t, changeStatus, deleteItem, roles } = this.props;\r\n\r\n        const classAnimated = 'animated fadeIn';\r\n        if (!roles) return;\r\n        if (roles.isLoading) {\r\n            return <RingLoader sizeUnit={\"px\"} size={100} color={'#86E7D4'} loading={roles.isLoading} />\r\n        } else if (roles.isError) {\r\n            return <div className={classAnimated}>{t(key.message.errorGetAllAPI)}</div>;\r\n        } else {\r\n            if (roles.responseData && roles.responseData.data && roles.responseData.data.length > 0) {\r\n                return this.renderMainContent(roles.responseData.data, t, classAnimated, deleteItem.isLoading);\r\n            } else {\r\n                return <div className={classAnimated}><Row><Col xs=\"12\" lg=\"12\">{t(key.message.noDataFound)}</Col></Row></div>;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    roles: state.getAllRolesReducer,\r\n    changeStatus: state.changeStatusRoleReducer,\r\n    deleteItem: state.deleteRoleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getAllRoles,\r\n    changeStatusRole,\r\n    deleteRole,\r\n};\r\n\r\nexport default translate()(connect(mapStateToProps, mapDispatchToProps)(Role));"],"sourceRoot":""}