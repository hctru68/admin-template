{"version":3,"sources":["components/modals/confirmModal.js","components/alerts/errorAlert.js","containers/pages/Role/Role.js"],"names":["ConfirmModal","_React$Component","Object","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_Docs_project_test_admin_coreui_admin_deploy_admin_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this$props","props","isOpenModal","className","toggleModal","headerTitle","bodyContent","sizeModal","textBtnYes","textBtnNo","backdropModal","selectedYes","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_6__","isOpen","size","backdrop","toggle","color","onClick","React","Component","ErrorAlert","responseData","msgErrorGetAPI","msgError401GetAPI","msgRedirectToLogin","msgError","status","href","_handleItem","_currentAtion","Role","_this","call","openModalDelete","item","handleToggleModal","commonConstant","DELETE","handleDelete","RoleName","deleteRole","nameFn","isSelected","length","undefined","CHANGE_STATUS","handleChangeStatus","setState","isShowStatusConfirmModal","state","isShowDeleteConfirmModal","handleEdit","setSessionStorage","ROLE_KEY_EDIT","history","push","Id","handleSwitchFilter","FILTER_ROLE","isEnableFilter","getSessionStorage","applyAuthorization","getAllRoles","nextProps","t","roles","deleteItem","isLoading","data","currentList","isNullOrEmptyObject","isError","toastr","error","common","deleteInfo","deleteErrorInfo","Result","removeItemFromItems","success","deleteSuccessInfo","classAnimated","isLoadingDelete","_this2","columns","keys","map","id","Header","headerClassName","accessor","show","minWidth","unshift","Cell","row","index","Fragment","original","width","propsOfTable","defaultPageSize","filterable","react_loading_overlay__WEBPACK_IMPORTED_MODULE_14___default","active","spinner","text","processingSpinner","reactstrap__WEBPACK_IMPORTED_MODULE_11__","xs","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","to","role","rolesList","title","filterDesc","filterTitle","_coreui_react__WEBPACK_IMPORTED_MODULE_12__","variant","onChange","checked","react_table__WEBPACK_IMPORTED_MODULE_8__","_components_modals_confirmModal__WEBPACK_IMPORTED_MODULE_16__","infoTitleConfirmModal","switchStatusConfirmModal","btnOk","btnCancel","deleteConfirmModal","react_spinners__WEBPACK_IMPORTED_MODULE_13__","sizeUnit","loading","_components_alerts_errorAlert__WEBPACK_IMPORTED_MODULE_17__","errorGetAllAPI","error401GetAPI","redirectToLogin","renderMainContent","lg","noDataFound","mapDispatchToProps","changeStatusRole","translate","connect","getAllRolesReducer","changeStatus","changeStatusRoleReducer","deleteRoleReducer"],"mappings":"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","file":"static/js/40.6245a1fd.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  Button, Modal, ModalBody, ModalFooter, ModalHeader,\r\n} from \"reactstrap\";\r\n\r\nexport class ConfirmModal extends React.Component {\r\n  render() {\r\n    const {\r\n      isOpenModal, className, toggleModal,\r\n      headerTitle, bodyContent, sizeModal,\r\n      textBtnYes, textBtnNo, backdropModal,\r\n      selectedYes\r\n    } = this.props;\r\n    return (\r\n      <Modal isOpen={isOpenModal} size={sizeModal} backdrop={backdropModal}\r\n        className={'modal-' + className} toggle={toggleModal}>\r\n        <ModalHeader toggle={toggleModal}>{headerTitle}</ModalHeader>\r\n        <ModalBody>{bodyContent}</ModalBody>\r\n        <ModalFooter>\r\n          <Button className=\"label-button-confirm\" color={className} onClick={selectedYes}>{textBtnYes}</Button>{' '}\r\n          <Button className=\"label-button-confirm\" color=\"secondary\" onClick={toggleModal}>{textBtnNo}</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\nexport default ConfirmModal;\r\n","import React from 'react';\r\n\r\nexport class ErrorAlert extends React.Component {\r\n    render() {\r\n        const { responseData, msgErrorGetAPI, msgError401GetAPI, msgRedirectToLogin } = this.props;\r\n        const clsError = 'alert alert-danger';\r\n        let msgError = <div className={clsError}>{msgErrorGetAPI}</div>;\r\n        if (responseData && responseData.status === 401) {\r\n            msgError = <div>\r\n                <div className={clsError}>\r\n                    {msgErrorGetAPI}\r\n                    <br />\r\n                    {msgError401GetAPI}\r\n                    <br /><a className='alert-link' href='/login'>{msgRedirectToLogin}</a>\r\n                </div>\r\n            </div>;\r\n        }\r\n        return msgError;\r\n    }\r\n}\r\nexport default ErrorAlert;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactTable from \"react-table\";\r\nimport { translate } from 'react-i18next';\r\nimport key from '../../../i18n/key';\r\nimport { Card, CardBody, CardHeader, Col, Row, Badge, Button } from \"reactstrap\";\r\nimport { AppSwitch } from '@coreui/react';\r\nimport { RingLoader } from 'react-spinners';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { toastr } from 'react-redux-toastr';\r\nimport { ConfirmModal } from '../../../components/modals/confirmModal';\r\nimport { ErrorAlert } from '../../../components/alerts/errorAlert';\r\nimport { getAllRoles, changeStatusRole, deleteRole } from '../../../actions/role';\r\nimport { commonConstant } from '../../../contants/common';\r\nimport { isNullOrEmptyObject, removeItemFromItems } from '../../../utilities/validate';\r\nimport { getSessionStorage, setSessionStorage } from '../../../utilities/storage';\r\nimport { applyAuthorization } from '../../../services';\r\n\r\nvar _handleItem = null;\r\nvar _currentAtion = null;\r\nclass Role extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowStatusConfirmModal: false,\r\n            isShowDeleteConfirmModal: false,\r\n            isEnableFilter: getSessionStorage(commonConstant.FILTER_ROLE) === 'true' ? true : false,\r\n        };\r\n        //Add token to header\r\n        applyAuthorization();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAllRoles();\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        let { t, roles, deleteItem } = nextProps;\r\n        if (deleteItem && deleteItem.isLoading) {\r\n            _currentAtion = commonConstant.DELETE;\r\n            return;\r\n        }\r\n        if (roles.responseData && roles.responseData.data && roles.responseData.data.length > 0) {\r\n            let currentList = roles.responseData.data;\r\n            if (_currentAtion === commonConstant.DELETE && deleteItem && !deleteItem.isLoading && !isNullOrEmptyObject(deleteItem.responseData)) {\r\n                if (deleteItem.isError) {\r\n                    toastr.error(t(key.common.deleteInfo), t(key.common.deleteErrorInfo));\r\n                } else {\r\n                    roles.responseData.data.Result = removeItemFromItems(_handleItem, currentList);\r\n                    toastr.success(t(key.common.deleteInfo), t(key.common.deleteSuccessInfo));\r\n                }\r\n            }\r\n            _currentAtion = null;\r\n        }\r\n    }\r\n    openModalDelete = (item) => {\r\n        _handleItem = item;\r\n        this.handleToggleModal(commonConstant.DELETE, null);\r\n    }\r\n    handleDelete = () => {\r\n        if (_handleItem && _handleItem.RoleName) {\r\n            this.props.deleteRole(_handleItem.RoleName);\r\n        }\r\n    }\r\n    handleToggleModal = (nameFn, isSelected = false) => {\r\n        if (isSelected && nameFn === commonConstant.CHANGE_STATUS) {\r\n            this.handleChangeStatus();\r\n        }\r\n        else if (isSelected && nameFn === commonConstant.DELETE) {\r\n            this.handleDelete();\r\n        }\r\n        this.setState({\r\n            isShowStatusConfirmModal: nameFn === commonConstant.CHANGE_STATUS ? !this.state.isShowStatusConfirmModal : false,\r\n            isShowDeleteConfirmModal: nameFn === commonConstant.DELETE ? !this.state.isShowDeleteConfirmModal : false,\r\n        });\r\n    }\r\n    handleEdit = (item) => {\r\n        setSessionStorage(commonConstant.ROLE_KEY_EDIT, item.RoleName);\r\n        const { history } = this.props;\r\n        if (history) {\r\n            history.push('role/' + item.Id);\r\n        }\r\n    }\r\n    handleSwitchFilter = () => {\r\n        setSessionStorage(commonConstant.FILTER_ROLE, !this.state.isEnableFilter)\r\n        this.setState({\r\n            isEnableFilter: !this.state.isEnableFilter,\r\n        });\r\n    }\r\n    renderMainContent(data, t, classAnimated, isLoadingDelete) {\r\n        let columns = Object.keys(data[0]).map((key, id) => {\r\n            return {\r\n                Header: key,\r\n                headerClassName: 'header-table',\r\n                accessor: key,\r\n                show: (key === 'Status') ? false : true,\r\n                minWidth: id === 0 ? 150 : 100,\r\n                className: id === 0 ? 'text-center' : '',\r\n            };\r\n        });\r\n        columns.unshift({\r\n            Header: '#',\r\n            headerClassName: 'header-table',\r\n            accessor: 'identifierNumber',\r\n            Cell: (row) => { return <span>{row.index + 1}</span> },\r\n            minWidth: 20,\r\n            className: 'text-center',\r\n        });\r\n        columns.push({\r\n            Header: 'Update',\r\n            headerClassName: 'header-table',\r\n            accessor: 'update',\r\n            Cell: row => (\r\n                <>\r\n                    <i onClick={() => this.handleEdit(row.original)} className=\"handle-pointer fa fa-edit fa-lg\"></i> &nbsp;\r\n        <i onClick={() => this.openModalDelete(row.original)} className=\"handle-pointer fa fa-trash-o fa-lg\"></i>\r\n                </>\r\n            ),\r\n            width: 80,\r\n            className: 'text-center',\r\n        });\r\n        const propsOfTable = {\r\n            data: data,\r\n            columns: columns,\r\n            defaultPageSize: 10,\r\n            filterable: this.state.isEnableFilter,\r\n        }\r\n        return (\r\n            <div className={classAnimated}>\r\n                <LoadingOverlay active={isLoadingDelete} spinner text={t(key.common.processingSpinner)} className=\"overlayFullScreen\" />\r\n                <Card>\r\n                    <CardHeader>\r\n                        <Row>\r\n                            <Col xs=\"6\">\r\n                                <Link to=\"/role/add\">\r\n                                    <Button size=\"sm\" className=\"btn-dropbox btn-brand icon mr-1 mb-1\">\r\n                                        <i className=\"fa fa-plus\"></i>\r\n                                    </Button>\r\n                                </Link>\r\n                                <strong>{t(key.role.rolesList)}</strong>\r\n                            </Col>\r\n                            <Col xs=\"6\" className={'text-right'} title={t(key.common.filterDesc)}>\r\n                                {t(key.common.filterTitle)}\r\n                                <AppSwitch className={'filter-users float-right mx-1'} variant={'pill'}\r\n                                    color={'primary'} onChange={this.handleSwitchFilter}\r\n                                    checked={this.state.isEnableFilter} />\r\n                            </Col>\r\n                        </Row>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <ReactTable {...propsOfTable} />\r\n                        <ConfirmModal isOpenModal={this.state.isShowStatusConfirmModal}\r\n                            toggleModal={() => this.handleToggleModal(commonConstant.CHANGE_STATUS, false)}\r\n                            selectedYes={() => this.handleToggleModal(commonConstant.CHANGE_STATUS, true)}\r\n                            className=\"warning\" sizeModal=\"md\" backdropModal=\"static\"\r\n                            headerTitle={t(key.common.infoTitleConfirmModal)}\r\n                            bodyContent={t(key.common.switchStatusConfirmModal)}\r\n                            textBtnYes={t(key.common.btnOk)}\r\n                            textBtnNo={t(key.common.btnCancel)}\r\n                        />\r\n                        <ConfirmModal isOpenModal={this.state.isShowDeleteConfirmModal}\r\n                            toggleModal={() => this.handleToggleModal(commonConstant.DELETE, false)}\r\n                            selectedYes={() => this.handleToggleModal(commonConstant.DELETE, true)}\r\n                            className=\"danger\" sizeModal=\"md\" backdropModal=\"static\"\r\n                            headerTitle={t(key.common.infoTitleConfirmModal)}\r\n                            bodyContent={t(key.common.deleteConfirmModal)}\r\n                            textBtnYes={t(key.common.btnOk)}\r\n                            textBtnNo={t(key.common.btnCancel)}\r\n                        />\r\n                        {/* Option className modal: primary, info, danger, warning,success, \r\n                  Size modal: sm, md, lg */}\r\n                    </CardBody>\r\n                </Card>\r\n            </div >\r\n        );\r\n    }\r\n    render() {\r\n        const { t, deleteItem, roles } = this.props;\r\n\r\n        const classAnimated = 'animated fadeIn';\r\n        if (!roles) return;\r\n        if (roles.isLoading) {\r\n            return <RingLoader sizeUnit={\"px\"} size={100} color={'#86E7D4'} loading={roles.isLoading} />\r\n        } else if (roles.isError) {\r\n            return <ErrorAlert responseData={roles.responseData}\r\n                msgErrorGetAPI={t(key.common.errorGetAllAPI)} msgError401GetAPI={t(key.common.error401GetAPI)}\r\n                msgRedirectToLogin={t(key.common.redirectToLogin)} />\r\n        } else {\r\n            if (roles.responseData && roles.responseData.data && roles.responseData.data.length > 0) {\r\n                return this.renderMainContent(roles.responseData.data, t, classAnimated, deleteItem.isLoading);\r\n            } else {\r\n                return <div className={classAnimated}><Row><Col xs=\"12\" lg=\"12\">{t(key.common.noDataFound)}</Col></Row></div>;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    roles: state.getAllRolesReducer,\r\n    changeStatus: state.changeStatusRoleReducer,\r\n    deleteItem: state.deleteRoleReducer,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getAllRoles,\r\n    changeStatusRole,\r\n    deleteRole,\r\n};\r\n\r\nexport default translate()(connect(mapStateToProps, mapDispatchToProps)(Role));"],"sourceRoot":""}